{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/file-upload/file-upload.component.ts","./src/app/file-upload/file-upload.component.html","./src/app/file-upload/file-upload.module.ts","./src/app/file-upload/form.guard.ts","./src/app/file-upload/upload.service.ts","./src/app/home/welcome.component.ts","./src/app/home/welcome.component.html","./src/app/r-form/dynamic-form-question.component.ts","./src/app/r-form/dynamic-form-question.component.html","./src/app/r-form/dynamic-form.component.ts","./src/app/r-form/dynamic-form.component.html","./src/app/r-form/question-base.ts","./src/app/r-form/question-control.service.ts","./src/app/r-form/question-dropdown.ts","./src/app/r-form/question-loc.ts","./src/app/r-form/question-textbox.ts","./src/app/r-form/question.service.ts","./src/app/r-form/r-form.component.ts","./src/app/r-form/r-form.module.ts","./src/app/shared/event.service.ts","./src/app/shared/st-parameter.service.ts","./src/app/users/user-detail.component.ts","./src/app/users/user-detail.component.html","./src/app/users/user-detail.guard.ts","./src/app/users/user-list.component.ts","./src/app/users/user-list.component.html","./src/app/users/user.module.ts","./src/app/users/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Inject, OnDestroy, OnInit, Injectable } from '@angular/core';\nimport { Observable, Observer, fromEvent, merge, interval, Subscription, Subject,timer } from 'rxjs';\nimport { map, first,switchMap, take } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { EventService } from \"./shared/event.service\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { FileUploadService } from \"./file-upload/upload.service\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n  MatSnackBarRef,\n  MAT_SNACK_BAR_DATA\n} from '@angular/material/snack-bar';\n/** Service for cross component communication. */\n@Injectable()\nexport class CountdownService {\n  startTimer = new Subject < number > ();\n  timer = this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ));\n  start(time: number) {\n    const seconds = Math.floor(time / 1000);\n    this.startTimer.next(seconds);\n  }\n  timeLeft(): Observable < number > {\n    return this.timer;\n  }\n}\n@Component({\n  selector: 'pm-root',\n  template: `\n    <mat-toolbar color=\"primary\">\n    <nav class='navbar navbar-expand navbar-dark'>\n        <span style=\"color:white;\" class='navbar-brand' routerLinkActive='active' [routerLink]=\"['/']\">{{pageTitle}}</span>\n        <ul class=' navbar-nav nav-pills'>\n          <li class=\"nav-item\"><a class='nav-link' style=\"color:white;\" routerLinkActive='active' [routerLink]=\"['/home']\">Home</a></li>\n          <li class=\"nav-item\"><a class='nav-link' style=\"color:white;\" routerLinkActive='active' [routerLink]=\"['/users']\">Citizens</a></li>\n          <li class=\"nav-item\"><a class='nav-link' style=\"color:white;\" routerLinkActive='active' [routerLink]=\"['/form']\">Form</a></li>\n        </ul>\n    </nav>\n    </mat-toolbar>\n    <div class='container'>\n      <router-outlet></router-outlet>\n    </div>\n    `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  pageTitle = 'YARLOMIA';\n  val = 12000;\n  snval = 2000;\n  autodelay = 0;\n  private sub: Subscription;\n  private check: Subscription;\n  private source = interval(this.val);\n  test: boolean;\n  old: string;\n  oldloc: string;\n  snackBarRef: MatSnackBarRef < CountdownSnackbarComponent > ;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  constructor(private _http: HttpClient, private stService: StateParameterService, private UpService: FileUploadService,\n    private snackBar: MatSnackBar, private countdown: CountdownService, private _sse: EventService, private loc: EventService) {\n    this.createOnline$().subscribe(isOnline => {\n      if (isOnline) {\n        this._sse.getUpdates();\n        this.val = 12000;\n        this.test = false;\n\n        this.check = this.source.subscribe(next => {\n          if (this.test) {\n            this.checker();\n            console.log(\"access interval\");\n          }\n        });\n      } else {\n        //this.sub.unsubscribe();\n        this._sse.evs.close();\n        this.old = \"\";\n        this.oldloc = \"\";\n        if (this.check)\n          this.check.unsubscribe();\n        this.openSnackBar(\"Device Disconnected\", 'danger-snackbar');\n      }\n    });\n  }\n  ngOnInit(): void {\n    var busy: boolean;\n    this.stService.busy.subscribe(foo => {\n      if (!foo && this.old == 'yx') {\n        busy = false;\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        console.log(\"Access: busy\");\n        this.oldloc = \"\";\n      } else busy = true;\n    });\n    this.sub = this._sse.returnAsObservable().subscribe(msg => {\n      console.log(msg);\n      if (msg == 'yx' && !busy) {\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        this.old = msg;\n        this.oldloc = \"\";\n        console.log(\"Access: \" + msg);\n      }else if ((msg == \"rx\" || msg == 'nx') ) {\n        this.loc.getUpdates(EventService.local);\n        this.old = msg;\n        console.log(\"Access: \" + msg);\n      } else if (msg == 'y' && msg != this.oldloc) {\n        this.stService.host = EventService.local;\n        this.openSnackBar(\"Local Mode\", 'blue-snackbar');\n        this.restore();\n        this.test = false;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      } else if ((msg == 'r' || msg == 'n' || msg == 'e') && msg != this.oldloc) {\n        this.stService.host = \"\";\n        this.loc.stopUpdates();\n        this.test = true;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      }else if (msg == 'ex') {\n        if(!this.test)\n          this.loc.getUpdates(EventService.local);\n        setTimeout(() => {\n            this.loc.stopUpdates();\n            this._sse.getUpdates();\n          },\n          10000);\n          console.log(\"Access: \"+msg);\n        this.old = msg;\n      }\n      if (msg == 'yx')\n        this.old = msg;\n    });\n  }\n  ngOnDestroy(): void {\n    this._sse.stopUpdates();\n    this.loc.stopUpdates();\n    this.sub.unsubscribe();\n    this.check.unsubscribe();\n  }\n  restore(): void {\n    if (this.stService.form)\n      this._http.post(this.stService.host + '/api/form', this.stService.form).subscribe(data => {\n        setTimeout(() => {\n            this.openSnackBar(\"Personal Informations Saved\", 'blue-snackbar', 3000);\n          },\n          3000);\n      });\n    if (this.stService.pic) {\n      this.UpService.postImg(this.stService.pic, this.stService.id, this.stService.host, \"pic\").subscribe(\n        (event: any) => {\n          setTimeout(() => {\n              this.openSnackBar(\"Portrait Uploaded Successfully!\", 'blue-snackbar', 3000);\n            },\n            6000);\n        });\n    }\n  }\n  openSnackBar(msg: string, color = 'success-snackbar', val = 10000) {\n    this.snackBar.open(msg, \"OK\", {\n      duration: val,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: [color]\n    });\n  }\n  errsnackbar(msg: string, duration: number = 10000, color: string = 'danger-snackbar') {\n    if (this.snackBarRef)\n      this.snackBarRef.dismiss();\n    this.snackBarRef = this.snackBar.openFromComponent(CountdownSnackbarComponent, {\n      duration,\n      data: msg,\n      panelClass: [color],\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n    this.countdown.start(duration);\n    this.snackBarRef.onAction().subscribe(() => {\n      this.snval *= 2;\n      this.val *= 2;\n      this.check.unsubscribe();\n      this.source = interval(this.val);\n      this.checker(this.val - this.snval);\n      this.check = this.source.subscribe(next => {\n        this.checker(this.val - this.snval);\n      });\n    });\n  }\n  infosnack(msg: string = \"Connecting...\") {\n    this.snackBar.open(msg, \"OK\", {\n      duration: 1000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: ['blue-snackbar']\n    });\n  }\n  createOnline$() {\n    return merge < boolean > (\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer < boolean > ) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n  checker(val = 10000): void {\n    this._http.get(EventService.local+\"/api/db\", {\n        observe: 'response'\n      })\n      .pipe(first())\n      .subscribe(resp => {\n        if (resp.status === 200) {\n          if (this.test) {\n            this.loc.getUpdates(EventService.local);\n            console.log(\"back to local mode\");\n          }\n        }\n      }, err => {\n        console.log(\"still offline mode\");\n        this.infosnack();\n        setTimeout(() => {\n            this.errsnackbar(\"Offline Mode\", val);\n          },\n          2000);\n      });\n  }\n}\n/** Component opened inside a snackbar. */\n@Component({\n  selector: 'snackbar',\n  template: `\n  <button class=\"pull-right\" (click)=\"snackBarRef.dismissWithAction()\" mat-stroked-button color=\"warn\">RETRY NOW</button>\n  <span >{{data}} <br> Retrying in {{ timeLeft$ | async }} seconds...</span>\n  `\n})\nexport class CountdownSnackbarComponent {\n\n  timeLeft$ = this.countdown.timeLeft();\n\n  constructor(private countdown: CountdownService, @Inject(MAT_SNACK_BAR_DATA) public data: any,\n    public snackBarRef: MatSnackBarRef < CountdownSnackbarComponent > ) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent,CountdownSnackbarComponent,CountdownService } from './app.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { UserModule } from './users/user.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FileUploadModule } from './file-upload/file-upload.module';\nimport { RFormModule } from './r-form/r-form.module';\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { CookieService } from 'ngx-cookie-service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    CountdownSnackbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'home', component: WelcomeComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: '**', redirectTo: 'home', pathMatch: 'full' }\n    ]),\n    UserModule,\n    RFormModule,\n    FileUploadModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSnackBarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  entryComponents: [\n    CountdownSnackbarComponent,\n  ],\n  providers:[\n    CountdownService,\n    StateParameterService,CookieService\n  ],\n  exports:[\n    MatToolbarModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit , EventEmitter,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { FileUploadService } from \"./upload.service\";\nimport { Router, NavigationStart } from '@angular/router';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { StateParameterService } from '../shared/st-parameter.service';\nimport { EventService } from '../shared/event.service';\n\nexport function hostFactory() { return window.location.hostname; }\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n  imageURL: string;\n  uploadForm: FormGroup;\n  selectedFiles: FileList;\n  currentFile: File;\n  progress = 0;\n  message:string;\n  url:string;\n  pageTitle:string;\n  type:string;\n  constructor(private router : Router,private stService :StateParameterService,\n    public fb: FormBuilder,private fileUploadService: FileUploadService) {\n    // Reactive Form\n    this.uploadForm = this.fb.group({\n      avatar: [null],\n      name: ['']\n    });\n  }\n  ngOnInit(): void {\n    if (this.router.url == '/form/pic') {\n      this.pageTitle = \"Upload Portrait\";\n      this.type=\"pic\";\n    }\n    else if (this.router.url == '/form/bio') {\n      this.pageTitle = \"Upload Biometry Info\";\n      this.type=\"bio\";\n    }\n  }\nselectFile(event): void {\n  this.selectedFiles = event.target.files;\n  const file = (event.target as HTMLInputElement).files[0];\n    this.uploadForm.patchValue({\n      avatar: file\n    });\n    this.uploadForm.get('avatar').updateValueAndValidity()\n    // File Preview\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imageURL = reader.result as string;\n    }\n    reader.readAsDataURL(file)\n}\n\n  upload(): void {\n    this.progress = 0;\n    this.currentFile = this.selectedFiles.item(0);\n\n    this.fileUploadService.postImg(this.currentFile,this.stService.id,this.stService.host,this.type).subscribe(\n      (event: any) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.message = event.body.message;\n          //console.log(event.body.message);\n          this.message = 'Uploaded Successfully!';\n          if (this.router.url === '/form/pic'){\n            this.stService.pic=this.currentFile;\n            this.url='/form/bio';\n          }\n          else if (this.router.url === '/form/bio'){\n            this.stService.form=null;\n            this.stService.pic=null;\n            if(this.stService.host==EventService.local)\n              this.stService.busy.emit(false);\n            this.url='/';\n          }\n          setTimeout(() =>\n          {\n              this.router.navigate([this.url]);\n          },\n          1000);\n\n          this.selectedFiles = undefined;\n        }\n      },\n      err => {\n        this.progress = 0;\n        this.message = 'Could not upload the file!';\n        //this.currentFile = undefined;\n      });\n\n  }\n}\n","\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n\n        <form [formGroup]=\"uploadForm\" >\n          <div *ngIf=\"currentFile\" class=\"progress\">\n            <div\n              class=\"progress-bar progress-bar-info progress-bar-striped\"\n              role=\"progressbar\"\n              attr.aria-valuenow=\"{{ progress }}\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: progress + '%' }\"\n            >\n              {{ progress }}%\n            </div>\n          </div>\n\n          <mat-form-field style=\"display: block;margin-left: auto;margin-right: auto;width: 80%;\" class=\"example-full-width\">\n            <mat-label>Select Image</mat-label>\n            <ngx-mat-file-input type=\"file\" accept=\"image/*\" placeholder=\"Select Image\" valuePlaceholder=\"No image file selected\"\n             (change)=\"selectFile($event)\"></ngx-mat-file-input>\n            <mat-icon matSuffix>image</mat-icon>\n            <!--<input style=\"display: block;margin-left: auto;margin-right: auto;width: 100%;\"\n            type=\"file\" accept=\"image/*\" (change)=\"selectFile($event)\" />-->\n          </mat-form-field>\n\n          <button class=\"btn btn-success\" style=\"display: block;margin-left: auto;margin-right: auto;width: 50%;\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\n            Upload\n          </button>\n         <!-- <button type=\"submit\" mat-button color=\"primary\">\n            Done\n          </button>-->\n          <div class=\"alert alert-light text-center\" role=\"alert\" >{{ message }}</div>\n          <div class=\"card\">\n            <div class=\"card-header\">Preview</div>\n              <!-- Image Preview -->\n              <div  class=\"imagePreview\" >\n                <img style=\"display: block;margin-left: auto;margin-right: auto;width: 100%;\"\n                 *ngIf=\"imageURL && imageURL !== ''\" [src]=\"imageURL\" [alt]=\"uploadForm.value.name\">\n              </div>\n          </div>\n\n        </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FileUploadComponent } from './file-upload.component';\nimport { RouterModule } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { FormGuard } from \"./form.guard\";\n@NgModule({\n  declarations: [\n    FileUploadComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressBarModule,\n    ReactiveFormsModule,\n    MaterialFileInputModule,\n    RouterModule.forChild([\n      { path: 'form/pic', canActivate: [FormGuard], component: FileUploadComponent },\n      { path: 'form/bio', canActivate: [FormGuard], component: FileUploadComponent }\n    ]),\n  ],\n  exports:[\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ]\n})\nexport class FileUploadModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGuard implements CanActivate {\n\n  constructor(private router: Router,private stService:StateParameterService) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    //const id = next.url[2].path;\n\n    if (!this.stService.id) {\n      alert('Please complete the form before uploading the photos!');\n      this.router.navigate(['/form']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent,HttpHeaders } from  '@angular/common/http';\nimport { Observable, } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n  constructor(private http: HttpClient) { }\n\n  postImg(file: File,id:string,hostname:string,type:string): Observable<HttpEvent<any>> {\n    const formData = new FormData();\n    formData.append('_id',id);\n    formData.append('file', file,file.name);\n\n    const req = new HttpRequest('POST', hostname+'/api/upload/'+type, formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n    return this.http.request(req);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n  public pageTitle = 'Home';\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n      <div class=\"text-center\">\n        <img src=\"./assets/images/logo.jpg\"\n             class=\"img-responsive center-block\"\n             style=\"max-height:500px;padding-bottom:50px;max-width:100%;\" />\n      </div>\n\n      <div class=\"text-center\">\n        <a href=\"https://github.com/oksyassine/YARLOMIA\">Source Code</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { QuestionBase } from './question-base';\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  styleUrls: ['./input-form.css'],\r\n  templateUrl: './dynamic-form-question.component.html'\r\n})\r\nexport class DynamicFormQuestionComponent {\r\n  @Input() question: QuestionBase<string>;\r\n  @Input() form: FormGroup;\r\n  get isValid() { return this.form.controls[this.question.key].valid; }\r\n}\r\n","      <div [formGroup]=\"form\">\r\n\r\n        <div [ngSwitch]=\"question.controlType\" >\r\n          <mat-form-field  class=\"example-full-width\">\r\n          <mat-label [attr.for]=\"question.key\">{{question.label}}</mat-label>\r\n          <input  matInput *ngSwitchCase=\"'textbox'\" [formControlName]=\"question.key\"\r\n                  [id]=\"question.key\" [type]=\"question.type\">\r\n\r\n          <textarea matInput [id]=\"question.key\" *ngSwitchCase=\"'area'\" [formControlName]=\"question.key\">\r\n          </textarea>\r\n          <mat-select [id]=\"question.key\" *ngSwitchCase=\"'dropdown'\" [formControlName]=\"question.key\">\r\n            <mat-option *ngFor=\"let opt of question.options\" [value]=\"opt.key\">{{opt.value}}</mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"!isValid\">\r\n            {{question.label}} is required\r\n          </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n","import { Component, Input, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { QuestionBase } from './question-base';\r\nimport { QuestionControlService } from './question-control.service';\r\nimport { LocationStrategy, PathLocationStrategy} from '@angular/common';\r\nimport { StateParameterService } from \"../shared/st-parameter.service\";\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { EventService } from '../shared/event.service';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-form',\r\n  templateUrl: './dynamic-form.component.html',\r\n  providers: [QuestionControlService, {provide: LocationStrategy, useClass: PathLocationStrategy}]\r\n})\r\nexport class DynamicFormComponent implements OnInit {\r\n\r\n  @Input() questions: QuestionBase<string>[] = [];\r\n  form: FormGroup;\r\n  payLoad = '';\r\n  destroy$: Subject<boolean> = new Subject<boolean>();\r\n  obj:JSON;\r\n  constructor(private cookieService: CookieService,private stService :StateParameterService,\r\n    private qcs: QuestionControlService,private router : Router,private http: HttpClient) { }\r\n  ngOnInit() {\r\n    this.form = this.qcs.toFormGroup(this.questions);\r\n    //const start = Date.now();\r\n    //this.cookieService.set( 'cin', \"this.stService.id\",start+60,'/',this.hostname,true,\"None\");\r\n    //console.log(this.cookieService.getAll());\r\n  }\r\n  onSubmit() {\r\n    //this.payLoad = JSON.stringify(this.form.getRawValue());\r\n    this.obj = this.form.getRawValue();\r\n    this.obj[\"_id\"]= \"dossier_\"+this.obj['cin'];\r\n    this.http.post(this.stService.host+'/api/form', this.obj).pipe(takeUntil(this.destroy$)).subscribe(data => {\r\n      this.stService.id=this.obj['_id'];//JSON.stringify(data);\r\n      this.stService.form=this.obj;\r\n      if(this.stService.host==EventService.local)\r\n        this.stService.busy.emit(true);\r\n      //const start = Date.now();\r\n      //this.cookieService.set( 'data', this.stService.id ,start+60000,'/',this.hostname,true);\r\n      //console.log(this.cookieService.getAll());\r\n      setTimeout(() =>\r\n      {\r\n        this.router.navigate([\"/form/pic\"]);\r\n      },\r\n      1000);\r\n    });\r\n  }\r\n}\r\n","﻿<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    Personal Informations\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"container-fluid\">\r\n<div>\r\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\r\n\r\n    <div class=\"text-center\" *ngFor=\"let question of questions\" class=\"form-row\">\r\n      <app-question style=\"display: block;margin-left: auto;margin-right: auto;width: 50%;\"\r\n      [question]=\"question\" [form]=\"form\"></app-question>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <button style=\"display: block;margin-left: auto;margin-right: auto;width: 10%;\"\r\n       mat-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\">Save</button>\r\n    </div>\r\n  </form>\r\n\r\n  <!--<div style=\"display: block;margin-left: auto;margin-right: auto;width: 50%;\"\r\n   *ngIf=\"payLoad\" class=\"form-row\">\r\n    <strong>Saved the following values</strong><br>{{payLoad}}\r\n  </div>-->\r\n</div>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n","export class QuestionBase<T> {\r\n  value: T;\r\n  key: string;\r\n  label: string;\r\n  required: boolean;\r\n  order: number;\r\n  controlType: string;\r\n  type: string;\r\n  options: {key: string, value: string}[];\r\n\r\n  constructor(options: {\r\n      value?: T;\r\n      key?: string;\r\n      label?: string;\r\n      required?: boolean;\r\n      order?: number;\r\n      controlType?: string;\r\n      type?: string;\r\n      options?: {key: string, value: string}[];\r\n    } = {}) {\r\n    this.value = options.value;\r\n    this.key = options.key || '';\r\n    this.label = options.label || '';\r\n    this.required = !!options.required;\r\n    this.order = options.order === undefined ? 1 : options.order;\r\n    this.controlType = options.controlType || '';\r\n    this.type = options.type || '';\r\n    this.options = options.options || [];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { QuestionBase } from './question-base';\r\n\r\n@Injectable()\r\nexport class QuestionControlService {\r\n  constructor() { }\r\n\r\n  toFormGroup(questions: QuestionBase<string>[] ) {\r\n    const group: any = {};\r\n\r\n    questions.forEach(question => {\r\n      group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\r\n                                              : new FormControl(question.value || '');\r\n    });\r\n    return new FormGroup(group);\r\n  }\r\n}\r\n","import { QuestionBase } from './question-base';\r\n\r\nexport class DropdownQuestion extends QuestionBase<string> {\r\n  controlType = 'dropdown';\r\n}\r\n","import { QuestionBase } from './question-base';\r\n\r\nexport class AreaQuestion extends QuestionBase<string> {\r\n  controlType = 'area';\r\n}\r\n","import { QuestionBase } from './question-base';\r\n\r\nexport class TextboxQuestion extends QuestionBase<string> {\r\n  controlType = 'textbox';\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AreaQuestion } from './question-loc';\r\nimport { QuestionBase } from './question-base';\r\nimport { TextboxQuestion } from './question-textbox';\r\nimport { DropdownQuestion } from './question-dropdown';\r\n\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class QuestionService {\r\n\r\n  // TODO: get from a remote source of question metadata\r\n  getQuestions() {\r\n\r\n    const questions: QuestionBase<string>[] = [\r\n\r\n      new DropdownQuestion({\r\n        key: 'sexe',\r\n        label: 'Gender',\r\n        required: true,\r\n        options: [\r\n          {key: 'M',  value: 'Man'},\r\n          {key: 'F',  value: 'Woman'}\r\n        ],\r\n        order: 5\r\n      }),\r\n      new AreaQuestion({\r\n        key: 'address',\r\n        label: 'Address',\r\n        required: true,\r\n        order: 4\r\n      }),\r\n      new TextboxQuestion({\r\n        key: 'cin',\r\n        label: 'CIN',\r\n        required: true,\r\n        order: 3\r\n      }),\r\n      new TextboxQuestion({\r\n        key: 'firstName',\r\n        label: 'First name',\r\n        required: true,\r\n        order: 1\r\n      }),\r\n\r\n      new TextboxQuestion({\r\n        key: 'lastName',\r\n        label: 'Last Name',\r\n        type: 'text',\r\n        required: true,\r\n        order: 2\r\n      })\r\n    ];\r\n\r\n    return of(questions.sort((a, b) => a.order - b.order));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { QuestionService } from './question.service';\r\nimport { QuestionBase } from './question-base';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <div>\r\n      <app-dynamic-form [questions]=\"questions$ | async\"></app-dynamic-form>\r\n    </div>\r\n  `,\r\n  providers:  [QuestionService]\r\n})\r\nexport class RFormComponent {\r\n  questions$: Observable<QuestionBase<any>[]>;\r\n\r\n  constructor(service: QuestionService) {\r\n    this.questions$ = service.getQuestions();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { RFormComponent } from './r-form.component';\r\nimport { DynamicFormComponent } from './dynamic-form.component';\r\nimport { DynamicFormQuestionComponent } from './dynamic-form-question.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\n@NgModule({\r\n  imports: [ BrowserModule, ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    RouterModule.forChild([\r\n      { path: 'form', component: RFormComponent },\r\n    ]), ],\r\n  declarations: [ RFormComponent, DynamicFormComponent, DynamicFormQuestionComponent ],\r\n  bootstrap: [ RFormComponent ],\r\n  exports:[\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule\r\n  ]\r\n})\r\nexport class RFormModule {\r\n  constructor() {\r\n  }\r\n}\r\n","import {BehaviorSubject} from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  static server=\"http://localhost:3000\";\n  static local=\"http://localhost:3003\";\n  constructor() {}\n  evs: EventSource;\n  ret:any;\n  private subj = new BehaviorSubject(this.ret);\n  returnAsObservable() {\n      return this.subj.asObservable();\n  }\n  getUpdates(host=EventService.server) {\n      let subject = this.subj;\n      let k=-1;\n      if (typeof(EventSource) !== 'undefined') {\n          this.evs = new EventSource(host+'/api/state');\n          this.evs.onopen = function(e) {\n              console.log(\"Opening connection with \" + host);\n          }\n          this.evs.addEventListener(\"dbx\", function(e) {\n            if (k==-1 || k==0)\n              subject.next(e[\"data\"]+'x');\n            k=0;\n          });\n          this.evs.addEventListener(\"db\", function(e) {\n            if (k==-1 || k==0)\n              subject.next(e[\"data\"]);\n            k=0;\n          });\n          this.evs.onerror = function(e) {\n            if (k==-1){\n              if (host==EventService.server)\n                subject.next('ex');\n              else subject.next('e');\n            }\n            if(k==2){\n              if(host==EventService.server)\n                subject.next(\"rx\");\n              else subject.next(\"r\");\n            }\n            if (this.readyState == 0) {\n              console.log(\"Reconnecting… \"+host);\n              k++;\n            }\n          }\n      }\n  }\n  stopUpdates() {\n    if(this.evs.url==EventService.server+\"/api/state\"){\n      return null;\n    }\n    console.log(\"Closing connection with \" + this.evs.url);\n      this.evs.close();\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateParameterService {\n  id: string;\n  host:string;\n  form:JSON;\n  pic:File;\n  busy: EventEmitter<boolean> = new EventEmitter();\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { IUser } from './user';\nimport { UserService } from './user.service';\n\n@Component({\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n  pageTitle = 'Citizen Detail';\n  errorMessage = '';\n  user: IUser | undefined;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private userService: UserService,\n              private domSanitizer: DomSanitizer) {\n  }\n\n  ngOnInit(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = param;\n      this.getUser(id);\n    }\n  }\n\n  getUser(id: string): void {\n    this.userService.getUser(id).subscribe({\n      next: user => this.user = user,\n      error: err => this.errorMessage = err\n    });\n  }\n  sanatizeUrl(b64ImageUrl): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(b64ImageUrl);\n  }\n  onBack(): void {\n    this.router.navigate(['/users']);\n  }\n}","<div class='card'\n     *ngIf='user'>\n  <div class='card-header'>\n    {{pageTitle + ': ' + user.firstName + ' ' + user.lastName}}\n  </div>\n\n  <div class='card-body'>\n    <div class='row'>\n      <div class='col-md-4'>\n        <div class='row'>\n          <div class='col-md-4'>First Name:</div>\n          <div class='col-md-8'>{{user.firstName}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Last Name:</div>\n          <div class='col-md-8'>{{ user.lastName}}</div>\n        </div>        <div class='row'>\n          <div class='col-md-4'>CIN:</div>\n          <div class='col-md-8'>{{user.cin}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'> Address:</div>\n          <div class='col-md-8'>{{ user.address}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Genre:</div>\n          <div class='col-md-8'>{{ user.sexe}}</div>\n        </div>\n      </div>\n      <div class='col-md-8'>\n\n      <div class='row'>\n\n      <div class='col-md-4'>\n        <img class='center-block img-responsive'\n             [style.width.px]='100'\n             [style.margin.px]='2'\n             [src]='sanatizeUrl(user.pic)'\n             [title]='user.firstName'\n             >\n      </div>\n\n\n      <div class='col-md-8'>\n        <img class='center-block img-responsive'\n             [style.width.px]='100'\n             [style.margin.px]='2'\n             [src]='sanatizeUrl(user.bio)'\n             [title]='user.firstName'\n             >\n      </div>\n    </div>\n\n\n      </div>\n    </div>\n  </div>\n\n  <div class='card-footer'>\n    <button class='btn btn-outline-secondary'\n            (click)='onBack()'\n            style='width:80px'>\n      <i class='fa fa-chevron-left'></i> Back\n    </button>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDetailGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const id = next.url[1].path;\n    \n    if (!id) {\n      alert('Invalid citizen Id');\n      this.router.navigate(['/users']);\n      return false;\n    }\n    return true;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { IUser } from './user';\nimport { UserService } from './user.service';\n\n@Component({\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n\n    ]),\n  ],\n})\nexport class UserListComponent implements OnInit {\n  pageTitle ='Citizens List';\n  imageWidth = 50;\n  imageMargin = 2;\n  showImage = true;\n  errorMessage = '';\n  expandedElement: IUser | null;\n  isLoadingResults = false;\n\n  Users: IUser[] = [];\n  displayedColumns: string[] = ['pic', 'firstName', 'lastName', 'cin','address','sexe'];\n  dataSource;\n\n  constructor(private domSanitizer: DomSanitizer,private userService: UserService) { }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  sanatizeUrl(b64ImageUrl): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(b64ImageUrl);\n  }\n\n\n\n  ngOnInit(): void {\n    this.isLoadingResults = true;\n\n    this.userService.getUsers().subscribe({\n      next: Users => {\n        this.Users = Users;\n        this.dataSource = new MatTableDataSource(this.Users);\n        this.isLoadingResults = false;\n\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n}","<div class='card'>\n  <div class='card-header'>\n    {{pageTitle}}\n  </div>\n  <div class='card-body'>\n    <div *ngIf=\"Users && Users.length;then contenu_bon else contenu_pas_bon\"></div>\n    <ng-template #contenu_bon>\n      <mat-form-field *ngIf='Users && Users.length'>\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n      </mat-form-field>\n      <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" *ngIf='Users && Users.length'>\n\n        <ng-container matColumnDef=\"pic\">\n          <th mat-header-cell *matHeaderCellDef> IMAGE </th>\n\n          <td mat-cell *matCellDef=\"let element\" >\n              <img *ngIf='showImage'\n            [src]='sanatizeUrl(element.pic)'\n            [title]='element.firstName'\n            [style.width.px]='imageWidth'\n            [style.margin.px]='imageMargin'> </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"firstName\">\n          <th mat-header-cell *matHeaderCellDef> FIRST NAME </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <a [routerLink]=\"['/users', element._id]\">\n            {{element.firstName}} </a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lastName\">\n          <th mat-header-cell *matHeaderCellDef> LAST NAME </th>\n          <td mat-cell *matCellDef=\"let element\">               <a [routerLink]=\"['/users', element._id]\">{{element.lastName}} </a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"cin\">\n          <th mat-header-cell *matHeaderCellDef> CIN </th>\n          <td mat-cell *matCellDef=\"let element\"> <a [routerLink]=\"['/users', element._id]\">{{element.cin}} </a></td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"address\">\n          <th mat-header-cell *matHeaderCellDef> ADDRESS </th>\n          <td mat-cell *matCellDef=\"let element\"><a [routerLink]=\"['/users', element._id]\"> {{element.address}} </a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"sexe\">\n          <th mat-header-cell *matHeaderCellDef> GENDRE </th>\n          <td mat-cell *matCellDef=\"let element\"> <a [routerLink]=\"['/users', element._id]\">{{element.sexe}} </a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"expandedDetail\">\n          <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n            <div class=\"example-element-detail\"\n                 [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n              <div class=\"example-element-diagram\">\n                <div class=\"raw\">\n                  <img *ngIf='showImage'\n                  [src]='sanatizeUrl(element.pic)'\n                  [title]='element.firstName'\n                  [style.width.px]='imageWidth*3'\n                  [style.margin.px]='imageMargin'>\n                  <img *ngIf='showImage'\n                  [src]='sanatizeUrl(element.bio)'\n                  [title]='element.firstName'\n                  [style.width.px]='imageWidth*3'\n                  [style.margin.px]='imageMargin*3'>\n                </div>\n                <div class=\"raw\">\n                  <div class=\"example-element-name\"> {{element.firstName}}  {{element.lastName}}  </div>\n                </div>\n              </div>\n              </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\"\n            class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n      </table>\n\n\n    </ng-template>\n    <ng-template #contenu_pas_bon>\n      <div class=\"example-loading-shade\"\n      *ngIf=\"isLoadingResults \">\n   <mat-spinner *ngIf='!errorMessage && isLoadingResults'></mat-spinner>\n      </div>\n      <div class=\"alert alert-secondary\" role=\"alert\" *ngIf='!errorMessage && !isLoadingResults' >\n        no citizents to show    </div>\n    </ng-template>\n    <div *ngIf='errorMessage'\n    class='alert alert-danger'>\n     Error: {{ errorMessage }}\n     </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { UserListComponent } from './user-list.component';\nimport { UserDetailComponent } from './user-detail.component';\nimport { RouterModule } from '@angular/router';\nimport { UserDetailGuard } from './user-detail.guard';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    UserListComponent,\n    UserDetailComponent,\n  ],\n  imports: [\n    MatFormFieldModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    CommonModule,\n    MatProgressSpinnerModule,\n    RouterModule.forChild([\n      { path: 'users', component: UserListComponent },\n      {\n        path: 'users/:id',\n        canActivate: [UserDetailGuard],\n        component: UserDetailComponent\n      }\n    ])\n    ],\n  exports:[\n    MatTableModule,\n    MatFormFieldModule\n  ]\n})\nexport class UserModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\n\nimport { IUser } from './user';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private router : Router,private http: HttpClient,private stService:StateParameterService) { }\n\n  getUsers(): Observable<IUser[]> {\n    if(!this.stService.host)\n    this.router.navigate([\"/\"]);\n    return this.http.get<IUser[]>(this.stService.host + \"/api/getAll\")\n      .pipe(\n        tap(data => console.log('')),\n        catchError(this.handleError)\n      );\n  }\n\n  getUser(id: string): Observable<IUser | undefined> {\n    return this.getUsers()\n      .pipe(\n        map((users: IUser[]) => users.find(p => p._id === id))\n      );\n  }\n\n  private handleError(err: HttpErrorResponse): Observable<never> {\n   \n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n   \n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}