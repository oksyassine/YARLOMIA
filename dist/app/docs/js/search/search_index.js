var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.185,1,0.833]],["body/components/AppComponent.html",[0,0.312,1,0.847,2,0.709,3,0.072,4,0.183,5,0.711,6,0.494,7,0.494,8,0.098,9,0.79,10,0.549,11,1.508,12,1.526,13,0.033,14,0.837,15,1.296,16,1.962,17,0.494,18,1.827,19,1.002,20,0.77,21,0.996,22,1.962,23,1.002,24,1.854,25,1.567,26,1.567,27,0.799,28,0.118,29,0.466,30,2.501,31,2.296,32,2.585,33,2.993,34,1.962,35,2.585,36,1.962,37,1.962,38,2.296,39,3.493,40,2.585,41,0.601,42,2.078,43,2.31,44,2.078,45,2.31,46,1.526,47,2.078,48,2.808,49,0.426,50,1.226,51,1.673,52,1.526,53,1.215,54,2.31,55,1.854,56,4.444,57,2.31,58,2.993,59,2.166,60,2.808,61,2.112,62,2.052,63,0.698,64,2.078,65,2.795,66,3.013,67,1.339,68,1.433,69,1.508,70,2.31,71,1.827,72,1.743,73,3.394,74,0.912,75,1.508,76,0.778,77,0.668,78,0.503,79,0.778,80,1.962,81,1.092,82,1.204,83,2.921,84,0.076,85,1.508,86,0.92,87,2.052,88,3.941,89,2.375,90,1.508,91,1.938,92,1.226,93,1.508,94,1.903,95,1.457,96,1.312,97,2.993,98,3.394,99,2.585,100,2.494,101,1.962,102,1.202,103,2.052,104,1.226,105,1.092,106,1.339,107,1.508,108,1.242,109,3.309,110,1.226,111,2.31,112,1.508,113,1.097,114,4.225,115,1.707,116,1.872,117,2.31,118,2.31,119,2.052,120,1.962,121,2.052,122,1.226,123,1.508,124,1.508,125,1.339,126,1.743,127,1.563,128,1.508,129,1.226,130,2.514,131,2.657,132,1.508,133,1.226,134,1.508,135,1.226,136,1.508,137,1.339,138,1.092,139,1.339,140,1.508,141,3.28,142,1.226,143,2.808,144,1.673,145,2.31,146,2.31,147,1.508,148,2.31,149,2.31,150,2.494,151,1.962,152,2.052,153,1.226,154,2.31,155,1.508,156,2.052,157,1.226,158,2.31,159,1.226,160,1.339,161,1.226,162,0.996,163,2.31,164,1.226,165,1.962,166,1.508,167,1.567,168,1.962,169,1.226,170,2.585,171,1.508,172,1.339,173,1.508,174,1.508,175,1.962,176,1.226,177,1.508,178,1.508,179,1.508,180,1.508,181,2.585,182,1.226,183,1.089,184,1.226,185,1.962,186,1.226,187,0.996,188,1.962,189,1.339,190,1.508,191,0.362,192,0.79,193,0.416,194,0.135,195,1.508,196,0.89,197,1.508,198,0.89,199,0.385,200,0.79,201,0.89,202,0.89,203,0.711,204,0.538,205,0.711,206,0.538,207,0.538,208,0.89,209,0.89,210,0.79,211,0.418,212,0.89,213,0.159,214,0.89,215,0.711,216,0.89,217,0.89,218,0.89,219,0.89,220,1.962,221,0.588,222,0.89,223,0.538,224,0.711,225,1.852,226,0.89,227,0.418,228,0.89,229,0.711,230,0.89,231,0.782,232,0.89,233,0.494,234,1.962,235,0.89,236,0.77,237,0.89,238,0.89,239,1.508,240,1.508,241,2.993,242,2.034,243,1.962,244,1.508,245,0.89,246,2.993,247,1.508,248,0.89,249,3.148,250,2.993,251,1.962,252,0.89,253,0.89,254,1.32,255,0.89,256,0.89,257,1.962,258,1.508,259,2.585,260,1.339,261,2.585,262,1.186,263,0.89,264,0.89,265,0.89,266,0.89,267,0.89,268,1.962,269,0.89,270,0.89,271,0.89,272,1.962,273,0.89,274,0.711,275,0.89,276,0.89,277,0.89,278,0.89,279,1.845,280,0.89,281,0.89,282,0.89,283,0.89,284,0.89,285,0.89,286,0.79,287,0.79,288,1.962,289,0.89,290,0.89,291,0.711,292,0.89,293,0.89,294,0.79,295,0.79,296,0.89,297,0.89,298,0.89,299,1.508,300,1.508,301,1.508,302,1.508,303,0.89,304,0.89,305,1.673,306,0.89,307,0.89,308,1.962,309,0.996,310,0.89,311,1.508,312,1.508,313,0.89,314,0.89,315,0.89,316,0.89,317,0.89,318,0.89,319,0.89,320,0.89,321,0.89,322,0.89,323,0.89,324,0.89,325,0.89,326,0.588,327,0.89,328,0.89,329,0.89,330,0.89,331,0.89,332,0.79,333,0.89,334,0.89,335,0.89,336,0.89,337,0.89,338,1.204,339,1.226,340,1.226,341,0.89,342,1.024,343,1.024,344,0.326,345,0.837,346,0.837,347,0.494,348,0.494,349,0.837,350,0.494,351,0.355,352,1.085,353,0.418,354,0.494,355,0.355,356,0.494,357,0.355,358,0.494,359,0.355,360,0.355,361,0.355,362,0.355,363,0.494,364,0.494,365,0.006,366,0.01,367,0.006]],["title/modules/AppModule.html",[368,1.261,369,2.017]],["body/modules/AppModule.html",[0,0.2,1,1.658,3,0.2,4,0.161,8,0.164,13,0.033,25,2.955,53,1.779,59,2.715,68,1.259,84,0.051,113,1.583,167,1.969,191,0.534,194,0.373,204,1.491,206,1.491,207,1.491,210,2.19,211,1.159,213,0.2,233,1.369,274,1.969,344,0.904,362,1.72,365,0.017,366,0.022,367,0.017,368,1.369,369,4.184,370,1.628,371,1.628,372,2.955,373,2.68,374,2.444,375,2.626,376,2.836,377,2.836,378,2.836,379,2.836,380,2.836,381,3.378,382,3.378,383,3.378,384,2.626,385,1.969,386,3.397,387,4.531,388,2.921,389,3.289,390,2.381,391,2.921,392,4.531,393,2.19,394,1.159,395,3.397,396,3.397,397,3.397,398,3.397,399,4.531,400,3.397,401,2.19,402,3.397,403,2.19,404,3.397,405,4.255,406,2.836,407,3.397,408,2.836,409,2.836,410,3.397,411,3.397,412,4.531,413,2.836,414,2.19,415,2.466,416,3.397,417,3.286,418,4.531,419,4.531,420,3.782,421,3.397,422,3.397,423,3.397,424,3.397,425,3.397]],["title/classes/AreaQuestion.html",[84,0.047,426,2.017]],["body/classes/AreaQuestion.html",[3,0.236,4,0.19,8,0.145,13,0.032,27,1.236,28,0.385,29,1.129,63,0.782,78,0.626,84,0.06,91,1.61,95,1.156,96,1.347,108,1.337,183,1.61,191,0.333,213,0.236,221,1.916,365,0.02,366,0.025,367,0.02,426,3.245,427,2.317,428,1.717,429,2.646,430,3.336,431,3.655,432,2.18,433,3.844,434,3.195,435,3.195,436,3.195,437,3.195,438,2.897,439,5.035,440,3.997,441,4.538,442,2.901,443,2.519,444,2.576,445,2.901,446,2.901,447,2.576,448,2.576,449,2.901,450,2.576,451,2.576,452,2.317,453,2.101,454,2.901,455,2.901,456,2.901,457,2.576,458,2.901,459,1.754]],["title/injectables/CountdownService.html",[59,1.5,193,0.482]],["body/injectables/CountdownService.html",[0,0.31,1,0.425,3,0.094,4,0.155,8,0.094,9,1.03,10,0.399,11,1.16,12,1.241,13,0.033,14,0.644,15,1.241,16,1.879,18,0.959,19,0.592,20,0.592,21,0.766,22,1.16,23,0.959,24,1.241,25,0.927,26,0.927,27,0.58,28,0.154,29,0.58,30,2.394,31,1.668,32,2.368,33,2.368,34,1.16,35,2.368,36,1.16,37,1.16,38,1.668,39,3.2,40,2.368,41,0.748,43,1.16,45,1.16,46,0.766,48,1.879,49,0.328,51,1.36,52,1.241,53,1.024,54,1.879,55,1.563,56,4.387,57,1.879,58,3.2,59,2.225,60,2.368,61,1.808,62,1.668,63,0.51,65,2.417,66,2.655,67,1.03,68,1.208,69,1.16,70,1.879,71,1.791,72,1.668,73,3.2,74,0.701,75,1.16,76,0.391,77,0.246,78,0.154,79,0.391,80,1.879,81,0.84,82,0.927,83,2.691,84,0.073,85,1.16,86,1.084,87,1.668,88,3.883,89,2.165,90,1.16,91,1.776,93,1.16,94,1.645,95,1.084,96,1.078,97,2.722,98,3.2,99,2.368,100,2.102,101,1.879,102,0.868,103,1.808,105,0.84,106,1.03,107,1.16,108,1.041,109,3.116,111,1.879,112,1.16,113,0.998,114,4.368,115,1.563,116,1.714,117,1.879,118,1.879,119,1.668,120,1.879,121,1.668,123,1.16,124,1.16,125,1.03,126,2.102,127,1.431,128,1.16,130,2.173,131,2.842,132,1.16,134,1.16,136,1.16,137,1.03,138,0.84,139,1.03,140,1.16,141,2.99,143,2.368,144,1.36,145,1.879,146,1.879,147,1.16,148,1.879,149,1.879,150,2.102,151,1.879,152,2.417,154,1.879,155,1.16,156,1.668,158,1.879,160,1.03,162,0.766,163,2.368,165,1.879,166,1.16,167,1.5,168,1.879,170,2.722,171,1.16,172,1.03,173,1.16,174,1.16,175,1.879,177,1.16,178,1.16,179,1.16,180,1.16,181,3.2,183,1.043,185,1.879,187,0.766,188,1.879,189,1.03,190,1.16,191,0.403,192,1.03,193,0.502,194,0.176,195,1.879,196,1.16,197,1.879,198,1.16,199,0.502,200,1.03,201,1.16,202,1.16,203,0.927,204,0.701,205,0.927,206,0.701,207,0.701,208,1.16,209,1.16,210,1.03,211,0.883,212,1.879,213,0.192,214,2.368,215,1.5,216,2.368,217,1.879,218,1.879,219,1.879,220,2.722,221,1.241,222,1.879,223,1.136,224,2.173,225,1.964,226,1.879,227,0.545,228,1.16,229,0.927,230,1.16,231,1.084,232,1.879,233,1.043,234,3.2,235,1.16,236,0.959,237,1.16,238,1.16,239,1.879,240,1.879,241,3.37,242,2.317,243,2.368,244,1.879,245,1.16,246,3.37,247,1.879,248,1.16,249,3.509,250,3.37,251,2.368,252,1.16,253,1.16,254,0.592,255,1.16,256,1.16,257,2.368,258,1.879,259,2.99,260,1.668,261,2.99,262,1.431,263,1.16,264,1.16,265,1.16,266,1.16,267,1.16,268,2.368,269,1.16,270,1.16,271,1.16,272,2.368,273,1.16,274,0.927,275,1.16,276,1.16,277,1.16,278,1.16,279,2.173,280,1.16,281,1.16,282,1.16,283,1.16,284,1.16,285,1.16,286,1.03,287,1.03,288,2.368,289,1.16,290,1.16,291,0.927,292,1.16,293,1.16,294,1.03,295,1.03,296,1.16,297,1.16,298,1.16,299,1.879,300,1.879,301,1.879,302,1.879,303,1.16,304,1.16,305,1.971,306,1.16,307,1.16,308,2.368,309,1.241,310,1.16,311,1.879,312,1.879,313,1.16,314,1.16,315,1.16,316,1.16,317,1.16,318,1.16,319,1.16,320,1.16,321,1.16,322,1.16,323,1.16,324,1.16,325,1.16,326,0.766,327,1.16,328,1.16,329,1.16,330,1.16,331,1.16,332,1.03,333,1.16,334,1.16,335,1.16,336,1.16,337,1.16,338,1.5,365,0.008,366,0.013,367,0.008,460,0.701,461,1.598,462,1.598,463,1.598,464,1.598]],["title/components/CountdownSnackbarComponent.html",[0,0.185,113,0.833]],["body/components/CountdownSnackbarComponent.html",[0,0.311,1,0.66,2,0.846,3,0.09,4,0.149,6,0.611,7,0.611,8,0.114,9,0.978,10,0.382,11,1.102,12,1.189,13,0.033,14,0.611,15,1.189,16,1.801,17,0.611,18,1.953,19,0.919,20,0.562,21,0.727,22,1.102,23,1.166,24,1.189,25,0.88,26,0.88,27,0.556,28,0.146,29,0.556,30,2.35,31,1.599,32,2.285,33,2.285,34,1.102,35,3.297,36,1.102,37,1.102,38,1.599,39,3.124,40,2.285,43,1.102,45,1.102,46,0.727,48,1.801,49,0.646,51,1.304,52,1.189,53,0.989,54,1.801,55,1.509,56,4.438,57,1.801,58,3.124,59,2.418,60,2.285,61,1.759,62,1.599,63,0.497,65,2.344,66,2.584,67,0.978,68,1.166,69,1.102,70,1.801,71,1.683,72,2.029,73,3.124,74,0.666,75,1.102,76,0.371,77,0.617,78,0.303,79,0.371,80,1.801,81,0.798,82,0.88,83,2.747,84,0.071,85,1.102,86,0.91,87,1.599,88,3.826,89,2.107,90,1.102,91,1.268,93,1.102,94,1.596,95,0.91,96,0.98,97,2.639,98,3.124,99,2.285,100,2.029,101,2.639,102,0.404,103,1.596,105,0.798,106,0.978,107,1.102,108,1.018,109,3.054,111,1.801,112,1.102,113,1.261,114,4.333,115,1.922,116,2.107,117,1.801,118,1.801,119,1.599,120,1.801,121,1.599,123,1.102,124,1.102,125,0.978,126,1.599,127,1.381,128,1.102,130,2.108,131,2.774,132,1.102,134,1.102,136,1.102,137,0.978,138,0.798,139,0.978,140,1.102,141,2.91,143,2.285,144,1.304,145,1.801,146,1.801,147,1.102,148,1.801,149,1.801,150,2.029,151,1.801,152,2.344,154,1.801,155,1.102,156,1.599,158,1.801,160,0.978,162,0.727,163,3.124,165,2.639,166,1.102,167,1.438,168,1.801,170,2.285,171,1.102,172,0.978,173,1.102,174,1.102,175,1.801,177,1.102,178,1.102,179,1.102,180,1.102,181,2.91,183,1,185,1.801,187,0.727,188,1.801,189,0.978,190,1.102,191,0.395,192,0.978,193,0.56,194,0.167,195,1.801,196,1.102,197,1.801,198,1.102,199,0.477,200,0.978,201,1.102,202,1.102,203,0.88,204,0.666,205,0.88,206,0.666,207,0.666,208,1.102,209,1.102,210,0.978,211,0.518,212,1.102,213,0.186,214,1.102,215,0.88,216,1.102,217,1.102,218,1.102,219,1.102,220,2.91,221,0.727,222,1.102,223,0.666,224,0.88,225,1.943,226,1.102,227,0.518,228,1.102,229,0.88,230,1.102,231,0.91,232,1.102,233,0.611,234,3.297,235,1.102,236,0.919,237,1.102,238,1.102,239,1.801,240,1.801,241,3.297,242,2.262,243,2.285,244,1.801,245,1.102,246,3.297,247,1.801,248,1.102,249,3.44,250,3.297,251,2.285,252,1.102,253,1.102,254,1.485,255,1.102,256,1.102,257,2.285,258,1.801,259,2.91,260,1.599,261,2.91,262,1.381,263,1.102,264,1.102,265,1.102,266,1.102,267,1.102,268,2.285,269,1.102,270,1.102,271,1.102,272,2.285,273,1.102,274,0.88,275,1.102,276,1.102,277,1.102,278,1.102,279,2.108,280,1.102,281,1.102,282,1.102,283,1.102,284,1.102,285,1.102,286,0.978,287,0.978,288,2.285,289,1.102,290,1.102,291,0.88,292,1.102,293,1.102,294,0.978,295,0.978,296,1.102,297,1.102,298,1.102,299,1.801,300,1.801,301,1.801,302,1.801,303,1.102,304,1.102,305,2.577,306,1.102,307,1.102,308,2.285,309,1.189,310,1.102,311,1.801,312,1.801,313,1.102,314,1.102,315,1.102,316,1.102,317,1.102,318,1.102,319,1.102,320,1.102,321,1.102,322,1.102,323,1.102,324,1.102,325,1.102,326,0.727,327,1.102,328,1.102,329,1.102,330,1.102,331,1.801,332,1.599,333,2.285,334,1.801,335,2.285,336,1.801,337,1.801,338,2.495,344,0.404,345,1,346,1,347,0.611,348,0.611,349,1,350,0.611,351,0.439,352,1.24,353,0.518,354,0.611,355,0.439,356,0.611,357,0.439,358,0.611,359,0.439,360,0.439,361,0.439,362,0.439,363,0.611,364,0.611,365,0.007,366,0.012,367,0.007,465,1.518,466,2.481,467,1.518,468,1.518,469,1.518,470,1.518]],["title/classes/DropdownQuestion.html",[84,0.047,471,2.017]],["body/classes/DropdownQuestion.html",[3,0.236,4,0.19,8,0.145,13,0.032,27,1.236,28,0.385,29,1.129,63,0.782,78,0.626,84,0.06,91,1.61,95,1.156,96,1.347,108,1.337,183,1.61,191,0.333,213,0.236,221,1.916,365,0.02,366,0.025,367,0.02,427,2.317,428,1.717,429,2.646,431,3.655,432,2.18,433,3.844,434,3.195,435,3.195,436,3.195,437,3.195,438,2.897,441,4.538,442,2.901,443,2.519,444,2.576,445,2.901,446,2.901,447,2.576,448,2.576,449,2.901,450,2.576,451,2.576,452,3.195,453,2.101,454,2.901,455,2.901,456,2.901,457,2.576,458,2.901,459,1.754,471,3.245,472,3.336,473,3.997]],["title/components/DynamicFormComponent.html",[0,0.185,351,0.905]],["body/components/DynamicFormComponent.html",[0,0.327,1,0.697,2,1.29,3,0.155,4,0.124,6,1.056,7,1.056,8,0.137,10,0.583,13,0.033,14,1.524,15,1.814,17,1.056,18,2.2,19,0.971,23,0.971,27,1.242,28,0.253,29,0.849,30,1.256,41,1.094,46,2.331,49,0.538,51,2.556,52,2.128,53,1.527,61,1.15,63,0.666,76,0.641,77,0.794,78,0.469,79,0.641,81,2.824,82,2.193,83,2.818,84,0.039,86,1.094,95,1.094,96,0.925,102,1.007,103,1.66,106,2.439,113,0.697,127,2.134,187,1.814,191,0.501,194,0.288,199,0.823,203,1.519,204,1.15,205,1.519,206,1.15,207,1.15,211,1.514,213,0.155,215,2.989,224,2.193,225,1.658,227,1.514,229,1.519,254,1.801,279,1.519,286,2.439,287,2.439,291,1.519,305,1.378,344,0.697,345,1.524,346,1.524,347,1.056,348,1.056,349,1.524,350,1.056,351,1.554,352,1.832,353,1.758,354,1.056,355,0.758,356,1.056,357,0.758,358,1.056,359,0.758,360,0.758,361,0.758,362,0.758,363,1.056,364,1.056,365,0.013,366,0.019,367,0.013,374,1.814,394,0.894,413,3.159,414,1.69,415,1.903,428,1.889,432,1.758,443,1.524,459,1.15,474,4.021,475,1.903,476,3.784,477,3.724,478,2.911,479,2.747,480,3.223,481,2.747,482,3.223,483,1.989,484,3.784,485,4.44,486,4.862,487,3.159,488,3.324,489,2.621,490,4.862,491,3.036,492,3.784,493,2.439,494,3.784,495,2.331,496,2.439,497,2.193,498,3.159,499,1.524,500,1.66,501,3.159,502,3.159,503,2.747,504,2.193,505,2.439,506,2.621,507,3.134,508,2.621,509,3.159,510,2.747,511,2.621,512,4.862,513,1.814,514,2.747,515,2.747,516,2.621,517,2.621,518,1.15,519,2.621,520,2.621,521,1.903,522,2.621,523,2.621,524,2.621,525,1.69,526,2.621,527,2.621,528,3.784,529,3.784,530,1.519,531,2.621,532,3.784,533,2.621,534,2.621,535,2.621,536,2.621,537,2.621,538,2.621,539,2.621,540,2.621,541,2.621,542,2.621,543,2.188,544,2.621,545,2.621,546,2.621,547,3.784,548,3.784,549,3.784,550,3.784]],["title/components/DynamicFormQuestionComponent.html",[0,0.185,355,0.905]],["body/components/DynamicFormQuestionComponent.html",[0,0.338,1,0.937,2,1.583,3,0.208,4,0.167,5,2.042,6,1.419,7,1.419,8,0.168,10,0.542,13,0.033,17,1.419,18,2.323,19,1.305,21,2.224,23,1.305,27,1.415,28,0.339,63,0.643,77,0.85,78,0.447,84,0.053,113,0.937,191,0.433,194,0.387,213,0.208,231,1.018,254,2.044,344,0.937,345,1.869,346,1.869,347,1.419,348,1.419,349,1.869,350,1.419,351,1.018,352,2.008,353,1.77,354,1.419,355,1.595,356,1.419,357,1.018,358,1.419,359,1.018,360,1.018,361,1.018,362,1.018,363,1.419,364,1.419,365,0.017,366,0.023,367,0.017,420,2.94,428,1.881,432,1.77,438,2.439,443,2.542,453,2.439,459,1.546,474,4.004,477,3.695,483,2.439,487,3.874,507,4.01,518,1.546,551,2.94,552,3.874,553,5.19,554,4.641,555,4.641,556,5.19,557,3.522,558,3.522,559,3.522,560,3.522,561,4.641,562,3.522,563,5.517,564,4.641,565,3.522,566,4.786,567,3.522,568,3.522,569,3.522,570,3.369,571,2.94,572,2.94,573,2.94,574,3.522]],["title/injectables/EventService.html",[61,1.373,193,0.482]],["body/injectables/EventService.html",[0,0.302,2,1.399,3,0.173,4,0.271,8,0.107,10,0.452,13,0.033,20,1.088,28,0.283,29,0.92,30,2.266,41,1.186,49,0.97,61,1.8,63,0.735,65,2.644,66,3.595,67,3.298,71,1.52,74,1.8,76,0.718,77,0.452,78,0.585,79,0.718,84,0.071,86,1.367,89,3.118,94,2.689,95,1.557,96,1.316,102,1.258,103,1.289,105,2.156,108,1.06,125,2.644,126,2.644,127,2.563,130,2.378,137,2.644,138,2.69,172,2.644,191,0.342,193,0.632,194,0.323,199,0.922,211,1.399,213,0.173,215,1.702,223,2.362,224,2.378,231,1.186,260,1.893,305,2.69,352,1.399,365,0.015,366,0.02,367,0.015,460,1.289,501,3.424,503,2.977,575,2.451,576,4.102,577,4.727,578,5.577,579,4.727,580,4.102,581,5.117,582,5.117,583,4.102,584,2.936,585,2.936,586,4.102,587,4.102,588,4.102,589,4.102,590,3.946,591,2.936,592,2.936,593,4.102,594,2.936,595,2.936,596,3.298,597,2.936,598,2.936,599,4.102,600,2.936,601,4.727,602,5.384,603,2.936,604,4.727,605,1.543,606,2.936,607,2.936,608,2.936,609,2.936,610,2.936,611,2.936,612,2.936,613,5.384,614,2.936,615,1.893,616,2.936,617,2.936,618,2.936,619,5.117,620,2.936,621,2.936,622,4.102,623,2.936,624,4.102,625,2.936,626,2.936,627,2.936,628,2.936,629,2.936,630,2.936,631,2.936,632,2.936,633,2.936,634,2.936,635,2.936,636,2.132,637,2.936,638,2.936,639,2.132,640,2.936,641,2.936,642,2.936]],["title/components/FileUploadComponent.html",[0,0.185,357,0.905]],["body/components/FileUploadComponent.html",[0,0.301,1,0.544,2,1.072,3,0.185,4,0.097,5,1.185,6,0.824,7,0.824,8,0.222,10,0.59,12,2.349,13,0.033,14,1.266,15,1.836,17,0.824,18,2.08,19,0.757,21,1.507,23,0.757,24,2.061,27,1.181,28,0.197,29,0.705,41,0.909,46,2.061,49,0.42,52,2.061,53,1.35,55,2.525,61,0.897,63,0.723,74,1.887,76,0.769,77,0.786,78,0.567,79,0.769,84,0.031,86,0.591,91,0.824,95,0.591,96,0.5,102,1.019,103,2.15,108,1.145,113,0.544,115,2.349,127,2.15,130,1.822,162,2.061,187,1.507,191,0.426,192,2.026,194,0.225,204,0.897,205,1.185,206,0.897,207,0.897,211,1.466,213,0.121,225,1.583,227,1.072,229,1.185,236,0.757,254,1.593,279,1.185,294,2.469,295,1.318,326,0.98,338,2.22,344,0.544,345,1.266,346,1.266,347,0.824,348,0.824,349,1.266,350,0.824,351,0.591,352,1.671,353,0.697,354,0.824,355,0.591,356,0.824,357,1.243,358,0.824,359,0.591,360,0.591,361,0.591,362,0.591,363,0.824,364,0.824,365,0.01,366,0.016,367,0.01,394,0.697,401,3.795,477,2.992,483,1.652,491,2.9,495,2.061,496,2.026,497,1.822,504,1.822,505,2.026,513,2.525,514,2.282,515,2.282,518,0.897,525,1.318,543,1.707,596,3.396,615,2.026,636,3.121,639,1.484,643,3.413,644,1.707,645,4.516,646,3.589,647,3.589,648,3.83,649,3.144,650,3.83,651,4.9,652,3.83,653,5.104,654,3.83,655,3.83,656,3.144,657,1.318,658,4.3,659,3.144,660,1.652,661,3.369,662,4.9,663,3.144,664,3.38,665,2.045,666,3.144,667,3.144,668,2.045,669,2.772,670,3.144,671,4.641,672,3.589,673,3.144,674,3.144,675,2.045,676,3.144,677,2.045,678,3.144,679,4.3,680,2.045,681,2.045,682,2.045,683,2.624,684,3.589,685,2.045,686,2.045,687,3.144,688,2.045,689,2.624,690,2.78,691,2.624,692,2.045,693,2.045,694,1.822,695,3.144,696,2.045,697,2.045,698,2.045,699,2.045,700,3.144,701,2.045,702,2.045,703,2.045,704,2.045,705,2.045,706,2.045,707,2.045,708,3.144,709,4.3,710,3.144,711,2.045,712,2.045,713,2.045,714,3.144,715,2.045,716,1.707,717,2.045,718,2.045,719,2.045,720,2.045,721,2.045,722,2.045,723,2.045,724,2.045,725,2.045,726,3.83,727,3.144,728,2.045,729,2.045,730,2.045,731,2.045,732,2.045,733,2.045,734,2.045,735,1.707,736,3.83,737,2.045,738,2.045,739,2.045,740,2.045,741,2.045,742,2.045,743,2.045,744,2.045,745,2.045,746,3.144]],["title/modules/FileUploadModule.html",[368,1.261,381,1.814]],["body/modules/FileUploadModule.html",[0,0.293,3,0.231,4,0.185,8,0.198,13,0.033,68,1.448,84,0.059,144,2.055,167,2.266,191,0.539,194,0.429,213,0.231,233,1.575,344,1.04,357,1.8,365,0.019,366,0.025,367,0.019,368,1.575,370,1.874,371,1.874,372,3.162,373,2.055,374,1.874,375,2.878,381,3.509,384,2.878,385,2.266,388,2.52,389,3.604,390,2.055,391,3.2,393,2.52,394,1.333,401,2.52,405,4.144,406,3.263,414,2.52,417,3.2,507,2.52,518,1.715,643,2.266,646,3.263,647,3.263,747,3.263,748,3.263,749,3.909,750,3.604,751,3.909,752,3.96,753,2.838,754,3.96,755,2.838,756,4.554,757,3.263,758,4.964,759,3.909,760,4.964,761,3.909,762,4.964,763,3.263,764,4.964,765,3.263,766,3.516,767,3.909,768,2.838,769,3.2]],["title/injectables/FileUploadService.html",[55,1.5,193,0.482]],["body/injectables/FileUploadService.html",[3,0.218,4,0.175,8,0.22,10,0.818,13,0.033,20,1.367,28,0.355,41,1.383,49,0.757,51,2.952,55,2.692,63,0.593,71,1.966,76,1.169,77,0.737,78,0.585,79,1.169,81,3.058,82,2.773,84,0.056,86,1.383,89,2.514,94,2.465,102,0.981,108,1.337,138,2.514,191,0.443,193,0.918,194,0.405,199,1.159,204,1.619,213,0.218,225,1.984,227,1.631,231,1.067,236,1.367,262,1.619,365,0.018,366,0.024,367,0.018,460,1.619,493,3.083,499,1.927,500,2.553,503,3.472,596,3.083,605,1.939,643,3.077,645,3.472,661,3.472,664,3.255,690,3.472,691,3.993,770,3.079,771,4.783,772,3.689,773,3.689,774,4.783,775,5.308,776,3.689,777,4.783,778,5.616,779,4.783,780,5.819,781,4.783,782,3.689,783,3.689,784,3.689,785,3.689,786,3.689,787,3.689,788,3.689,789,3.689,790,3.689,791,3.689,792,3.689,793,3.079,794,3.689]],["title/guards/FormGuard.html",[766,2.017,795,1.814]],["body/guards/FormGuard.html",[3,0.217,4,0.175,8,0.134,10,0.736,13,0.033,14,1.484,20,1.365,27,1.304,28,0.355,41,1.382,49,0.756,52,2.542,53,1.666,63,0.592,71,1.965,76,0.901,77,0.567,78,0.355,79,0.901,84,0.055,100,2.374,102,0.98,183,1.925,191,0.468,193,0.865,194,0.405,199,1.157,206,1.616,207,1.616,211,1.63,213,0.217,225,1.63,231,1.382,236,1.365,242,1.936,262,2.328,291,2.135,365,0.018,366,0.024,367,0.018,394,1.256,491,3.232,495,2.857,496,3.08,497,3.254,499,2.401,500,2.615,504,2.77,505,3.08,525,2.374,605,1.936,643,3.075,657,2.374,660,2.512,694,2.77,766,3.618,769,3.842,795,2.77,796,2.674,797,3.075,798,3.989,799,4.685,800,4.779,801,4.779,802,4.779,803,3.684,804,4.779,805,4.685,806,3.684,807,3.989,808,3.989,809,3.989,810,4.428,811,3.075,812,3.075,813,3.075,814,3.684,815,3.684,816,3.684,817,3.684,818,3.684]],["title/interfaces/IUser.html",[819,2.017,820,1.645]],["body/interfaces/IUser.html",[3,0.236,4,0.19,8,0.145,10,0.617,13,0.033,28,0.386,29,1.13,77,0.892,78,0.603,108,1.478,213,0.236,365,0.02,366,0.025,367,0.02,499,2.631,500,2.212,530,3.531,664,3.356,819,2.58,820,2.649,821,4.003,822,3.342,823,4.003,824,5.789,825,3.732,826,5.516,827,4.202,828,4.202,829,4.202,830,4.604,831,5.04,832,5.04,833,3.249,834,3.249,835,4.207,836,4.003,837,4.003]],["title/classes/QuestionBase.html",[84,0.047,432,1.067]],["body/classes/QuestionBase.html",[3,0.193,4,0.155,8,0.119,10,0.504,13,0.033,27,1.293,28,0.315,29,0.991,49,0.671,63,0.752,76,0.8,77,0.504,78,0.625,79,0.8,84,0.049,91,2.015,96,1.409,108,1.429,183,2.015,213,0.193,221,2.398,223,1.436,225,1.116,365,0.016,366,0.022,367,0.016,427,1.897,428,2.093,429,3.226,432,1.507,433,3.453,434,3.474,435,3.341,436,3.617,437,3.341,438,3.03,443,2.585,444,2.848,447,2.848,448,3.224,450,2.848,451,2.848,452,2.561,453,2.322,457,2.848,552,3.688,615,2.109,660,2.322,838,2.731,839,4.418,840,4.418,841,4.418,842,3.272,843,3.272,844,3.272,845,3.272,846,3.272,847,3.272,848,3.272,849,3.272,850,3.272,851,3.272,852,3.272,853,3.272,854,3.272,855,3.272,856,3.272,857,3.272,858,4.418,859,3.272,860,3.272,861,3.272,862,3.272,863,3.272,864,3.272]],["title/injectables/QuestionControlService.html",[193,0.482,478,1.645]],["body/injectables/QuestionControlService.html",[3,0.244,4,0.196,8,0.15,10,0.791,13,0.033,28,0.398,41,1.486,49,1.148,63,0.637,76,1.01,77,0.636,78,0.398,79,1.01,84,0.062,86,1.618,102,1.099,191,0.467,193,0.902,194,0.454,213,0.244,225,1.408,227,1.408,231,1.194,365,0.02,366,0.025,367,0.02,428,1.908,429,2.94,432,2.146,443,1.664,459,1.812,460,1.812,477,3.606,478,3.077,488,3.773,493,3.312,510,4.249,518,1.812,865,3.447,866,5.139,867,4.129,868,5.139,869,4.129,870,4.289,871,4.129,872,4.129,873,4.129,874,4.129,875,4.129,876,4.129,877,5.139,878,4.129,879,4.129]],["title/injectables/QuestionService.html",[193,0.482,880,1.645]],["body/injectables/QuestionService.html",[3,0.228,4,0.184,8,0.14,10,0.596,13,0.033,27,1.107,28,0.373,41,1.427,62,2.496,63,0.48,71,1.828,77,0.76,78,0.373,84,0.058,86,1.708,96,1.206,102,1.445,116,2.594,191,0.504,193,0.881,194,0.425,199,1.216,213,0.228,223,1.699,227,1.321,231,1.12,262,2.592,309,1.856,365,0.019,366,0.024,367,0.019,426,3.181,428,1.683,432,1.683,434,3.558,435,3.424,436,2.245,437,3.424,438,3.105,443,2.304,452,2.245,459,1.699,460,1.699,471,3.181,488,3.501,530,2.861,825,3.181,827,2.811,828,2.811,830,3.233,833,2.496,834,2.496,880,3.006,881,3.233,882,5.719,883,3.873,884,3.687,885,3.233,886,3.873,887,3.873,888,3.873,889,3.873,890,3.873,891,3.873,892,3.233,893,3.873,894,3.873,895,3.873,896,3.873,897,3.873,898,3.873]],["title/components/RFormComponent.html",[0,0.185,359,0.905]],["body/components/RFormComponent.html",[0,0.358,1,0.984,2,1.634,3,0.218,4,0.175,6,1.491,7,1.491,8,0.174,10,0.738,13,0.033,17,1.491,18,2.341,19,1.371,20,1.775,23,1.775,27,1.338,28,0.357,29,1.075,49,0.759,63,0.594,71,2.158,76,0.905,77,0.897,78,0.462,79,0.905,83,2.778,84,0.056,113,0.984,191,0.469,193,0.866,194,0.406,199,1.162,211,1.634,213,0.218,225,1.262,254,2.083,344,0.984,345,1.931,346,1.931,347,1.491,348,1.491,349,1.931,350,1.491,351,1.07,352,2.035,353,1.262,354,1.491,355,1.07,356,1.491,357,1.07,358,1.491,359,1.626,360,1.07,361,1.07,362,1.07,363,1.491,364,1.491,365,0.018,366,0.024,367,0.018,374,2.297,403,3.426,428,1.813,432,1.813,443,1.491,459,1.624,475,2.686,488,3.754,493,3.089,510,3.479,870,4,880,3.235,899,4.792,900,4.792,901,4.792,902,3.7,903,3.7,904,3.7]],["title/modules/RFormModule.html",[368,1.261,382,1.814]],["body/modules/RFormModule.html",[0,0.218,3,0.218,4,0.175,8,0.134,13,0.033,27,1.075,49,0.759,68,1.371,84,0.056,144,1.945,191,0.527,194,0.406,213,0.218,233,1.491,274,2.145,344,0.984,351,1.814,353,1.634,355,1.725,359,1.862,365,0.018,366,0.024,367,0.018,368,1.491,370,1.773,371,1.773,372,3.081,373,2.794,374,1.773,375,2.778,382,3.663,384,2.778,385,2.145,388,2.385,389,3.479,390,1.945,391,3.089,393,2.385,394,1.262,403,2.385,417,2.385,428,1.262,478,2.794,479,3.859,480,3.859,481,3.859,482,3.859,518,1.624,750,3.479,752,3.859,753,2.686,754,3.859,755,2.686,756,4.437,757,3.089,768,2.686,880,2.794,905,3.089,906,3.089,907,3.089,908,3.089,909,3.089,910,3.7,911,4.792,912,3.7,913,5.316,914,3.7]],["title/injectables/StateParameterService.html",[53,0.983,193,0.482]],["body/injectables/StateParameterService.html",[3,0.228,4,0.183,8,0.179,10,0.596,13,0.033,20,1.432,27,1.354,28,0.373,29,1.106,49,1.114,53,1.548,63,0.748,78,0.569,84,0.058,86,1.426,87,3.178,89,3.004,94,2.163,95,1.118,96,0.945,108,1.217,127,2.163,131,3.499,138,2.591,139,3.178,191,0.323,193,0.759,194,0.425,213,0.228,309,2.363,332,3.178,365,0.019,366,0.024,367,0.019,460,1.697,495,2.363,496,3.178,497,2.858,498,4.115,499,2.303,500,2.591,502,4.115,513,2.363,590,4.115,596,3.178,605,2.032,690,3.579,793,3.228,829,3.579,915,5.121,916,3.228,917,4.93,918,4.93,919,4.93,920,5.904,921,4.93,922,4.93,923,4.93,924,3.867,925,4.93,926,3.867,927,4.93,928,3.867,929,3.867,930,4.93,931,3.867,932,3.867,933,3.867]],["title/classes/TextboxQuestion.html",[84,0.047,884,2.017]],["body/classes/TextboxQuestion.html",[3,0.236,4,0.19,8,0.145,13,0.032,27,1.236,28,0.385,29,1.129,63,0.782,78,0.626,84,0.06,91,1.61,95,1.156,96,1.347,108,1.337,183,1.61,191,0.333,213,0.236,221,1.916,365,0.02,366,0.025,367,0.02,427,2.317,428,1.717,429,2.646,431,3.655,432,2.18,433,3.844,434,3.195,435,3.195,436,3.195,437,3.195,438,2.897,441,4.538,442,2.901,443,2.519,444,2.576,445,2.901,446,2.901,447,2.576,448,2.576,449,2.901,450,2.576,451,2.576,452,2.317,453,2.101,454,2.901,455,2.901,456,2.901,457,2.576,458,2.901,459,1.754,884,3.245,885,4.203,934,3.336,935,3.997]],["title/components/UserDetailComponent.html",[0,0.185,360,0.905]],["body/components/UserDetailComponent.html",[0,0.329,1,0.714,2,1.312,3,0.158,4,0.127,5,1.555,6,1.081,7,1.081,8,0.14,10,0.413,12,1.845,13,0.033,14,1.55,15,2.157,17,1.081,18,2.152,19,0.994,21,1.845,23,0.994,24,2.494,28,0.259,29,0.863,30,2.157,41,1.113,46,2.356,49,0.551,63,0.707,68,0.994,74,2.376,76,1.1,77,0.919,78,0.501,79,1.1,84,0.04,95,1.113,96,0.941,102,1.308,103,2.376,108,1.167,113,0.714,115,1.845,116,2.023,162,1.845,187,1.845,191,0.434,194,0.295,213,0.158,225,1.534,227,1.312,231,1.301,236,0.994,254,1.821,326,1.845,344,0.714,345,1.55,346,1.55,347,1.081,348,1.081,349,1.55,350,1.081,351,0.776,352,1.676,353,0.915,354,1.081,355,0.776,356,1.081,357,0.776,358,1.081,359,0.776,360,1.421,361,0.776,362,0.776,363,1.081,364,1.081,365,0.013,366,0.019,367,0.013,390,1.41,394,0.915,483,2.023,491,2.932,499,2.182,500,2.157,513,2.99,514,2.793,515,2.793,530,2.231,615,2.48,660,2.023,664,2.231,669,3.491,672,3.212,683,3.212,684,3.212,694,1.555,820,2.365,825,2.48,833,2.48,834,2.48,936,3.745,937,2.24,938,4.763,939,4.499,940,3.848,941,3.266,942,3.212,943,4.915,944,3.212,945,2.683,946,4.915,947,3.233,948,4.656,949,3.848,950,3.848,951,3.212,952,2.683,953,3.848,954,2.683,955,2.683,956,2.793,957,2.793,958,3.212,959,2.683,960,2.24,961,3.756,962,2.683,963,2.683,964,2.24,965,2.683,966,2.683,967,2.683,968,2.683,969,1.948,970,2.24,971,2.24,972,2.24,973,4.915,974,4.915,975,3.848,976,3.848,977,3.848,978,3.848,979,3.848]],["title/guards/UserDetailGuard.html",[795,1.814,980,2.017]],["body/guards/UserDetailGuard.html",[3,0.232,4,0.187,8,0.143,10,0.606,13,0.033,14,1.585,20,1.457,28,0.379,41,1.441,49,0.807,63,0.618,71,2.027,76,1.219,77,0.768,78,0.48,79,1.219,84,0.059,102,1.047,105,2.876,183,2.008,191,0.456,193,0.768,194,0.432,199,1.235,211,1.7,213,0.232,227,1.342,231,1.441,236,1.457,242,2.068,262,2.187,365,0.019,366,0.025,367,0.019,394,1.342,491,3.276,495,2.757,497,2.28,499,2.317,500,2.661,504,2.889,505,3.213,605,2.068,657,2.536,694,2.889,769,3.826,795,2.889,796,2.855,798,4.161,799,4.567,805,3.284,807,3.284,808,3.284,809,4.161,810,4.567,811,4.802,812,4.802,936,3.527,972,3.284,980,3.213,981,3.284,982,3.934,983,3.934,984,3.934,985,3.934,986,3.934]],["title/components/UserListComponent.html",[0,0.185,361,0.905]],["body/components/UserListComponent.html",[0,0.304,1,0.56,2,1.097,3,0.124,4,0.1,5,1.221,6,0.849,7,0.849,8,0.117,10,0.324,12,1.542,13,0.033,14,1.296,15,1.87,17,0.849,18,2.019,19,0.78,21,1.542,23,0.78,24,2.255,26,3.224,28,0.31,29,0.721,41,0.93,46,2.094,49,0.432,63,0.727,68,0.78,74,1.917,76,0.954,77,0.883,78,0.525,79,0.954,84,0.032,86,0.609,91,1.296,95,1.538,96,1.3,102,1.038,103,1.712,105,1.107,108,0.979,109,1.358,113,0.56,115,1.542,116,2.796,121,2.515,127,1.917,152,2.515,156,1.358,162,1.542,187,1.542,189,2.815,191,0.414,194,0.231,213,0.124,223,1.412,227,0.718,231,0.609,236,0.78,242,2.051,254,1.618,262,1.712,305,1.691,309,1.542,326,1.542,341,3.17,342,2.685,343,1.759,344,0.56,345,1.296,346,2.196,347,0.849,348,0.849,349,1.296,350,0.849,351,0.609,352,1.49,353,0.718,354,0.849,355,0.609,356,0.849,357,0.609,358,0.849,359,0.609,360,0.609,361,1.263,362,0.609,363,0.849,364,0.849,365,0.01,366,0.022,367,0.01,390,1.107,453,2.607,483,1.691,495,2.094,499,1.296,513,2.55,530,1.865,566,3.646,570,1.529,571,1.759,572,3.646,573,1.759,636,3.957,639,2.335,645,2.335,660,1.691,664,2.875,669,2.815,694,1.221,716,1.759,820,2.473,825,2.074,827,2.335,828,2.335,829,2.335,833,2.074,834,2.074,835,2.685,936,3.817,938,3.646,941,3.415,944,2.685,947,2.99,948,3.927,956,2.833,957,3.415,958,2.685,960,1.759,961,3.257,964,1.759,969,3.415,970,1.759,971,1.759,987,1.759,988,3.217,989,3.902,990,3.217,991,3.902,992,3.902,993,3.902,994,3.902,995,3.902,996,3.902,997,3.902,998,3.217,999,2.107,1000,3.217,1001,3.217,1002,2.107,1003,3.217,1004,2.107,1005,2.107,1006,3.217,1007,2.107,1008,3.217,1009,2.107,1010,2.107,1011,2.107,1012,3.217,1013,2.107,1014,2.107,1015,2.685,1016,3.217,1017,2.107,1018,2.107,1019,2.107,1020,2.107,1021,1.759,1022,2.107,1023,2.107,1024,2.107,1025,2.107,1026,1.759,1027,2.107,1028,2.107,1029,2.107,1030,3.217,1031,2.107,1032,2.107,1033,2.107,1034,2.107,1035,2.107,1036,2.107,1037,2.107,1038,2.107,1039,2.107,1040,2.107,1041,2.107,1042,2.107,1043,2.107,1044,2.107,1045,2.107,1046,3.217,1047,2.107,1048,2.107,1049,2.107,1050,2.107,1051,4.368,1052,4.368,1053,4.368,1054,3.217,1055,3.217,1056,3.217,1057,3.217,1058,3.217,1059,2.107,1060,2.107,1061,3.902,1062,3.217,1063,4.368,1064,3.217,1065,3.217,1066,2.107,1067,2.107,1068,2.107,1069,2.107,1070,3.217,1071,2.107,1072,2.107,1073,3.217,1074,3.217,1075,2.107,1076,2.107,1077,2.107,1078,2.107,1079,2.107,1080,2.107,1081,3.217,1082,3.902,1083,2.107,1084,3.902,1085,2.107,1086,2.107,1087,2.107,1088,2.107,1089,3.217,1090,1.759,1091,3.217,1092,3.217,1093,2.107,1094,2.107,1095,2.107,1096,2.107,1097,3.217,1098,2.107,1099,2.107,1100,2.107,1101,2.107,1102,2.107,1103,2.107,1104,3.217,1105,2.107,1106,2.107,1107,2.107]],["title/modules/UserModule.html",[368,1.261,383,1.814]],["body/modules/UserModule.html",[0,0.299,3,0.238,4,0.191,8,0.146,13,0.033,84,0.061,144,2.121,191,0.534,194,0.443,213,0.238,233,1.626,344,1.074,360,1.791,361,1.791,365,0.02,366,0.025,367,0.02,368,1.626,370,1.934,371,1.934,372,3.209,373,2.121,374,1.934,375,2.936,383,3.631,384,2.936,385,2.339,388,2.601,391,3.265,393,2.601,394,1.376,417,3.265,513,2.654,518,1.771,521,2.929,750,3.677,752,4.019,753,2.929,754,3.677,755,2.929,763,3.369,768,2.929,769,2.601,957,2.929,980,3.265,1015,3.369,1021,3.369,1108,3.369,1109,3.369,1110,4.036,1111,4.036,1112,4.036,1113,4.036,1114,5.536,1115,5.065,1116,5.065,1117,4.036]],["title/injectables/UserService.html",[193,0.482,947,1.814]],["body/injectables/UserService.html",[0,0.271,3,0.205,4,0.164,8,0.126,10,0.534,13,0.033,20,1.285,26,2.663,28,0.334,30,2.469,41,1.328,49,0.712,51,2.707,52,2.202,53,1.618,63,0.679,71,2.215,72,2.235,74,2.572,76,1.259,77,0.793,78,0.496,79,1.259,81,2.707,84,0.052,94,1.522,102,1.37,108,1.155,115,1.662,191,0.499,193,0.845,194,0.381,199,1.089,200,2.235,203,2.01,204,1.522,206,1.522,207,1.522,213,0.205,231,1.489,236,1.285,326,1.662,365,0.017,366,0.023,367,0.017,394,1.183,460,1.522,491,2.998,499,1.85,500,2.406,513,1.662,525,2.235,605,1.823,657,2.235,660,2.414,669,3.778,735,2.895,813,2.895,820,2.414,941,3.739,942,4.577,947,2.663,951,3.834,969,3.98,1118,2.895,1119,4.594,1120,5.862,1121,4.594,1122,3.468,1123,3.468,1124,3.468,1125,4.594,1126,5.483,1127,3.468,1128,4.594,1129,3.468,1130,3.468,1131,3.468,1132,3.468,1133,3.468,1134,3.468,1135,3.468,1136,3.468,1137,4.594,1138,3.468,1139,3.468,1140,3.468,1141,3.468,1142,3.468,1143,3.468,1144,3.468,1145,3.468,1146,3.468,1147,3.468,1148,3.468,1149,2.517,1150,3.468,1151,3.468,1152,3.468,1153,3.468]],["title/components/WelcomeComponent.html",[0,0.185,362,0.905]],["body/components/WelcomeComponent.html",[0,0.354,1,1.088,2,1.742,3,0.241,4,0.264,6,1.647,7,1.647,8,0.185,10,0.63,12,2.448,13,0.033,17,1.647,18,2.346,19,1.515,23,1.515,24,2.878,25,3.381,28,0.394,29,1.145,63,0.507,77,0.898,78,0.394,84,0.062,95,1.182,96,1,108,0.917,113,1.088,162,2.448,191,0.341,194,0.449,213,0.241,254,2.161,338,3.228,344,1.088,345,2.057,346,2.057,347,1.647,348,1.647,349,2.057,350,1.647,351,1.182,352,1.989,353,1.394,354,1.647,355,1.182,356,1.647,357,1.182,358,1.647,359,1.182,360,1.182,361,1.182,362,1.687,363,1.647,364,1.647,365,0.02,366,0.025,367,0.02,483,2.684,1149,3.707,1154,3.413,1155,5.107,1156,5.107,1157,4.089]],["title/coverage.html",[1158,3.578]],["body/coverage.html",[0,0.369,1,1.011,8,0.138,9,3.471,13,0.033,27,0.852,53,1.194,55,1.822,59,1.822,61,1.668,78,0.366,84,0.085,86,1.099,113,1.011,193,0.941,351,1.099,355,1.099,357,1.099,359,1.099,360,1.099,361,1.099,362,1.099,365,0.019,366,0.024,367,0.019,401,2.45,403,2.45,426,2.45,428,2.132,429,3.087,430,3.173,432,1.296,471,2.45,472,3.173,474,3.54,475,3.54,478,1.998,551,3.173,570,4.632,575,3.173,643,3.121,644,3.173,766,2.45,770,3.173,795,2.827,797,3.173,819,2.45,820,1.998,822,3.173,838,3.173,865,3.173,880,1.998,881,3.173,884,2.45,915,3.173,916,3.173,934,3.173,936,3.471,937,3.173,947,2.204,956,2.76,980,2.45,981,3.173,987,3.173,1090,4.741,1118,3.173,1154,3.173,1158,3.173,1159,3.802,1160,3.802,1161,3.802,1162,3.802,1163,4.877,1164,3.802,1165,3.802,1166,3.802,1167,5.68,1168,4.877,1169,4.877,1170,4.877,1171,4.877,1172,4.877,1173,4.877,1174,4.877,1175,5.385,1176,4.877,1177,3.802,1178,3.802]],["title/dependencies.html",[371,1.806,1179,2.606]],["body/dependencies.html",[8,0.165,13,0.033,68,2.02,194,0.5,199,1.43,211,1.552,341,3.304,353,1.552,365,0.022,366,0.027,367,0.022,371,2.182,373,2.393,390,2.867,394,1.552,408,3.8,409,3.8,414,3.515,415,3.304,507,2.934,518,1.998,521,3.304,765,3.8,1026,3.8,1180,6.447,1181,4.552,1182,5.454,1183,4.552,1184,4.552,1185,4.552,1186,4.552,1187,4.552,1188,4.552,1189,4.552,1190,4.552,1191,4.552,1192,4.552,1193,4.552,1194,4.552]],["title/index.html",[28,0.251,509,2.176,1195,2.606]],["body/index.html",[0,0.337,4,0.206,13,0.026,31,2.796,38,2.796,77,0.668,86,1.254,94,2.324,119,2.796,150,3.839,160,2.796,233,1.748,352,1.479,365,0.021,366,0.026,367,0.021,495,2.741,504,2.515,661,4.433,689,3.621,1149,3.149,1196,5.297,1197,4.338,1198,5.718,1199,5.718,1200,4.338,1201,4.338,1202,4.338,1203,6.107,1204,6.29,1205,4.338,1206,4.338,1207,4.338,1208,4.338,1209,4.338,1210,4.338,1211,5.718,1212,4.338,1213,4.338,1214,4.338,1215,4.338,1216,4.338,1217,4.338,1218,4.338,1219,4.338,1220,5.297,1221,5.297,1222,5.955,1223,5.297,1224,5.297,1225,4.338,1226,4.338,1227,4.338,1228,4.338,1229,5.718,1230,4.338,1231,4.338,1232,4.338]],["title/modules.html",[370,2.055]],["body/modules.html",[13,0.028,68,2.304,365,0.024,366,0.028,367,0.024,369,3.191,370,2.373,381,2.869,382,2.869,383,2.869,1233,6.219,1234,6.219,1235,6.219]],["title/overview.html",[1236,3.578]],["body/overview.html",[1,1.628,2,1.304,13,0.033,53,1.696,59,2.588,113,1.437,223,1.679,233,1.541,309,1.833,344,1.018,351,1.77,355,1.562,357,1.562,359,1.81,360,1.562,361,1.562,362,1.562,365,0.019,366,0.024,367,0.019,368,1.541,369,4.211,370,1.833,371,1.833,372,2.217,373,2.01,374,1.833,375,2.217,376,3.193,377,3.193,378,3.193,379,3.193,380,3.193,381,3.411,382,3.657,383,3.548,384,2.838,385,2.217,427,2.217,460,1.679,478,2.838,479,3.92,480,3.92,481,3.92,482,3.92,747,3.193,748,3.193,796,2.777,819,2.466,880,2.838,892,4.087,905,3.193,906,3.193,907,3.193,908,3.193,909,3.193,1108,3.193,1109,3.193,1236,3.193,1237,3.825,1238,3.825]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":636,"title":{},"body":{"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/UserListComponent.html":{}}}],["0.0",{"_index":1039,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.10.3",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":1100,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.2",{"_index":1040,"title":{},"body":{"components/UserListComponent.html":{}}}],["0px",{"_index":1031,"title":{},"body":{"components/UserListComponent.html":{}}}],["1",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["1.5px",{"_index":1077,"title":{},"body":{"components/UserListComponent.html":{}}}],["10",{"_index":1086,"title":{},"body":{"components/UserListComponent.html":{}}}],["10.0.14",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1201,"title":{},"body":{"index.html":{}}}],["10.1.1",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["10.2.4",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":570,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["1000",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["1000).pipe(map(t",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["10000",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["10px",{"_index":1080,"title":{},"body":{"components/UserListComponent.html":{}}}],["12/15",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["12000",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["14px",{"_index":1085,"title":{},"body":{"components/UserListComponent.html":{}}}],["15/15",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":567,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["2",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["2.0.2",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["2000",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["21/21",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["210px",{"_index":1087,"title":{},"body":{"components/UserListComponent.html":{}}}],["3",{"_index":893,"title":{},"body":{"injectables/QuestionService.html":{}}}],["3/3",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1097,"title":{},"body":{"components/UserListComponent.html":{}}}],["3000",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["337ab7",{"_index":1060,"title":{},"body":{"components/UserListComponent.html":{}}}],["340px",{"_index":1076,"title":{},"body":{"components/UserListComponent.html":{}}}],["4",{"_index":892,"title":{},"body":{"injectables/QuestionService.html":{},"overview.html":{}}}],["4.5.0",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":891,"title":{},"body":{"injectables/QuestionService.html":{}}}],["5/5",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1012,"title":{},"body":{"components/UserListComponent.html":{}}}],["500px",{"_index":569,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["56px",{"_index":1098,"title":{},"body":{"components/UserListComponent.html":{}}}],["5px",{"_index":1081,"title":{},"body":{"components/UserListComponent.html":{}}}],["6.5.5",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["6000",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["66",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1238,"title":{},"body":{"overview.html":{}}}],["75px",{"_index":1107,"title":{},"body":{"components/UserListComponent.html":{}}}],["8/10",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1090,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["85",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":574,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["9",{"_index":1237,"title":{},"body":{"overview.html":{}}}],["9/10",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["_http",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["_id",{"_index":824,"title":{},"body":{"interfaces/IUser.html":{}}}],["_sse",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["a.order",{"_index":897,"title":{},"body":{"injectables/QuestionService.html":{}}}],["absolute",{"_index":1095,"title":{},"body":{"components/UserListComponent.html":{}}}],["access",{"_index":799,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["accessors",{"_index":555,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["according",{"_index":666,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["activatedroute",{"_index":946,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":811,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["actual_component",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["address",{"_index":825,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["adress",{"_index":831,"title":{},"body":{"interfaces/IUser.html":{}}}],["alert('invalid",{"_index":986,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["alert('please",{"_index":814,"title":{},"body":{"guards/FormGuard.html":{}}}],["align",{"_index":1102,"title":{},"body":{"components/UserListComponent.html":{}}}],["angular",{"_index":1198,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1026,"title":{},"body":{"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":521,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":518,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/QuestionControlService.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":757,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{}}}],["angular/material/card",{"_index":761,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["angular/material/form",{"_index":753,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":759,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["angular/material/input",{"_index":755,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["angular/material/progress",{"_index":763,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/UserModule.html":{}}}],["angular/material/select",{"_index":914,"title":{},"body":{"modules/RFormModule.html":{}}}],["angular/material/snack",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["angular/material/table",{"_index":1021,"title":{},"body":{"components/UserListComponent.html":{},"modules/UserModule.html":{}}}],["angular/material/toolbar",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{}}}],["angular/platform",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"guards/FormGuard.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/service",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1022,"title":{},"body":{"components/UserListComponent.html":{}}}],["animate('225ms",{"_index":1036,"title":{},"body":{"components/UserListComponent.html":{}}}],["animations",{"_index":1027,"title":{},"body":{"components/UserListComponent.html":{}}}],["api/form",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["api/getall",{"_index":1136,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["app.component",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcomponent,countdownsnackbarcomponent,countdownservice",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["append",{"_index":779,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["application",{"_index":918,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["applyfilter",{"_index":998,"title":{},"body":{"components/UserListComponent.html":{}}}],["applyfilter(event",{"_index":1001,"title":{},"body":{"components/UserListComponent.html":{}}}],["appmodule",{"_index":369,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":439,"title":{},"body":{"classes/AreaQuestion.html":{}}}],["areaquestion",{"_index":426,"title":{"classes/AreaQuestion.html":{}},"body":{"classes/AreaQuestion.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["array",{"_index":870,"title":{},"body":{"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{}}}],["artifacts",{"_index":1213,"title":{},"body":{"index.html":{}}}],["async",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["attach",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["automatically",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["avatar",{"_index":708,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["awesome",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":896,"title":{},"body":{"injectables/QuestionService.html":{}}}],["b.order",{"_index":898,"title":{},"body":{"injectables/QuestionService.html":{}}}],["b64imageurl",{"_index":960,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["back",{"_index":979,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["background",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["backup",{"_index":663,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["bag",{"_index":497,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{},"guards/UserDetailGuard.html":{}}}],["bar",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/FileUploadModule.html":{}}}],["base",{"_index":459,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"classes/TextboxQuestion.html":{}}}],["base.ts",{"_index":838,"title":{},"body":{"classes/QuestionBase.html":{},"coverage.html":{}}}],["base.ts:11",{"_index":845,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:13",{"_index":842,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:15",{"_index":847,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:17",{"_index":840,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:3",{"_index":848,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:5",{"_index":843,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:7",{"_index":844,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:9",{"_index":846,"title":{},"body":{"classes/QuestionBase.html":{}}}],["before",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"guards/FormGuard.html":{}}}],["behaviorsubject",{"_index":601,"title":{},"body":{"injectables/EventService.html":{}}}],["behaviorsubject(this.type",{"_index":599,"title":{},"body":{"injectables/EventService.html":{}}}],["below",{"_index":841,"title":{},"body":{"classes/QuestionBase.html":{}}}],["between",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["bezier(0.4",{"_index":1038,"title":{},"body":{"components/UserListComponent.html":{}}}],["bio",{"_index":826,"title":{},"body":{"interfaces/IUser.html":{}}}],["bio:string",{"_index":837,"title":{},"body":{"interfaces/IUser.html":{}}}],["biometric",{"_index":832,"title":{},"body":{"interfaces/IUser.html":{}}}],["biometry",{"_index":712,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["black",{"_index":1079,"title":{},"body":{"components/UserListComponent.html":{}}}],["blue",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["bold",{"_index":1089,"title":{},"body":{"components/UserListComponent.html":{}}}],["boolean",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{},"guards/UserDetailGuard.html":{}}}],["bootstrap",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":1070,"title":{},"body":{"components/UserListComponent.html":{}}}],["bottom",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["browse",{"_index":1235,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{}}}],["build",{"_index":661,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"index.html":{}}}],["busy",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/StateParameterService.html":{}}}],["button",{"_index":515,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{}}}],["canactivate",{"_index":769,"title":{},"body":{"modules/FileUploadModule.html":{},"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"modules/UserModule.html":{}}}],["canactivate(next",{"_index":983,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["case",{"_index":451,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["catcherror",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror(this.handleerror",{"_index":1140,"title":{},"body":{"injectables/UserService.html":{}}}],["center",{"_index":1104,"title":{},"body":{"components/UserListComponent.html":{}}}],["change",{"_index":1209,"title":{},"body":{"index.html":{}}}],["check",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["checker",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["checker(val",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["choose",{"_index":450,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["chooses",{"_index":670,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["cin",{"_index":530,"title":{},"body":{"components/DynamicFormComponent.html":{},"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["cin','address','sexe",{"_index":1006,"title":{},"body":{"components/UserListComponent.html":{}}}],["citizen",{"_index":499,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["citizens",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["citizents",{"_index":1058,"title":{},"body":{"components/UserListComponent.html":{}}}],["class",{"_index":84,"title":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["classes",{"_index":427,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{},"overview.html":{}}}],["cli",{"_index":1199,"title":{},"body":{"index.html":{}}}],["client",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{}}}],["cluster_appmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_fileuploadmodule",{"_index":747,"title":{},"body":{"modules/FileUploadModule.html":{},"overview.html":{}}}],["cluster_fileuploadmodule_declarations",{"_index":748,"title":{},"body":{"modules/FileUploadModule.html":{},"overview.html":{}}}],["cluster_rformmodule",{"_index":905,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_rformmodule_bootstrap",{"_index":909,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_rformmodule_declarations",{"_index":906,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_rformmodule_dynamicformcomponent_providers",{"_index":907,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_rformmodule_rformcomponent_providers",{"_index":908,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1108,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":1109,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":1149,"title":{},"body":{"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["collapsed",{"_index":1035,"title":{},"body":{"components/UserListComponent.html":{}}}],["color",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["columns",{"_index":1008,"title":{},"body":{"components/UserListComponent.html":{}}}],["commonmodule",{"_index":1115,"title":{},"body":{"modules/UserModule.html":{}}}],["communication",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["complete",{"_index":815,"title":{},"body":{"guards/FormGuard.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"overview.html":{}}}],["connected",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["connecting",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["connection",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["connectivity",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.error(errormessage",{"_index":1152,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log",{"_index":1139,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"access",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.log(\"back",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.log(\"closing",{"_index":640,"title":{},"body":{"injectables/EventService.html":{}}}],["console.log(\"opening",{"_index":620,"title":{},"body":{"injectables/EventService.html":{}}}],["console.log(\"reconnecting",{"_index":637,"title":{},"body":{"injectables/EventService.html":{}}}],["console.log(\"still",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.log(event.body.message",{"_index":738,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["console.log(msg",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.log(this.cookieservice.getall",{"_index":532,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["const",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["construct",{"_index":660,"title":{},"body":{"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["constructor(/*private",{"_index":522,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["constructor(_http",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(countdown",{"_index":465,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["constructor(domsanitizer",{"_index":999,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(http",{"_index":772,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["constructor(options",{"_index":839,"title":{},"body":{"classes/QuestionBase.html":{}}}],["constructor(private",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":945,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["constructor(router",{"_index":657,"title":{},"body":{"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["constructor(service",{"_index":899,"title":{},"body":{"components/RFormComponent.html":{}}}],["constructor(stservice",{"_index":489,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["constructs",{"_index":493,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{}}}],["containing",{"_index":674,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["content",{"_index":1106,"title":{},"body":{"components/UserListComponent.html":{}}}],["control.service",{"_index":520,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["control.service.ts",{"_index":865,"title":{},"body":{"injectables/QuestionControlService.html":{},"coverage.html":{}}}],["control.service.ts:13",{"_index":869,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:7",{"_index":867,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["controltype",{"_index":433,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["cookie",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{}}}],["cookieservice,*/private",{"_index":523,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["countdown",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["countdownservice",{"_index":59,"title":{"injectables/CountdownService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countdownsnackbarcomponent",{"_index":113,"title":{"components/CountdownSnackbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1158,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createonline",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["creates",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["cross",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["cubic",{"_index":1037,"title":{},"body":{"components/UserListComponent.html":{}}}],["current",{"_index":678,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["currentfile",{"_index":650,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["custom",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["danger",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["data",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/UserListComponent.html":{}}}],["datasource",{"_index":991,"title":{},"body":{"components/UserListComponent.html":{}}}],["date.now",{"_index":528,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["declarations",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":467,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["default",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["define",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["defined",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["dependencies",{"_index":371,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["destroy",{"_index":485,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["detail",{"_index":938,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["detail.component",{"_index":1112,"title":{},"body":{"modules/UserModule.html":{}}}],["detail.component.css",{"_index":939,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.html",{"_index":940,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts",{"_index":937,"title":{},"body":{"components/UserDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:17",{"_index":963,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":962,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":949,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":954,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":952,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":959,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:54",{"_index":955,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.guard",{"_index":1113,"title":{},"body":{"modules/UserModule.html":{}}}],["detail.guard.ts",{"_index":981,"title":{},"body":{"guards/UserDetailGuard.html":{},"coverage.html":{}}}],["detail.guard.ts:11",{"_index":982,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["detail.guard.ts:15",{"_index":984,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["dev",{"_index":1206,"title":{},"body":{"index.html":{}}}],["development",{"_index":1202,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1075,"title":{},"body":{"components/UserListComponent.html":{}}}],["difference",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["directive",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["directives",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1212,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1216,"title":{},"body":{"index.html":{}}}],["disappear",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["disconnected",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["display",{"_index":1073,"title":{},"body":{"components/UserListComponent.html":{}}}],["displayedcolumns",{"_index":992,"title":{},"body":{"components/UserListComponent.html":{}}}],["dist",{"_index":1215,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["domsanitizer",{"_index":948,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["domsanitizer,private",{"_index":1041,"title":{},"body":{"components/UserListComponent.html":{}}}],["don't",{"_index":801,"title":{},"body":{"guards/FormGuard.html":{}}}],["done",{"_index":684,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{}}}],["dossier_\"+obj['cin",{"_index":538,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["dropdown",{"_index":452,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["dropdown.ts",{"_index":472,"title":{},"body":{"classes/DropdownQuestion.html":{},"coverage.html":{}}}],["dropdown.ts:4",{"_index":473,"title":{},"body":{"classes/DropdownQuestion.html":{}}}],["dropdownquestion",{"_index":471,"title":{"classes/DropdownQuestion.html":{}},"body":{"classes/DropdownQuestion.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["duration",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["dynamic",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"dependencies.html":{}}}],["dynamicform",{"_index":494,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["dynamicformcomponent",{"_index":351,"title":{"components/DynamicFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicformquestioncomponent",{"_index":355,"title":{"components/DynamicFormQuestionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["e",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["e2e",{"_index":1226,"title":{},"body":{"index.html":{}}}],["each",{"_index":552,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{}}}],["efefef",{"_index":1069,"title":{},"body":{"components/UserListComponent.html":{}}}],["element",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["element.address",{"_index":1055,"title":{},"body":{"components/UserListComponent.html":{}}}],["element.cin",{"_index":1054,"title":{},"body":{"components/UserListComponent.html":{}}}],["element.firstname",{"_index":1052,"title":{},"body":{"components/UserListComponent.html":{}}}],["element.lastname",{"_index":1053,"title":{},"body":{"components/UserListComponent.html":{}}}],["element.sexe",{"_index":1056,"title":{},"body":{"components/UserListComponent.html":{}}}],["emit",{"_index":501,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/EventService.html":{}}}],["emits",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["emitted",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["emitter",{"_index":502,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/StateParameterService.html":{}}}],["emitting",{"_index":587,"title":{},"body":{"injectables/EventService.html":{}}}],["enabled",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["entrycomponents",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.production",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["err.error",{"_index":1145,"title":{},"body":{"injectables/UserService.html":{}}}],["err.error.message",{"_index":1148,"title":{},"body":{"injectables/UserService.html":{}}}],["err.message",{"_index":1151,"title":{},"body":{"injectables/UserService.html":{}}}],["err.status",{"_index":1150,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":969,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["errorevent",{"_index":1146,"title":{},"body":{"injectables/UserService.html":{}}}],["errormessage",{"_index":941,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["errors",{"_index":589,"title":{},"body":{"injectables/EventService.html":{}}}],["errsnackbar",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["errsnackbar(msg",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["event",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/StateParameterService.html":{},"components/UserListComponent.html":{}}}],["event.body.message",{"_index":737,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.loaded",{"_index":733,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.target",{"_index":716,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UserListComponent.html":{}}}],["event.target.files",{"_index":715,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.total",{"_index":734,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.type",{"_index":730,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["eventemitter",{"_index":920,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["eventemitter,inject",{"_index":696,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["events",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["eventservice",{"_index":61,"title":{"injectables/EventService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"coverage.html":{}}}],["eventservice.local",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["eventservice.server",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["eventsource",{"_index":593,"title":{},"body":{"injectables/EventService.html":{}}}],["eventsource(host+'/api/state",{"_index":617,"title":{},"body":{"injectables/EventService.html":{}}}],["evs",{"_index":577,"title":{},"body":{"injectables/EventService.html":{}}}],["ex",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["example",{"_index":453,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{},"components/UserListComponent.html":{}}}],["execute",{"_index":1223,"title":{},"body":{"index.html":{}}}],["execution",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["exists",{"_index":805,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["expanded",{"_index":1065,"title":{},"body":{"components/UserListComponent.html":{}}}],["expandedelement",{"_index":993,"title":{},"body":{"components/UserListComponent.html":{}}}],["export",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["exports",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["extends",{"_index":431,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["f",{"_index":889,"title":{},"body":{"injectables/QuestionService.html":{}}}],["false",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["fb",{"_index":651,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["field",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["fields",{"_index":496,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["file,file.name",{"_index":787,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["file,id:string,hostname:string,type:string",{"_index":784,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filelist",{"_index":687,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["filereader",{"_index":721,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["files",{"_index":689,"title":{},"body":{"components/FileUploadComponent.html":{},"index.html":{}}}],["fileuploadcomponent",{"_index":357,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadmodule",{"_index":381,"title":{"modules/FileUploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules.html":{},"overview.html":{}}}],["fileuploadservice",{"_index":55,"title":{"injectables/FileUploadService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"coverage.html":{}}}],["filitered",{"_index":1003,"title":{},"body":{"components/UserListComponent.html":{}}}],["filled",{"_index":925,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["filter",{"_index":1051,"title":{},"body":{"components/UserListComponent.html":{}}}],["filtervalue",{"_index":1042,"title":{},"body":{"components/UserListComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":1045,"title":{},"body":{"components/UserListComponent.html":{}}}],["fingerprint",{"_index":691,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{}}}],["first",{"_index":833,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["first,switchmap",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["firstname",{"_index":827,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserListComponent.html":{}}}],["flag",{"_index":1218,"title":{},"body":{"index.html":{}}}],["flex",{"_index":1074,"title":{},"body":{"components/UserListComponent.html":{}}}],["following",{"_index":549,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["font",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["foo",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["form",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["form'},{'name",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["form.component",{"_index":911,"title":{},"body":{"modules/RFormModule.html":{}}}],["form.component.html",{"_index":484,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts",{"_index":475,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/RFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:18",{"_index":900,"title":{},"body":{"components/RFormComponent.html":{}}}],["form.component.ts:22",{"_index":506,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts:24",{"_index":516,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts:25",{"_index":492,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts:36",{"_index":508,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts:43",{"_index":511,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.css",{"_index":553,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["form.guard",{"_index":767,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["form.module",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["form.module.ts",{"_index":910,"title":{},"body":{"modules/RFormModule.html":{}}}],["form/bio",{"_index":647,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{}}}],["form/dynamic",{"_index":474,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"coverage.html":{}}}],["form/pic",{"_index":646,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{}}}],["form/question",{"_index":429,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["form/question.service.ts",{"_index":881,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["form/question.service.ts:13",{"_index":883,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/r",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"coverage.html":{}}}],["form:json",{"_index":932,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["formbuilder",{"_index":658,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formbuilder,private",{"_index":705,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formcontrol",{"_index":871,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol(question.value",{"_index":877,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formdata",{"_index":780,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["formdata.append('_id',id",{"_index":785,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["formdata.append('file",{"_index":786,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["formgroup",{"_index":477,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"injectables/QuestionControlService.html":{}}}],["formgroup(group",{"_index":879,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formguard",{"_index":766,"title":{"guards/FormGuard.html":{}},"body":{"modules/FileUploadModule.html":{},"guards/FormGuard.html":{},"coverage.html":{}}}],["fromevent",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["fromevent(window",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["full",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormQuestionComponent.html":{}}}],["function",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["function(e",{"_index":619,"title":{},"body":{"injectables/EventService.html":{}}}],["functions",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["further",{"_index":1228,"title":{},"body":{"index.html":{}}}],["gender",{"_index":886,"title":{},"body":{"injectables/QuestionService.html":{}}}],["gendre",{"_index":835,"title":{},"body":{"interfaces/IUser.html":{},"components/UserListComponent.html":{}}}],["generate",{"_index":1211,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1197,"title":{},"body":{"index.html":{}}}],["genre",{"_index":977,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["getisvalid",{"_index":559,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["getquestions",{"_index":882,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getting",{"_index":509,"title":{"index.html":{}},"body":{"components/DynamicFormComponent.html":{}}}],["getupdates",{"_index":580,"title":{},"body":{"injectables/EventService.html":{}}}],["getupdates(host",{"_index":584,"title":{},"body":{"injectables/EventService.html":{}}}],["getupdates(host=eventservice.server",{"_index":609,"title":{},"body":{"injectables/EventService.html":{}}}],["getuser",{"_index":942,"title":{},"body":{"components/UserDetailComponent.html":{},"injectables/UserService.html":{}}}],["getuser(id",{"_index":951,"title":{},"body":{"components/UserDetailComponent.html":{},"injectables/UserService.html":{}}}],["getusers",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersservice",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":1231,"title":{},"body":{"index.html":{}}}],["grant",{"_index":807,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["group",{"_index":873,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[question.key",{"_index":875,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["guard",{"_index":795,"title":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"coverage.html":{}}}],["guards",{"_index":796,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"overview.html":{}}}],["handle",{"_index":476,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["handleerror",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["handleerror(err",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["handling",{"_index":588,"title":{},"body":{"injectables/EventService.html":{}}}],["height",{"_index":1063,"title":{},"body":{"components/UserListComponent.html":{}}}],["help",{"_index":1229,"title":{},"body":{"index.html":{}}}],["helps",{"_index":576,"title":{},"body":{"injectables/EventService.html":{}}}],["hidden",{"_index":1072,"title":{},"body":{"components/UserListComponent.html":{}}}],["hits",{"_index":514,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{}}}],["home",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["home/welcome.component",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["horizontal",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["horizontalposition",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["host",{"_index":590,"title":{},"body":{"injectables/EventService.html":{},"injectables/StateParameterService.html":{}}}],["host:string",{"_index":931,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["host==eventservice.server",{"_index":628,"title":{},"body":{"injectables/EventService.html":{}}}],["hostname",{"_index":775,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["hostname+'/api/upload/'+type",{"_index":790,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["html",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["htmlinputelement).files[0",{"_index":717,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["htmlinputelement).value",{"_index":1043,"title":{},"body":{"components/UserListComponent.html":{}}}],["http",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3003",{"_index":595,"title":{},"body":{"injectables/EventService.html":{}}}],["http://localhost:4200",{"_index":1207,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"injectables/UserService.html":{}}}],["httpclient,private",{"_index":1132,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["httpevent,httpheaders",{"_index":783,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["httpeventtype",{"_index":699,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpeventtype.uploadprogress",{"_index":731,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httprequest",{"_index":782,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["httprequest('post",{"_index":789,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["httpresponse",{"_index":700,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["https://yarlomia.ga",{"_index":597,"title":{},"body":{"injectables/EventService.html":{}}}],["id",{"_index":500,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["if(!this.stservice.host",{"_index":1133,"title":{},"body":{"injectables/UserService.html":{}}}],["if(!this.test",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["if(host==eventservice.server",{"_index":632,"title":{},"body":{"injectables/EventService.html":{}}}],["if(k==2",{"_index":631,"title":{},"body":{"injectables/EventService.html":{}}}],["if(this.evs.url==eventservice.server+\"/api/state",{"_index":638,"title":{},"body":{"injectables/EventService.html":{}}}],["if(this.stservice.host==eventservice.local",{"_index":543,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["image",{"_index":664,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"interfaces/IUser.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["imagemargin",{"_index":994,"title":{},"body":{"components/UserListComponent.html":{}}}],["imageurl",{"_index":652,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["imagewidth",{"_index":995,"title":{},"body":{"components/UserListComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["import",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["imports",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["incomplete",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["information",{"_index":823,"title":{},"body":{"interfaces/IUser.html":{}}}],["informations",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{}}}],["inherited",{"_index":441,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["initial",{"_index":612,"title":{},"body":{"injectables/EventService.html":{}}}],["initiate",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["inject",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["injectable",{"_index":193,"title":{"injectables/CountdownService.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":460,"title":{},"body":{"injectables/CountdownService.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":507,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"modules/FileUploadModule.html":{},"dependencies.html":{}}}],["input.value",{"_index":1057,"title":{},"body":{"components/UserListComponent.html":{}}}],["inputs",{"_index":487,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{}}}],["inside",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/StateParameterService.html":{}}}],["instance",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/RFormComponent.html":{}}}],["instanceof",{"_index":735,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/UserService.html":{}}}],["interface",{"_index":819,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":821,"title":{},"body":{"interfaces/IUser.html":{}}}],["internet",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["interval",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["interval(this.val",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["isloadingresults",{"_index":996,"title":{},"body":{"components/UserListComponent.html":{}}}],["isonline",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["isvalid",{"_index":556,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["items",{"_index":1103,"title":{},"body":{"components/UserListComponent.html":{}}}],["iuser",{"_index":820,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["json",{"_index":793,"title":{},"body":{"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["json.stringify(this.form.getrawvalue",{"_index":534,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["justify",{"_index":1105,"title":{},"body":{"components/UserListComponent.html":{}}}],["k",{"_index":613,"title":{},"body":{"injectables/EventService.html":{}}}],["k=0",{"_index":624,"title":{},"body":{"injectables/EventService.html":{}}}],["k==0",{"_index":622,"title":{},"body":{"injectables/EventService.html":{}}}],["karma",{"_index":1225,"title":{},"body":{"index.html":{}}}],["key",{"_index":434,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["know",{"_index":604,"title":{},"body":{"injectables/EventService.html":{}}}],["label",{"_index":435,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["large",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/UserListComponent.html":{}}}],["last",{"_index":834,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["lastname",{"_index":828,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserListComponent.html":{}}}],["left",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["legend",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"components/WelcomeComponent.html":{},"overview.html":{}}}],["lighter",{"_index":1083,"title":{},"body":{"components/UserListComponent.html":{}}}],["line",{"_index":1091,"title":{},"body":{"components/UserListComponent.html":{}}}],["link",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":1016,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component",{"_index":1111,"title":{},"body":{"modules/UserModule.html":{}}}],["list.component.css",{"_index":989,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.html",{"_index":990,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":987,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1017,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:28",{"_index":1013,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:29",{"_index":1011,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:30",{"_index":1018,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:33",{"_index":1009,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:36",{"_index":1010,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:39",{"_index":1014,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:42",{"_index":1019,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:45",{"_index":1007,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:46",{"_index":1000,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:51",{"_index":1002,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:57",{"_index":1005,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:65",{"_index":1004,"title":{},"body":{"components/UserListComponent.html":{}}}],["liste",{"_index":988,"title":{},"body":{"components/UserListComponent.html":{}}}],["listening",{"_index":586,"title":{},"body":{"injectables/EventService.html":{}}}],["literal",{"_index":448,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["loading",{"_index":1093,"title":{},"body":{"components/UserListComponent.html":{}}}],["loc",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/QuestionService.html":{}}}],["loc.ts",{"_index":430,"title":{},"body":{"classes/AreaQuestion.html":{},"coverage.html":{}}}],["loc.ts:4",{"_index":440,"title":{},"body":{"classes/AreaQuestion.html":{}}}],["local",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["local=\"http://localhost:3003",{"_index":607,"title":{},"body":{"injectables/EventService.html":{}}}],["locationstrategy",{"_index":480,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/RFormModule.html":{},"overview.html":{}}}],["lock",{"_index":921,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["lost",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["m",{"_index":887,"title":{},"body":{"injectables/QuestionService.html":{}}}],["main",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["man",{"_index":888,"title":{},"body":{"injectables/QuestionService.html":{}}}],["map",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/UserService.html":{}}}],["map((users",{"_index":1142,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":1084,"title":{},"body":{"components/UserListComponent.html":{}}}],["mat_snack_bar_data",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["matbuttonmodule",{"_index":756,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{}}}],["matcardmodule",{"_index":760,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["matching",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":765,"title":{},"body":{"modules/FileUploadModule.html":{},"dependencies.html":{}}}],["materialfileinputmodule",{"_index":764,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["matformfieldmodule",{"_index":752,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["math.floor(time",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["math.round(100",{"_index":732,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["maticonmodule",{"_index":758,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["matinputmodule",{"_index":754,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["matprogressbarmodule",{"_index":762,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["matprogressspinnermodule",{"_index":1116,"title":{},"body":{"modules/UserModule.html":{}}}],["matselectmodule",{"_index":913,"title":{},"body":{"modules/RFormModule.html":{}}}],["matsnackbar",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["matsnackbarhorizontalposition",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["matsnackbarmodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbarref",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["matsnackbarverticalposition",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["mattabledatasource",{"_index":1020,"title":{},"body":{"components/UserListComponent.html":{}}}],["mattabledatasource(this.users",{"_index":1050,"title":{},"body":{"components/UserListComponent.html":{}}}],["mattablemodule",{"_index":1114,"title":{},"body":{"modules/UserModule.html":{}}}],["mattoolbarmodule",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{}}}],["max",{"_index":568,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["merge",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["message",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["message:string",{"_index":701,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["metadata",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["methods",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["milliseconds",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["min",{"_index":565,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["minheight",{"_index":1032,"title":{},"body":{"components/UserListComponent.html":{}}}],["mode",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["modes",{"_index":923,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["module",{"_index":368,"title":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":370,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1230,"title":{},"body":{"index.html":{}}}],["msg",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["n",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["nav",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":504,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"index.html":{}}}],["navigationstart",{"_index":698,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["need",{"_index":917,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["new",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"components/UserListComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":694,"title":{},"body":{"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["next.url[1].path",{"_index":985,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["ng",{"_index":1204,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["ngondestroy",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["ngoninit",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["ngx",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{},"modules/FileUploadModule.html":{},"dependencies.html":{}}}],["normal",{"_index":1092,"title":{},"body":{"components/UserListComponent.html":{}}}],["now",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["now{{data",{"_index":470,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["null",{"_index":639,"title":{},"body":{"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/UserListComponent.html":{}}}],["number",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/FileUploadComponent.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{},"components/UserListComponent.html":{}}}],["numbers",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["nx",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["obj",{"_index":535,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["obj).pipe(takeuntil(this.destroy$)).subscribe(data",{"_index":540,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["obj[\"_id",{"_index":537,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["object",{"_index":503,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{}}}],["objects",{"_index":510,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{}}}],["observable",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["observable((sub",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["observe",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["observer",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["occurred",{"_index":1147,"title":{},"body":{"injectables/UserService.html":{}}}],["of(questions.sort((a",{"_index":895,"title":{},"body":{"injectables/QuestionService.html":{}}}],["offline",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["offline').pipe(map",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["ok",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["old",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["oldloc",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["onback",{"_index":943,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["ondestroy",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["one",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/StateParameterService.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["oninit,inject",{"_index":517,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["online",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/StateParameterService.html":{}}}],["online').pipe(map",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["onsubmit",{"_index":486,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["open",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["opened",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["opens",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["opensnackbar",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["opensnackbar(msg",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["opt.value",{"_index":564,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["optional",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["options",{"_index":436,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["options.controltype",{"_index":860,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.key",{"_index":852,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.label",{"_index":854,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.options",{"_index":864,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.order",{"_index":858,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.required",{"_index":856,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.type",{"_index":862,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.value",{"_index":850,"title":{},"body":{"classes/QuestionBase.html":{}}}],["order",{"_index":437,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["out",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":1071,"title":{},"body":{"components/UserListComponent.html":{}}}],["overview",{"_index":1236,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p._id",{"_index":1144,"title":{},"body":{"injectables/UserService.html":{}}}],["package",{"_index":1179,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":572,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{}}}],["page",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["pagetitle",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["pagetitle:string",{"_index":703,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["panelclass",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["param",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{}}}],["parameter.service",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["parameter.service.ts",{"_index":916,"title":{},"body":{"injectables/StateParameterService.html":{},"coverage.html":{}}}],["parameter.service.ts:10",{"_index":928,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameter.service.ts:12",{"_index":926,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameter.service.ts:14",{"_index":924,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameter.service.ts:16",{"_index":929,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameter.service.ts:18",{"_index":919,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["path",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["pathlocationstrategy",{"_index":482,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/RFormModule.html":{},"overview.html":{}}}],["pathmatch",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["personal",{"_index":547,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["photo",{"_index":676,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["photos",{"_index":817,"title":{},"body":{"guards/FormGuard.html":{}}}],["pic",{"_index":829,"title":{},"body":{"interfaces/IUser.html":{},"injectables/StateParameterService.html":{},"components/UserListComponent.html":{}}}],["pic\").subscribe",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["pic:file",{"_index":933,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["picture",{"_index":930,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["pipe",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{}}}],["pipe(first",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["placeholder",{"_index":447,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["pm",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["portrait",{"_index":690,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["position",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["post",{"_index":777,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["postimg",{"_index":771,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["postimg(file",{"_index":774,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["preview",{"_index":671,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["previously",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["print",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["private",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/UserDetailComponent.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1217,"title":{},"body":{"index.html":{}}}],["production",{"_index":1219,"title":{},"body":{"index.html":{}}}],["progress",{"_index":653,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["prohibit",{"_index":798,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["project",{"_index":1196,"title":{},"body":{"index.html":{}}}],["promise",{"_index":809,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["protractor",{"_index":1227,"title":{},"body":{"index.html":{}}}],["provide",{"_index":479,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/RFormModule.html":{},"overview.html":{}}}],["providedin",{"_index":605,"title":{},"body":{"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{},"modules/FileUploadModule.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/WelcomeComponent.html":{}}}],["qcs",{"_index":490,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["question",{"_index":443,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"classes/TextboxQuestion.html":{}}}],["question'},{'name",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["question.component",{"_index":912,"title":{},"body":{"modules/RFormModule.html":{}}}],["question.component.html",{"_index":554,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.component.ts",{"_index":551,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"coverage.html":{}}}],["question.component.ts:13",{"_index":558,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.component.ts:15",{"_index":557,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.component.ts:17",{"_index":560,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.label",{"_index":563,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.required",{"_index":876,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.service",{"_index":902,"title":{},"body":{"components/RFormComponent.html":{}}}],["questionbase",{"_index":432,"title":{"classes/QuestionBase.html":{}},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["questionbase:11",{"_index":454,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:13",{"_index":442,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:15",{"_index":456,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:17",{"_index":449,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:3",{"_index":458,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:5",{"_index":445,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:7",{"_index":446,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:9",{"_index":455,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questioncontrolservice",{"_index":478,"title":{"injectables/QuestionControlService.html":{}},"body":{"components/DynamicFormComponent.html":{},"injectables/QuestionControlService.html":{},"modules/RFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["questioncontrolservice,private",{"_index":524,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["questions",{"_index":488,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{}}}],["questions.foreach(question",{"_index":874,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["questionservice",{"_index":880,"title":{"injectables/QuestionService.html":{}},"body":{"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["r",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/RFormModule.html":{}}}],["reactive",{"_index":662,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reactiveformsmodule",{"_index":750,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["reader",{"_index":720,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reader.onload",{"_index":722,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reader.readasdataurl(file",{"_index":725,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reader.result",{"_index":724,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["readme",{"_index":1232,"title":{},"body":{"index.html":{}}}],["received",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["redirectto",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["refers",{"_index":781,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["reload",{"_index":1208,"title":{},"body":{"index.html":{}}}],["remote",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["reportprogress",{"_index":791,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["req",{"_index":788,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["request",{"_index":778,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["required",{"_index":438,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["reset",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resp.status",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["response",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["responsetype",{"_index":792,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["restore",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["result",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["retreive",{"_index":804,"title":{},"body":{"guards/FormGuard.html":{}}}],["retreived",{"_index":901,"title":{},"body":{"components/RFormComponent.html":{}}}],["retrieved",{"_index":802,"title":{},"body":{"guards/FormGuard.html":{}}}],["retry",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["retrying",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["return",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["returnasobservable",{"_index":581,"title":{},"body":{"injectables/EventService.html":{}}}],["returned",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":808,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["returns",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["rformcomponent",{"_index":359,"title":{"components/RFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rformmodule",{"_index":382,"title":{"modules/RFormModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RFormModule.html":{},"modules.html":{},"overview.html":{}}}],["rgba(0",{"_index":1099,"title":{},"body":{"components/UserListComponent.html":{}}}],["right",{"_index":573,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["route",{"_index":950,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["router",{"_index":491,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["router,private",{"_index":525,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["routermodule.forchild",{"_index":768,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["routermodule.forroot",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":812,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["row",{"_index":1062,"title":{},"body":{"components/UserListComponent.html":{}}}],["row):active",{"_index":1068,"title":{},"body":{"components/UserListComponent.html":{}}}],["row):hover",{"_index":1066,"title":{},"body":{"components/UserListComponent.html":{}}}],["row:not(.example",{"_index":1064,"title":{},"body":{"components/UserListComponent.html":{}}}],["run",{"_index":1203,"title":{},"body":{"index.html":{}}}],["running",{"_index":1220,"title":{},"body":{"index.html":{}}}],["rx",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["rxjs",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/UserService.html":{}}}],["saferesourceurl",{"_index":961,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["sanatizeurl",{"_index":944,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["sanatizeurl(b64imageurl",{"_index":958,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["save",{"_index":548,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["saved",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{}}}],["scaffolding",{"_index":1210,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["select",{"_index":746,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selected",{"_index":679,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selectedfiles",{"_index":654,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selectfile",{"_index":656,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selectfile(event",{"_index":667,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["sent",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{}}}],["sequential",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["serve",{"_index":1205,"title":{},"body":{"index.html":{}}}],["server",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["server=\"https://yarlomia.ga",{"_index":606,"title":{},"body":{"injectables/EventService.html":{}}}],["service",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"components/RFormComponent.html":{},"guards/UserDetailGuard.html":{},"dependencies.html":{}}}],["service.getquestions",{"_index":904,"title":{},"body":{"components/RFormComponent.html":{}}}],["serviceworkermodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["settimeout",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["sexe",{"_index":830,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{}}}],["sexe:string",{"_index":836,"title":{},"body":{"interfaces/IUser.html":{}}}],["shade",{"_index":1094,"title":{},"body":{"components/UserListComponent.html":{}}}],["shared/event.service",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["shared/st",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["show",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["showimage",{"_index":997,"title":{},"body":{"components/UserListComponent.html":{}}}],["shown",{"_index":672,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{}}}],["size",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/UserListComponent.html":{}}}],["snack",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["snackbar",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["snackbar',1000",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["snackbar'},{'name",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["snackbarref",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["snval",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["solid",{"_index":1078,"title":{},"body":{"components/UserListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["sources",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["specified",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["spinner",{"_index":1015,"title":{},"body":{"components/UserListComponent.html":{},"modules/UserModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:100",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:104",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:108",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:112",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:153",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":463,"title":{},"body":{"injectables/CountdownService.html":{}}}],["src/app/app.component.ts:21",{"_index":464,"title":{},"body":{"injectables/CountdownService.html":{}}}],["src/app/app.component.ts:213",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:222",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:246",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:260",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":461,"title":{},"body":{"injectables/CountdownService.html":{}}}],["src/app/app.component.ts:286",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:299",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:333",{"_index":466,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["src/app/app.component.ts:340",{"_index":468,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["src/app/app.component.ts:341",{"_index":469,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":462,"title":{},"body":{"injectables/CountdownService.html":{}}}],["src/app/app.component.ts:65",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:69",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:74",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:92",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:96",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/file",{"_index":643,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"coverage.html":{}}}],["src/app/home/welcome.component.ts",{"_index":1154,"title":{},"body":{"components/WelcomeComponent.html":{},"coverage.html":{}}}],["src/app/home/welcome.component.ts:10",{"_index":1157,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["src/app/r",{"_index":428,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["src/app/shared/event.service.ts",{"_index":575,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/shared/event.service.ts:12",{"_index":598,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:14",{"_index":583,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:19",{"_index":594,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:23",{"_index":603,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:27",{"_index":600,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:31",{"_index":591,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:37",{"_index":585,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:81",{"_index":592,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/st",{"_index":915,"title":{},"body":{"injectables/StateParameterService.html":{},"coverage.html":{}}}],["src/app/users/user",{"_index":936,"title":{},"body":{"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/users/user.module.ts",{"_index":1110,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/users/user.service.ts",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/users/user.service.ts:14",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/user.service.ts:19",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/user.service.ts:30",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/user.service.ts:38",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/user.ts",{"_index":822,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["start",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{}}}],["start(time",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["start+60000,'/',this.hostname,true",{"_index":545,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["started",{"_index":1195,"title":{"index.html":{}},"body":{}}],["starttimer",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["state",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["state('collapsed",{"_index":1029,"title":{},"body":{"components/UserListComponent.html":{}}}],["state('expanded",{"_index":1033,"title":{},"body":{"components/UserListComponent.html":{}}}],["statements",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["stateparameterservice",{"_index":53,"title":{"injectables/StateParameterService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["stateparameterservice,cookieservice",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["static",{"_index":578,"title":{},"body":{"injectables/EventService.html":{}}}],["status",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["steps",{"_index":800,"title":{},"body":{"guards/FormGuard.html":{}}}],["stops",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["stopupdates",{"_index":582,"title":{},"body":{"injectables/EventService.html":{}}}],["store",{"_index":498,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/StateParameterService.html":{}}}],["stored",{"_index":1214,"title":{},"body":{"index.html":{}}}],["string",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["stservice",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["stservice:stateparameterservice",{"_index":813,"title":{},"body":{"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["style",{"_index":1023,"title":{},"body":{"components/UserListComponent.html":{}}}],["style({height",{"_index":1030,"title":{},"body":{"components/UserListComponent.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["sub",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["sub.complete",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["sub.next(navigator.online",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["subj",{"_index":579,"title":{},"body":{"injectables/EventService.html":{}}}],["subject",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{}}}],["subject,timer",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["subject.next(\"r",{"_index":634,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next(\"rx",{"_index":633,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next('e",{"_index":630,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next('ex",{"_index":629,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next(e[\"data",{"_index":626,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next(e[\"data\"]+'x",{"_index":623,"title":{},"body":{"injectables/EventService.html":{}}}],["submit",{"_index":512,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["subscribe",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["subscribe(resp",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["subscription",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["subscriptions",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["succefully",{"_index":683,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{}}}],["success",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["successfully",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{}}}],["support",{"_index":1233,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1234,"title":{},"body":{"modules.html":{}}}],["switching",{"_index":922,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["symbol",{"_index":1088,"title":{},"body":{"components/UserListComponent.html":{}}}],["t",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["table",{"_index":956,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["take(seconds",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["takes",{"_index":927,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["takeuntil",{"_index":519,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["tap",{"_index":1131,"title":{},"body":{"injectables/UserService.html":{}}}],["tap(data",{"_index":1138,"title":{},"body":{"injectables/UserService.html":{}}}],["target",{"_index":673,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["td",{"_index":571,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{}}}],["template",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["templateurl",{"_index":483,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["test",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["tests",{"_index":1222,"title":{},"body":{"index.html":{}}}],["text",{"_index":894,"title":{},"body":{"injectables/QuestionService.html":{}}}],["text,number",{"_index":457,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["textbox",{"_index":885,"title":{},"body":{"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["textbox,area,dropdown,checkbox",{"_index":444,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["textbox.ts",{"_index":934,"title":{},"body":{"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["textbox.ts:4",{"_index":935,"title":{},"body":{"classes/TextboxQuestion.html":{}}}],["textboxquestion",{"_index":884,"title":{"classes/TextboxQuestion.html":{}},"body":{"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["thead",{"_index":1059,"title":{},"body":{"components/UserListComponent.html":{}}}],["this._http.get(eventservice.local+\"/api/db",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._http.post(this.stservice.host",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._sse.evs.close",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._sse.getupdates",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._sse.returnasobservable().subscribe(msg",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._sse.stopupdates",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.check",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.check.unsubscribe",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.checker",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.checker(this.val",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.controltype",{"_index":859,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.cookieservice.set",{"_index":529,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.countdown.start(duration",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.countdown.timeleft",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.createonline$().subscribe(isonline",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.currentfile",{"_index":727,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.datasource",{"_index":1049,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.datasource.filter",{"_index":1044,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(b64imageurl",{"_index":971,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["this.errormessage",{"_index":970,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["this.errsnackbar(\"offline",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.evs",{"_index":616,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.addeventlistener(\"db",{"_index":625,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.addeventlistener(\"dbx",{"_index":621,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.close",{"_index":642,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.onerror",{"_index":627,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.onopen",{"_index":618,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.url",{"_index":641,"title":{},"body":{"injectables/EventService.html":{}}}],["this.fb.group",{"_index":707,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.fileuploadservice.postimg(this.currentfile,this.stservice.id,this.stservice.host,this.type).subscribe",{"_index":729,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.form",{"_index":526,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.form.controls[this.question.key].valid",{"_index":562,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["this.form.getrawvalue",{"_index":536,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.getuser(id",{"_index":966,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["this.getusers",{"_index":1141,"title":{},"body":{"injectables/UserService.html":{}}}],["this.horizontalposition",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.http.get(this.stservice.host",{"_index":1135,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.stservice.host+'/api/form",{"_index":539,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.http.request(req",{"_index":794,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.imageurl",{"_index":723,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.isloadingresults",{"_index":1046,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.key",{"_index":851,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.label",{"_index":853,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.loc.getupdates(eventservice.local",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.loc.stopupdates",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.message",{"_index":736,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.old",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.oldloc",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"connecting...\",'blue",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"device",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"local",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"online",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"personal",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"portrait",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.options",{"_index":863,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.order",{"_index":857,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.pagetitle",{"_index":710,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.payload",{"_index":533,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.progress",{"_index":726,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.qcs.toformgroup(this.questions",{"_index":527,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.questions",{"_index":903,"title":{},"body":{"components/RFormComponent.html":{}}}],["this.readystate",{"_index":635,"title":{},"body":{"injectables/EventService.html":{}}}],["this.required",{"_index":855,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.restore",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":965,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["this.router.navigate",{"_index":1134,"title":{},"body":{"injectables/UserService.html":{}}}],["this.router.navigate([\"/form/pic",{"_index":546,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.router.navigate(['/form",{"_index":818,"title":{},"body":{"guards/FormGuard.html":{}}}],["this.router.navigate(['/users",{"_index":972,"title":{},"body":{"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{}}}],["this.router.navigate([this.url",{"_index":745,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.router.url",{"_index":709,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.selectedfiles",{"_index":714,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.selectedfiles.item(0",{"_index":728,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.snackbar.open(msg",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snackbar.openfromcomponent(countdownsnackbarcomponent",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snackbarref",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snackbarref.dismiss",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snackbarref.onaction().subscribe",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snval",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.source",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.source.subscribe(next",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.starttimer.next(seconds",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.starttimer.pipe(switchmap(seconds",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.busy.emit(false",{"_index":743,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.stservice.busy.emit(true",{"_index":544,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.stservice.busy.subscribe(foo",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.form",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.form).subscribe(data",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.form=null",{"_index":741,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.stservice.form=obj",{"_index":542,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.stservice.host",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.id",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"guards/FormGuard.html":{}}}],["this.stservice.id\",start+60,'/',this.hostname,true,\"none",{"_index":531,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.stservice.id=obj['_id'];//json.stringify(data",{"_index":541,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.stservice.pic",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.pic=null",{"_index":742,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.stservice.pic=this.currentfile",{"_index":739,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.sub",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.sub.unsubscribe",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.subj",{"_index":610,"title":{},"body":{"injectables/EventService.html":{}}}],["this.subj.asobservable",{"_index":608,"title":{},"body":{"injectables/EventService.html":{}}}],["this.test",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.timer",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.type",{"_index":861,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.type=\"bio",{"_index":713,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.type=\"pic",{"_index":711,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform",{"_index":706,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.get('avatar').updatevalueandvalidity",{"_index":719,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.patchvalue",{"_index":718,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.upservice.postimg(this.stservice.pic",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.url",{"_index":744,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.url='/form/bio",{"_index":740,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.user",{"_index":968,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["this.users",{"_index":1048,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.getuser(id).subscribe",{"_index":967,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["this.userservice.getusers().subscribe",{"_index":1047,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.val",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.value",{"_index":849,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.verticalposition",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["throwerror",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["throwerror(errormessage",{"_index":1153,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["timeleft",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["timeout",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["timer",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["timer(0",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["title",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["toformgroup",{"_index":866,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["toformgroup(questions",{"_index":868,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["top",{"_index":1096,"title":{},"body":{"components/UserListComponent.html":{}}}],["tr.example",{"_index":1061,"title":{},"body":{"components/UserListComponent.html":{}}}],["transition",{"_index":1024,"title":{},"body":{"components/UserListComponent.html":{}}}],["transition('expanded",{"_index":1034,"title":{},"body":{"components/UserListComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["trigger",{"_index":1025,"title":{},"body":{"components/UserListComponent.html":{}}}],["trigger('detailexpand",{"_index":1028,"title":{},"body":{"components/UserListComponent.html":{}}}],["triggered",{"_index":669,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["true",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionService.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["tslib",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["type:string",{"_index":704,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["typeof(eventsource",{"_index":614,"title":{},"body":{"injectables/EventService.html":{}}}],["undefined",{"_index":615,"title":{},"body":{"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"classes/QuestionBase.html":{},"components/UserDetailComponent.html":{}}}],["unit",{"_index":1221,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["unsubsribe",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["upload",{"_index":645,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"components/UserListComponent.html":{}}}],["upload'},{'name",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["upload.component",{"_index":751,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["upload.component.css",{"_index":648,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.html",{"_index":649,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts",{"_index":644,"title":{},"body":{"components/FileUploadComponent.html":{},"coverage.html":{}}}],["upload.component.ts:19",{"_index":681,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:21",{"_index":692,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:23",{"_index":688,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:25",{"_index":677,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:27",{"_index":686,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:29",{"_index":682,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:31",{"_index":693,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:33",{"_index":685,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:35",{"_index":659,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:44",{"_index":680,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:54",{"_index":665,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:68",{"_index":668,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:85",{"_index":675,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.module",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["upload.module.ts",{"_index":749,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["upload.service",{"_index":697,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload/file",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"coverage.html":{}}}],["upload/form.guard.ts",{"_index":797,"title":{},"body":{"guards/FormGuard.html":{},"coverage.html":{}}}],["upload/form.guard.ts:10",{"_index":803,"title":{},"body":{"guards/FormGuard.html":{}}}],["upload/form.guard.ts:20",{"_index":806,"title":{},"body":{"guards/FormGuard.html":{}}}],["upload/upload.service",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["upload/upload.service.ts",{"_index":770,"title":{},"body":{"injectables/FileUploadService.html":{},"coverage.html":{}}}],["upload/upload.service.ts:22",{"_index":776,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload/upload.service.ts:9",{"_index":773,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploaded",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{}}}],["uploadform",{"_index":655,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploading",{"_index":816,"title":{},"body":{"guards/FormGuard.html":{}}}],["upservice",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["url",{"_index":596,"title":{},"body":{"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["url:string",{"_index":702,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["urltree",{"_index":810,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["use",{"_index":495,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"index.html":{}}}],["useclass",{"_index":481,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/RFormModule.html":{},"overview.html":{}}}],["used",{"_index":602,"title":{},"body":{"injectables/EventService.html":{}}}],["user",{"_index":513,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.address",{"_index":976,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.cin",{"_index":975,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.firstname",{"_index":973,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.lastname",{"_index":974,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.service",{"_index":964,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["user.sexe",{"_index":978,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["userdetailcomponent",{"_index":360,"title":{"components/UserDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userdetailguard",{"_index":980,"title":{"guards/UserDetailGuard.html":{}},"body":{"guards/UserDetailGuard.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userlistcomponent",{"_index":361,"title":{"components/UserListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usermodule",{"_index":383,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":957,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{}}}],["users.find(p",{"_index":1143,"title":{},"body":{"injectables/UserService.html":{}}}],["users/:id",{"_index":1117,"title":{},"body":{"modules/UserModule.html":{}}}],["users/user.module",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["userservice",{"_index":947,"title":{"injectables/UserService.html":{}},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{}}}],["val",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["validate",{"_index":561,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["validators",{"_index":872,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators.required",{"_index":878,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["value",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["values{{payload",{"_index":550,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["var",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["variable",{"_index":611,"title":{},"body":{"injectables/EventService.html":{}}}],["version",{"_index":1200,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["verticalposition",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["via",{"_index":1224,"title":{},"body":{"index.html":{}}}],["view",{"_index":953,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["views",{"_index":505,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["visit",{"_index":695,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["void",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["waiting",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["want",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["weight",{"_index":1082,"title":{},"body":{"components/UserListComponent.html":{}}}],["welcome",{"_index":1155,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["welcome.component.html",{"_index":1156,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["welcomecomponent",{"_index":362,"title":{"components/WelcomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["whitesmoke",{"_index":1067,"title":{},"body":{"components/UserListComponent.html":{}}}],["width",{"_index":566,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{}}}],["woman",{"_index":890,"title":{},"body":{"injectables/QuestionService.html":{}}}],["worker",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["y",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["yarlomia",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["yx",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["z",{"_index":1101,"title":{},"body":{"components/UserListComponent.html":{}}}],["zone.js",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main Page at /\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pm-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n            \n                template\n                \n\n    {{pageTitle}}\n    \n      Home\n      Citizens\n      Form\n    \n\n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                check\n                            \n                            \n                                horizontalPosition\n                            \n                            \n                                old\n                            \n                            \n                                oldloc\n                            \n                            \n                                pageTitle\n                            \n                            \n                                snackBarRef\n                            \n                            \n                                snval\n                            \n                            \n                                    Private\n                                source\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                test\n                            \n                            \n                                val\n                            \n                            \n                                verticalPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checker\n                            \n                            \n                                createOnline$\n                            \n                            \n                                errsnackbar\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient, stService: StateParameterService, UpService: FileUploadService, snackBar: MatSnackBar, countdown: CountdownService, _sse: EventService, loc: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:112\n                            \n                        \n\n                \n                    \n                            Subscribe for the events emitted by the browser about the internet connectivity\nand subscribe for the observable returned by the interval function if the browser is connected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http Client\n\n                                                        \n                                                \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the StateParameterService Class\n\n                                                        \n                                                \n                                                \n                                                        UpService\n                                                  \n                                                        \n                                                                        FileUploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the FileUploadService Class\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Snackbar instance to open a new snackbar\n\n                                                        \n                                                \n                                                \n                                                        countdown\n                                                  \n                                                        \n                                                                        CountdownService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the CountdownService Class\n\n                                                        \n                                                \n                                                \n                                                        _sse\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the EventService Class for the online mode\n\n                                                        \n                                                \n                                                \n                                                        loc\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the EventService Class for the local mode\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checker\n                        \n                        \n                    \n                \n            \n            \n                \nchecker(val: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:299\n                \n            \n\n\n            \n                \n                    Check the status of the local server\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                    \n                                        Duration of the offline mode snackbar before retrying\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOnline$\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOnline$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:286\n                \n            \n\n\n            \n                \n                    Returns The state of the connectivity using the browser\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errsnackbar\n                        \n                        \n                    \n                \n            \n            \n                \nerrsnackbar(msg: string, duration: number, color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:260\n                \n            \n\n\n            \n                \n                    Opens a custom snackbar from the \"CountdownSnackbarComponent\" Component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message To show\n\n                                    \n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                    \n                                        Timeout value before the snackbar disappear automatically\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'danger-snackbar'\n                                    \n\n                                    \n                                        Background color of the snackbar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:213\n                \n            \n\n\n            \n                \n                    Unsubsribe from all subscriptions in the component and stops the communication with the event sources\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:153\n                \n            \n\n\n            \n                \n                    Subscribe for the events sent by the event source \"busy\", and subscribe for the events sent\nfrom the Server-sent events \"_sse\"\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nopenSnackBar(msg: string, color: string, val: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:246\n                \n            \n\n\n            \n                \n                    Opens a snackbar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message To show\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'success-snackbar'\n                                    \n\n                                    \n                                        Background color of the snackbar\n\n                                    \n                                \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                    \n                                        Timeout value before the snackbar disappear automatically\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:222\n                \n            \n\n\n            \n                \n                    restore the incomplete form to the local server if the connection to the remote one is lost\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:88\n                            \n                        \n\n                \n                    \n                        Creates a subscription field so we can attach it to the execution of the observable of the interval observable\nthat we have defined previously and we can unsubscribe from it when we want or at the end of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            horizontalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBarHorizontalPosition\n\n                        \n                    \n                    \n                        \n                            Default value : 'left'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:108\n                            \n                        \n\n                \n                    \n                        Define a default Horizontal Position of the snackbar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            old\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:96\n                            \n                        \n\n                \n                    \n                        Old string received if we are in online mode\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldloc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:100\n                            \n                        \n\n                \n                    \n                        Old string received if we are in local mode\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YARLOMIA'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:65\n                            \n                        \n\n                \n                    \n                        Title of The page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            snackBarRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatSnackBarRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:104\n                            \n                        \n\n                \n                    \n                        Reference to a snack bar in the component \"CountdownSnackbarComponent\"\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            snval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:74\n                            \n                        \n\n                \n                    \n                        Value of milliseconds of the difference between the end of the duration of waiting\n  and the connecting snackbar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : interval(this.val)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:78\n                            \n                        \n\n                \n                    \n                        Creates an Observable that emits sequential numbers every specified interval of time\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:83\n                            \n                        \n\n                \n                    \n                        Creates a subscription field so we can attach it to the execution of the observable of the server sent events\nand we can unsubscribe from it when we want or at the end of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:92\n                            \n                        \n\n                \n                    \n                        Test if we are in offline mode or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            val\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 12000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:69\n                            \n                        \n\n                \n                    \n                        Value of milliseconds to initiate the interval\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBarVerticalPosition\n\n                        \n                    \n                    \n                        \n                            Default value : 'bottom'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:112\n                            \n                        \n\n                \n                    \n                        Define a default Vertical Position of the snackbar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, Injectable } from '@angular/core';\nimport { Observable, Observer, fromEvent, merge, interval, Subscription, Subject,timer } from 'rxjs';\nimport { map, first,switchMap, take } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { EventService } from \"./shared/event.service\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { FileUploadService } from \"./file-upload/upload.service\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n  MatSnackBarRef,\n  MAT_SNACK_BAR_DATA\n} from '@angular/material/snack-bar';\n\n/**\n * Service for cross component communication. */\n@Injectable()\nexport class CountdownService {\n  startTimer = new Subject  ();\n  timer = this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ));\n  /**\n   * Start the Countdown\n   * @param time Number of milliseconds\n   */\n  start(time: number) {\n    const seconds = Math.floor(time / 1000);\n    this.startTimer.next(seconds);\n  }\n  /**\n   * Return the time left to print it out in the snackbar\n   */\n  timeLeft(): Observable  {\n    return this.timer;\n  }\n}\n/**\n * Main Page at /\n */\n@Component({\n  selector: 'pm-root',\n  template: `\n    \n    \n        {{pageTitle}}\n        \n          Home\n          Citizens\n          Form\n        \n    \n    \n    \n      \n    \n    `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * Title of The page\n   */\n  pageTitle = 'YARLOMIA';\n  /**\n   * Value of milliseconds to initiate the interval\n   */\n  val = 12000;\n  /**\n   * Value of milliseconds of the difference between the end of the duration of waiting\n   *  and the connecting snackbar\n   */\n  snval = 2000;\n  /**\n   * Creates an Observable that emits sequential numbers every specified interval of time\n   */\n  private source = interval(this.val);\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the server sent events\n   * and we can unsubscribe from it when we want or at the end of the component\n   */\n  private sub: Subscription;\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the interval observable\n   * that we have defined previously and we can unsubscribe from it when we want or at the end of the component\n   */\n  private check: Subscription;\n  /**\n   * Test if we are in offline mode or not\n   */\n  test: boolean;\n  /**\n   * Old string received if we are in online mode\n   */\n  old: string;\n  /**\n   * Old string received if we are in local mode\n   */\n  oldloc: string;\n  /**\n   * Reference to a snack bar in the component \"CountdownSnackbarComponent\"\n   */\n  snackBarRef: MatSnackBarRef  ;\n  /**\n   * Define a default Horizontal Position of the snackbar\n   */\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  /**\n   * Define a default Vertical Position of the snackbar\n   */\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  /**\n   * Subscribe for the events emitted by the browser about the internet connectivity\n   * and subscribe for the observable returned by the interval function if the browser is connected\n   * @param _http Http Client\n   * @param stService Instance of the StateParameterService Class\n   * @param UpService Instance of the FileUploadService Class\n   * @param snackBar Snackbar instance to open a new snackbar\n   * @param countdown Instance of the CountdownService Class\n   * @param _sse Instance of the EventService Class for the online mode\n   * @param loc Instance of the EventService Class for the local mode\n   */\n  constructor(private _http: HttpClient, private stService: StateParameterService, private UpService: FileUploadService,\n    private snackBar: MatSnackBar, private countdown: CountdownService, private _sse: EventService, private loc: EventService) {\n    this.createOnline$().subscribe(isOnline => {\n      if (isOnline) {\n        this._sse.getUpdates();\n        this.val = 12000;\n        this.test = false;\n\n        this.check = this.source.subscribe(next => {\n          if (this.test) {\n            this.checker();\n            console.log(\"access interval\");\n          }\n        });\n      } else {\n        //this.sub.unsubscribe();\n        this._sse.evs.close();\n        this.old = \"\";\n        this.oldloc = \"\";\n        if (this.check)\n          this.check.unsubscribe();\n        this.openSnackBar(\"Device Disconnected\", 'danger-snackbar');\n      }\n    });\n  }\n  /**\n   * Subscribe for the events sent by the event source \"busy\", and subscribe for the events sent\n   * from the Server-sent events \"_sse\"\n   */\n  ngOnInit(): void {\n    var busy: boolean;\n    this.stService.busy.subscribe(foo => {\n      if (!foo && this.old == 'yx') {\n        busy = false;\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        console.log(\"Access: busy\");\n        this.oldloc = \"\";\n      } else busy = true;\n    });\n    this.sub = this._sse.returnAsObservable().subscribe(msg => {\n      console.log(msg);\n      if (msg == 'yx' && !busy) {\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        this.old = msg;\n        this.oldloc = \"\";\n        console.log(\"Access: \" + msg);\n      }else if ((msg == \"rx\" || msg == 'nx') ) {\n        this.loc.getUpdates(EventService.local);\n        this.old = msg;\n        console.log(\"Access: \" + msg);\n      } else if (msg == 'y' && msg != this.oldloc) {\n        this.stService.host = EventService.local;\n        this.openSnackBar(\"Local Mode\", 'blue-snackbar');\n        this.restore();\n        this.test = false;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      } else if ((msg == 'r' || msg == 'n' || msg == 'e') && msg != this.oldloc) {\n        this.stService.host = \"\";\n        this.loc.stopUpdates();\n        this.test = true;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      }else if (msg == 'ex') {\n        if(!this.test)\n          this.loc.getUpdates(EventService.local);\n        setTimeout(() => {\n            this.loc.stopUpdates();\n            this._sse.getUpdates();\n          },\n          10000);\n          console.log(\"Access: \"+msg);\n        this.old = msg;\n      }\n      if (msg == 'yx')\n        this.old = msg;\n    });\n  }\n  /**\n   * Unsubsribe from all subscriptions in the component and stops the communication with the event sources\n   */\n  ngOnDestroy(): void {\n    this._sse.stopUpdates();\n    this.loc.stopUpdates();\n    this.sub.unsubscribe();\n    this.check.unsubscribe();\n  }\n  /**\n   * restore the incomplete form to the local server if the connection to the remote one is lost\n   */\n  restore(): void {\n    if (this.stService.form)\n      this._http.post(this.stService.host + '/api/form', this.stService.form).subscribe(data => {\n        setTimeout(() => {\n            this.openSnackBar(\"Personal Informations Saved\", 'blue-snackbar', 3000);\n          },\n          3000);\n      });\n    if (this.stService.pic) {\n      this.UpService.postImg(this.stService.pic, this.stService.id, this.stService.host, \"pic\").subscribe(\n        (event: any) => {\n          setTimeout(() => {\n              this.openSnackBar(\"Portrait Uploaded Successfully!\", 'blue-snackbar', 3000);\n            },\n            6000);\n        });\n    }\n  }\n  /**\n   * Opens a snackbar\n   * @param msg Message To show\n   * @param color Background color of the snackbar\n   * @param val Timeout value before the snackbar disappear automatically\n   */\n  openSnackBar(msg: string, color = 'success-snackbar', val = 10000) {\n    this.snackBar.open(msg, \"OK\", {\n      duration: val,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: [color]\n    });\n  }\n  /**\n   * Opens a custom snackbar from the \"CountdownSnackbarComponent\" Component\n   * @param msg Message To show\n   * @param duration Timeout value before the snackbar disappear automatically\n   * @param color Background color of the snackbar\n   */\n  errsnackbar(msg: string, duration: number = 10000, color: string = 'danger-snackbar') {\n    if (this.snackBarRef)\n      this.snackBarRef.dismiss();\n    this.snackBarRef = this.snackBar.openFromComponent(CountdownSnackbarComponent, {\n      duration,\n      data: msg,\n      panelClass: [color],\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n    this.countdown.start(duration);\n    this.snackBarRef.onAction().subscribe(() => {\n      this.snval *= 2;\n      this.val *= 2;\n      this.check.unsubscribe();\n      this.source = interval(this.val);\n      this.checker(this.val - this.snval);\n      this.check = this.source.subscribe(next => {\n        this.checker(this.val - this.snval);\n      });\n    });\n  }\n\n/**\n * Returns The state of the connectivity using the browser\n */\n  createOnline$() {\n    return merge  (\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer  ) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n  /**\n   * Check the status of the local server\n   * @param val Duration of the offline mode snackbar before retrying\n   */\n  checker(val = 10000): void {\n    this._http.get(EventService.local+\"/api/db\", {\n        observe: 'response'\n      })\n      .pipe(first())\n      .subscribe(resp => {\n        if (resp.status === 200) {\n          if (this.test) {\n            this.loc.getUpdates(EventService.local);\n            console.log(\"back to local mode\");\n          }\n        }\n      }, err => {\n        console.log(\"still offline mode\");\n        this.openSnackBar(\"Connecting...\",'blue-snackbar',1000);\n        setTimeout(() => {\n            this.errsnackbar(\"Offline Mode\", val);\n          },\n          2000);\n      });\n  }\n}\n/** Component opened inside a snackbar. */\n@Component({\n  selector: 'snackbar',\n  template: `\n  RETRY NOW\n  {{data}}  Retrying in {{ timeLeft$ | async }} seconds...\n  `\n})\nexport class CountdownSnackbarComponent {\n  /**\n   * Time left returned from the CountdownService\n   */\n  timeLeft$ = this.countdown.timeLeft();\n  /**\n   * Constructor of the CountdownSnackbarComponent\n   * @param countdown Instance from CountdownService Injectable\n   * @param data The message to show in the snackbar\n   * @param snackBarRef Reference to the snackbar\n   */\n  constructor(private countdown: CountdownService, @Inject(MAT_SNACK_BAR_DATA) public data: any,\n    public snackBarRef: MatSnackBarRef  ) {}\n}\n\n    \n\n\n    \n                \n                    ./app.component.css\n                \n                .nav-link {\n  font-size: large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{pageTitle}}          Home      Citizens      Form      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCountdownSnackbarComponent\n\nCountdownSnackbarComponent\n\nAppModule -->\n\nCountdownSnackbarComponent->AppModule\n\n\n\n\n\nWelcomeComponent\n\nWelcomeComponent\n\nAppModule -->\n\nWelcomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nAppModule -->\n\nFileUploadModule->AppModule\n\n\n\n\n\nRFormModule\n\nRFormModule\n\nAppModule -->\n\nRFormModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nCountdownService\n\nCountdownService\n\nAppModule -->\n\nCountdownService->AppModule\n\n\n\n\n\nStateParameterService\n\nStateParameterService\n\nAppModule -->\n\nStateParameterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CountdownSnackbarComponent\n                        \n                        \n                            WelcomeComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CountdownSnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CountdownService\n                        \n                        \n                            StateParameterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileUploadModule\n                        \n                        \n                            RFormModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent,CountdownSnackbarComponent,CountdownService } from './app.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { UserModule } from './users/user.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FileUploadModule } from './file-upload/file-upload.module';\nimport { RFormModule } from './r-form/r-form.module';\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { CookieService } from 'ngx-cookie-service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    CountdownSnackbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'home', component: WelcomeComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: '**', redirectTo: 'home', pathMatch: 'full' }\n    ]),\n    UserModule,\n    RFormModule,\n    FileUploadModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSnackBarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  entryComponents: [\n    CountdownSnackbarComponent,\n  ],\n  providers:[\n    CountdownService,\n    StateParameterService,CookieService\n  ],\n  exports:[\n    MatToolbarModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AreaQuestion.html":{"url":"classes/AreaQuestion.html","title":"class - AreaQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AreaQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-loc.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuestionBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlType\n                            \n                            \n                                controlType\n                            \n                            \n                                key\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                order\n                            \n                            \n                                required\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'area'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-loc.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:13\n\n                            \n                        \n\n                \n                    \n                        Type of the question (textbox,area,dropdown,checkbox...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:5\n\n                            \n                        \n\n                \n                    \n                        key of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:7\n\n                            \n                        \n\n                \n                    \n                        Label or the placeholder of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:17\n\n                            \n                        \n\n                \n                    \n                        Options to choose in the case of a dropdown for example \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:11\n\n                            \n                        \n\n                \n                    \n                        order of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:9\n\n                            \n                        \n\n                \n                    \n                        Is the question required or not ? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:15\n\n                            \n                        \n\n                \n                    \n                        Type of the question (text,number...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:3\n\n                            \n                        \n\n                \n                    \n                        Type of the question \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QuestionBase } from './question-base';\n\nexport class AreaQuestion extends QuestionBase {\n  controlType = 'area';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CountdownService.html":{"url":"injectables/CountdownService.html","title":"injectable - CountdownService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CountdownService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n            \n                Description\n            \n            \n                Service for cross component communication. \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                startTimer\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                start\n                            \n                            \n                                timeLeft\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:28\n                \n            \n\n\n            \n                \n                    Start the Countdown\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of milliseconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            timeLeft\n                        \n                        \n                    \n                \n            \n            \n                \ntimeLeft()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n                    Return the time left to print it out in the snackbar\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject  ()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, Injectable } from '@angular/core';\nimport { Observable, Observer, fromEvent, merge, interval, Subscription, Subject,timer } from 'rxjs';\nimport { map, first,switchMap, take } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { EventService } from \"./shared/event.service\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { FileUploadService } from \"./file-upload/upload.service\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n  MatSnackBarRef,\n  MAT_SNACK_BAR_DATA\n} from '@angular/material/snack-bar';\n\n/**\n * Service for cross component communication. */\n@Injectable()\nexport class CountdownService {\n  startTimer = new Subject  ();\n  timer = this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ));\n  /**\n   * Start the Countdown\n   * @param time Number of milliseconds\n   */\n  start(time: number) {\n    const seconds = Math.floor(time / 1000);\n    this.startTimer.next(seconds);\n  }\n  /**\n   * Return the time left to print it out in the snackbar\n   */\n  timeLeft(): Observable  {\n    return this.timer;\n  }\n}\n/**\n * Main Page at /\n */\n@Component({\n  selector: 'pm-root',\n  template: `\n    \n    \n        {{pageTitle}}\n        \n          Home\n          Citizens\n          Form\n        \n    \n    \n    \n      \n    \n    `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * Title of The page\n   */\n  pageTitle = 'YARLOMIA';\n  /**\n   * Value of milliseconds to initiate the interval\n   */\n  val = 12000;\n  /**\n   * Value of milliseconds of the difference between the end of the duration of waiting\n   *  and the connecting snackbar\n   */\n  snval = 2000;\n  /**\n   * Creates an Observable that emits sequential numbers every specified interval of time\n   */\n  private source = interval(this.val);\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the server sent events\n   * and we can unsubscribe from it when we want or at the end of the component\n   */\n  private sub: Subscription;\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the interval observable\n   * that we have defined previously and we can unsubscribe from it when we want or at the end of the component\n   */\n  private check: Subscription;\n  /**\n   * Test if we are in offline mode or not\n   */\n  test: boolean;\n  /**\n   * Old string received if we are in online mode\n   */\n  old: string;\n  /**\n   * Old string received if we are in local mode\n   */\n  oldloc: string;\n  /**\n   * Reference to a snack bar in the component \"CountdownSnackbarComponent\"\n   */\n  snackBarRef: MatSnackBarRef  ;\n  /**\n   * Define a default Horizontal Position of the snackbar\n   */\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  /**\n   * Define a default Vertical Position of the snackbar\n   */\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  /**\n   * Subscribe for the events emitted by the browser about the internet connectivity\n   * and subscribe for the observable returned by the interval function if the browser is connected\n   * @param _http Http Client\n   * @param stService Instance of the StateParameterService Class\n   * @param UpService Instance of the FileUploadService Class\n   * @param snackBar Snackbar instance to open a new snackbar\n   * @param countdown Instance of the CountdownService Class\n   * @param _sse Instance of the EventService Class for the online mode\n   * @param loc Instance of the EventService Class for the local mode\n   */\n  constructor(private _http: HttpClient, private stService: StateParameterService, private UpService: FileUploadService,\n    private snackBar: MatSnackBar, private countdown: CountdownService, private _sse: EventService, private loc: EventService) {\n    this.createOnline$().subscribe(isOnline => {\n      if (isOnline) {\n        this._sse.getUpdates();\n        this.val = 12000;\n        this.test = false;\n\n        this.check = this.source.subscribe(next => {\n          if (this.test) {\n            this.checker();\n            console.log(\"access interval\");\n          }\n        });\n      } else {\n        //this.sub.unsubscribe();\n        this._sse.evs.close();\n        this.old = \"\";\n        this.oldloc = \"\";\n        if (this.check)\n          this.check.unsubscribe();\n        this.openSnackBar(\"Device Disconnected\", 'danger-snackbar');\n      }\n    });\n  }\n  /**\n   * Subscribe for the events sent by the event source \"busy\", and subscribe for the events sent\n   * from the Server-sent events \"_sse\"\n   */\n  ngOnInit(): void {\n    var busy: boolean;\n    this.stService.busy.subscribe(foo => {\n      if (!foo && this.old == 'yx') {\n        busy = false;\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        console.log(\"Access: busy\");\n        this.oldloc = \"\";\n      } else busy = true;\n    });\n    this.sub = this._sse.returnAsObservable().subscribe(msg => {\n      console.log(msg);\n      if (msg == 'yx' && !busy) {\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        this.old = msg;\n        this.oldloc = \"\";\n        console.log(\"Access: \" + msg);\n      }else if ((msg == \"rx\" || msg == 'nx') ) {\n        this.loc.getUpdates(EventService.local);\n        this.old = msg;\n        console.log(\"Access: \" + msg);\n      } else if (msg == 'y' && msg != this.oldloc) {\n        this.stService.host = EventService.local;\n        this.openSnackBar(\"Local Mode\", 'blue-snackbar');\n        this.restore();\n        this.test = false;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      } else if ((msg == 'r' || msg == 'n' || msg == 'e') && msg != this.oldloc) {\n        this.stService.host = \"\";\n        this.loc.stopUpdates();\n        this.test = true;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      }else if (msg == 'ex') {\n        if(!this.test)\n          this.loc.getUpdates(EventService.local);\n        setTimeout(() => {\n            this.loc.stopUpdates();\n            this._sse.getUpdates();\n          },\n          10000);\n          console.log(\"Access: \"+msg);\n        this.old = msg;\n      }\n      if (msg == 'yx')\n        this.old = msg;\n    });\n  }\n  /**\n   * Unsubsribe from all subscriptions in the component and stops the communication with the event sources\n   */\n  ngOnDestroy(): void {\n    this._sse.stopUpdates();\n    this.loc.stopUpdates();\n    this.sub.unsubscribe();\n    this.check.unsubscribe();\n  }\n  /**\n   * restore the incomplete form to the local server if the connection to the remote one is lost\n   */\n  restore(): void {\n    if (this.stService.form)\n      this._http.post(this.stService.host + '/api/form', this.stService.form).subscribe(data => {\n        setTimeout(() => {\n            this.openSnackBar(\"Personal Informations Saved\", 'blue-snackbar', 3000);\n          },\n          3000);\n      });\n    if (this.stService.pic) {\n      this.UpService.postImg(this.stService.pic, this.stService.id, this.stService.host, \"pic\").subscribe(\n        (event: any) => {\n          setTimeout(() => {\n              this.openSnackBar(\"Portrait Uploaded Successfully!\", 'blue-snackbar', 3000);\n            },\n            6000);\n        });\n    }\n  }\n  /**\n   * Opens a snackbar\n   * @param msg Message To show\n   * @param color Background color of the snackbar\n   * @param val Timeout value before the snackbar disappear automatically\n   */\n  openSnackBar(msg: string, color = 'success-snackbar', val = 10000) {\n    this.snackBar.open(msg, \"OK\", {\n      duration: val,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: [color]\n    });\n  }\n  /**\n   * Opens a custom snackbar from the \"CountdownSnackbarComponent\" Component\n   * @param msg Message To show\n   * @param duration Timeout value before the snackbar disappear automatically\n   * @param color Background color of the snackbar\n   */\n  errsnackbar(msg: string, duration: number = 10000, color: string = 'danger-snackbar') {\n    if (this.snackBarRef)\n      this.snackBarRef.dismiss();\n    this.snackBarRef = this.snackBar.openFromComponent(CountdownSnackbarComponent, {\n      duration,\n      data: msg,\n      panelClass: [color],\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n    this.countdown.start(duration);\n    this.snackBarRef.onAction().subscribe(() => {\n      this.snval *= 2;\n      this.val *= 2;\n      this.check.unsubscribe();\n      this.source = interval(this.val);\n      this.checker(this.val - this.snval);\n      this.check = this.source.subscribe(next => {\n        this.checker(this.val - this.snval);\n      });\n    });\n  }\n\n/**\n * Returns The state of the connectivity using the browser\n */\n  createOnline$() {\n    return merge  (\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer  ) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n  /**\n   * Check the status of the local server\n   * @param val Duration of the offline mode snackbar before retrying\n   */\n  checker(val = 10000): void {\n    this._http.get(EventService.local+\"/api/db\", {\n        observe: 'response'\n      })\n      .pipe(first())\n      .subscribe(resp => {\n        if (resp.status === 200) {\n          if (this.test) {\n            this.loc.getUpdates(EventService.local);\n            console.log(\"back to local mode\");\n          }\n        }\n      }, err => {\n        console.log(\"still offline mode\");\n        this.openSnackBar(\"Connecting...\",'blue-snackbar',1000);\n        setTimeout(() => {\n            this.errsnackbar(\"Offline Mode\", val);\n          },\n          2000);\n      });\n  }\n}\n/** Component opened inside a snackbar. */\n@Component({\n  selector: 'snackbar',\n  template: `\n  RETRY NOW\n  {{data}}  Retrying in {{ timeLeft$ | async }} seconds...\n  `\n})\nexport class CountdownSnackbarComponent {\n  /**\n   * Time left returned from the CountdownService\n   */\n  timeLeft$ = this.countdown.timeLeft();\n  /**\n   * Constructor of the CountdownSnackbarComponent\n   * @param countdown Instance from CountdownService Injectable\n   * @param data The message to show in the snackbar\n   * @param snackBarRef Reference to the snackbar\n   */\n  constructor(private countdown: CountdownService, @Inject(MAT_SNACK_BAR_DATA) public data: any,\n    public snackBarRef: MatSnackBarRef  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountdownSnackbarComponent.html":{"url":"components/CountdownSnackbarComponent.html","title":"component - CountdownSnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CountdownSnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Component opened inside a snackbar. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snackbar\n            \n\n\n\n            \n                template\n                RETRY NOW\n{{data}}  Retrying in {{ timeLeft$ | async }} seconds...\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                snackBarRef\n                            \n                            \n                                timeLeft$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(countdown: CountdownService, data: any, snackBarRef: MatSnackBarRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:333\n                            \n                        \n\n                \n                    \n                            Constructor of the CountdownSnackbarComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        countdown\n                                                  \n                                                        \n                                                                        CountdownService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance from CountdownService Injectable\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message to show in the snackbar\n\n                                                        \n                                                \n                                                \n                                                        snackBarRef\n                                                  \n                                                        \n                                                                        MatSnackBarRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:340\n                            \n                        \n\n                \n                    \n                        The message to show in the snackbar\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBarRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatSnackBarRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:341\n                            \n                        \n\n                \n                    \n                        Reference to the snackbar\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeLeft$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.countdown.timeLeft()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:333\n                            \n                        \n\n                \n                    \n                        Time left returned from the CountdownService\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, Injectable } from '@angular/core';\nimport { Observable, Observer, fromEvent, merge, interval, Subscription, Subject,timer } from 'rxjs';\nimport { map, first,switchMap, take } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { EventService } from \"./shared/event.service\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { FileUploadService } from \"./file-upload/upload.service\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n  MatSnackBarRef,\n  MAT_SNACK_BAR_DATA\n} from '@angular/material/snack-bar';\n\n/**\n * Service for cross component communication. */\n@Injectable()\nexport class CountdownService {\n  startTimer = new Subject  ();\n  timer = this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ));\n  /**\n   * Start the Countdown\n   * @param time Number of milliseconds\n   */\n  start(time: number) {\n    const seconds = Math.floor(time / 1000);\n    this.startTimer.next(seconds);\n  }\n  /**\n   * Return the time left to print it out in the snackbar\n   */\n  timeLeft(): Observable  {\n    return this.timer;\n  }\n}\n/**\n * Main Page at /\n */\n@Component({\n  selector: 'pm-root',\n  template: `\n    \n    \n        {{pageTitle}}\n        \n          Home\n          Citizens\n          Form\n        \n    \n    \n    \n      \n    \n    `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * Title of The page\n   */\n  pageTitle = 'YARLOMIA';\n  /**\n   * Value of milliseconds to initiate the interval\n   */\n  val = 12000;\n  /**\n   * Value of milliseconds of the difference between the end of the duration of waiting\n   *  and the connecting snackbar\n   */\n  snval = 2000;\n  /**\n   * Creates an Observable that emits sequential numbers every specified interval of time\n   */\n  private source = interval(this.val);\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the server sent events\n   * and we can unsubscribe from it when we want or at the end of the component\n   */\n  private sub: Subscription;\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the interval observable\n   * that we have defined previously and we can unsubscribe from it when we want or at the end of the component\n   */\n  private check: Subscription;\n  /**\n   * Test if we are in offline mode or not\n   */\n  test: boolean;\n  /**\n   * Old string received if we are in online mode\n   */\n  old: string;\n  /**\n   * Old string received if we are in local mode\n   */\n  oldloc: string;\n  /**\n   * Reference to a snack bar in the component \"CountdownSnackbarComponent\"\n   */\n  snackBarRef: MatSnackBarRef  ;\n  /**\n   * Define a default Horizontal Position of the snackbar\n   */\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  /**\n   * Define a default Vertical Position of the snackbar\n   */\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  /**\n   * Subscribe for the events emitted by the browser about the internet connectivity\n   * and subscribe for the observable returned by the interval function if the browser is connected\n   * @param _http Http Client\n   * @param stService Instance of the StateParameterService Class\n   * @param UpService Instance of the FileUploadService Class\n   * @param snackBar Snackbar instance to open a new snackbar\n   * @param countdown Instance of the CountdownService Class\n   * @param _sse Instance of the EventService Class for the online mode\n   * @param loc Instance of the EventService Class for the local mode\n   */\n  constructor(private _http: HttpClient, private stService: StateParameterService, private UpService: FileUploadService,\n    private snackBar: MatSnackBar, private countdown: CountdownService, private _sse: EventService, private loc: EventService) {\n    this.createOnline$().subscribe(isOnline => {\n      if (isOnline) {\n        this._sse.getUpdates();\n        this.val = 12000;\n        this.test = false;\n\n        this.check = this.source.subscribe(next => {\n          if (this.test) {\n            this.checker();\n            console.log(\"access interval\");\n          }\n        });\n      } else {\n        //this.sub.unsubscribe();\n        this._sse.evs.close();\n        this.old = \"\";\n        this.oldloc = \"\";\n        if (this.check)\n          this.check.unsubscribe();\n        this.openSnackBar(\"Device Disconnected\", 'danger-snackbar');\n      }\n    });\n  }\n  /**\n   * Subscribe for the events sent by the event source \"busy\", and subscribe for the events sent\n   * from the Server-sent events \"_sse\"\n   */\n  ngOnInit(): void {\n    var busy: boolean;\n    this.stService.busy.subscribe(foo => {\n      if (!foo && this.old == 'yx') {\n        busy = false;\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        console.log(\"Access: busy\");\n        this.oldloc = \"\";\n      } else busy = true;\n    });\n    this.sub = this._sse.returnAsObservable().subscribe(msg => {\n      console.log(msg);\n      if (msg == 'yx' && !busy) {\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        this.old = msg;\n        this.oldloc = \"\";\n        console.log(\"Access: \" + msg);\n      }else if ((msg == \"rx\" || msg == 'nx') ) {\n        this.loc.getUpdates(EventService.local);\n        this.old = msg;\n        console.log(\"Access: \" + msg);\n      } else if (msg == 'y' && msg != this.oldloc) {\n        this.stService.host = EventService.local;\n        this.openSnackBar(\"Local Mode\", 'blue-snackbar');\n        this.restore();\n        this.test = false;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      } else if ((msg == 'r' || msg == 'n' || msg == 'e') && msg != this.oldloc) {\n        this.stService.host = \"\";\n        this.loc.stopUpdates();\n        this.test = true;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      }else if (msg == 'ex') {\n        if(!this.test)\n          this.loc.getUpdates(EventService.local);\n        setTimeout(() => {\n            this.loc.stopUpdates();\n            this._sse.getUpdates();\n          },\n          10000);\n          console.log(\"Access: \"+msg);\n        this.old = msg;\n      }\n      if (msg == 'yx')\n        this.old = msg;\n    });\n  }\n  /**\n   * Unsubsribe from all subscriptions in the component and stops the communication with the event sources\n   */\n  ngOnDestroy(): void {\n    this._sse.stopUpdates();\n    this.loc.stopUpdates();\n    this.sub.unsubscribe();\n    this.check.unsubscribe();\n  }\n  /**\n   * restore the incomplete form to the local server if the connection to the remote one is lost\n   */\n  restore(): void {\n    if (this.stService.form)\n      this._http.post(this.stService.host + '/api/form', this.stService.form).subscribe(data => {\n        setTimeout(() => {\n            this.openSnackBar(\"Personal Informations Saved\", 'blue-snackbar', 3000);\n          },\n          3000);\n      });\n    if (this.stService.pic) {\n      this.UpService.postImg(this.stService.pic, this.stService.id, this.stService.host, \"pic\").subscribe(\n        (event: any) => {\n          setTimeout(() => {\n              this.openSnackBar(\"Portrait Uploaded Successfully!\", 'blue-snackbar', 3000);\n            },\n            6000);\n        });\n    }\n  }\n  /**\n   * Opens a snackbar\n   * @param msg Message To show\n   * @param color Background color of the snackbar\n   * @param val Timeout value before the snackbar disappear automatically\n   */\n  openSnackBar(msg: string, color = 'success-snackbar', val = 10000) {\n    this.snackBar.open(msg, \"OK\", {\n      duration: val,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: [color]\n    });\n  }\n  /**\n   * Opens a custom snackbar from the \"CountdownSnackbarComponent\" Component\n   * @param msg Message To show\n   * @param duration Timeout value before the snackbar disappear automatically\n   * @param color Background color of the snackbar\n   */\n  errsnackbar(msg: string, duration: number = 10000, color: string = 'danger-snackbar') {\n    if (this.snackBarRef)\n      this.snackBarRef.dismiss();\n    this.snackBarRef = this.snackBar.openFromComponent(CountdownSnackbarComponent, {\n      duration,\n      data: msg,\n      panelClass: [color],\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n    this.countdown.start(duration);\n    this.snackBarRef.onAction().subscribe(() => {\n      this.snval *= 2;\n      this.val *= 2;\n      this.check.unsubscribe();\n      this.source = interval(this.val);\n      this.checker(this.val - this.snval);\n      this.check = this.source.subscribe(next => {\n        this.checker(this.val - this.snval);\n      });\n    });\n  }\n\n/**\n * Returns The state of the connectivity using the browser\n */\n  createOnline$() {\n    return merge  (\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer  ) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n  /**\n   * Check the status of the local server\n   * @param val Duration of the offline mode snackbar before retrying\n   */\n  checker(val = 10000): void {\n    this._http.get(EventService.local+\"/api/db\", {\n        observe: 'response'\n      })\n      .pipe(first())\n      .subscribe(resp => {\n        if (resp.status === 200) {\n          if (this.test) {\n            this.loc.getUpdates(EventService.local);\n            console.log(\"back to local mode\");\n          }\n        }\n      }, err => {\n        console.log(\"still offline mode\");\n        this.openSnackBar(\"Connecting...\",'blue-snackbar',1000);\n        setTimeout(() => {\n            this.errsnackbar(\"Offline Mode\", val);\n          },\n          2000);\n      });\n  }\n}\n/** Component opened inside a snackbar. */\n@Component({\n  selector: 'snackbar',\n  template: `\n  RETRY NOW\n  {{data}}  Retrying in {{ timeLeft$ | async }} seconds...\n  `\n})\nexport class CountdownSnackbarComponent {\n  /**\n   * Time left returned from the CountdownService\n   */\n  timeLeft$ = this.countdown.timeLeft();\n  /**\n   * Constructor of the CountdownSnackbarComponent\n   * @param countdown Instance from CountdownService Injectable\n   * @param data The message to show in the snackbar\n   * @param snackBarRef Reference to the snackbar\n   */\n  constructor(private countdown: CountdownService, @Inject(MAT_SNACK_BAR_DATA) public data: any,\n    public snackBarRef: MatSnackBarRef  ) {}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'RETRY NOW{{data}}  Retrying in {{ timeLeft$ | async }} seconds...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountdownSnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DropdownQuestion.html":{"url":"classes/DropdownQuestion.html","title":"class - DropdownQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropdownQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-dropdown.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuestionBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlType\n                            \n                            \n                                controlType\n                            \n                            \n                                key\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                order\n                            \n                            \n                                required\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dropdown'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-dropdown.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:13\n\n                            \n                        \n\n                \n                    \n                        Type of the question (textbox,area,dropdown,checkbox...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:5\n\n                            \n                        \n\n                \n                    \n                        key of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:7\n\n                            \n                        \n\n                \n                    \n                        Label or the placeholder of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:17\n\n                            \n                        \n\n                \n                    \n                        Options to choose in the case of a dropdown for example \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:11\n\n                            \n                        \n\n                \n                    \n                        order of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:9\n\n                            \n                        \n\n                \n                    \n                        Is the question required or not ? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:15\n\n                            \n                        \n\n                \n                    \n                        Type of the question (text,number...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:3\n\n                            \n                        \n\n                \n                    \n                        Type of the question \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QuestionBase } from './question-base';\n\nexport class DropdownQuestion extends QuestionBase {\n  controlType = 'dropdown';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicFormComponent.html":{"url":"components/DynamicFormComponent.html","title":"component - DynamicFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/r-form/dynamic-form.component.ts\n\n\n    \n        Description\n    \n    \n        DynamicFormComponent to handle the formgroup \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                QuestionControlService\n                            { provide: LocationStrategy, useClass: PathLocationStrategy }\n                \n            \n\n\n            \n                selector\n                app-dynamic-form\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                questions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stService: StateParameterService, qcs: QuestionControlService, router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/r-form/dynamic-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructs the DynamicForm Component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use the fields in the bag to store the citizen id and emit an event using the event emitter\n\n                                                        \n                                                \n                                                \n                                                        qcs\n                                                  \n                                                        \n                                                                        QuestionControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the QuestionControlService Object\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use Router service to navigate among views\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTTP Client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        questions\n                    \n                \n                \n                    \n                        Type :         QuestionBase[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form.component.ts:22\n                            \n                        \n                \n                    \n                        Input Questions  \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/r-form/dynamic-form.component.ts:36\n                \n            \n\n\n            \n                \n                    Initiate the component by getting the formgroup from the questionbase objects \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/r-form/dynamic-form.component.ts:43\n                \n            \n\n\n            \n                \n                    Submit the form when the user hits the submit button \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form.component.ts:24\n                            \n                        \n\n                \n                    \n                        FormGroup instance \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit,Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { QuestionBase } from './question-base';\nimport { QuestionControlService } from './question-control.service';\nimport { LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\nimport { CookieService } from 'ngx-cookie-service';\nimport { EventService } from '../shared/event.service';\n\n/** DynamicFormComponent to handle the formgroup */\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  providers: [QuestionControlService, {provide: LocationStrategy, useClass: PathLocationStrategy}]\n})\nexport class DynamicFormComponent implements OnInit {\n  /** Input Questions  */\n  @Input() questions: QuestionBase[] = [];\n  /** FormGroup instance */\n  form: FormGroup;\n  destroy$: Subject = new Subject();\n  /**\n   * Constructs the DynamicForm Component\n   * @param qcs Instance of the QuestionControlService Object\n   * @param router use Router service to navigate among views\n   * @param stService use the fields in the bag to store the citizen id and emit an event using the event emitter\n   * @param http HTTP Client\n   */\n  constructor(/*private cookieService: CookieService,*/private stService :StateParameterService,\n    private qcs: QuestionControlService,private router : Router,private http: HttpClient) { }\n  /** Initiate the component by getting the formgroup from the questionbase objects */\n  ngOnInit() {\n    this.form = this.qcs.toFormGroup(this.questions);\n    //const start = Date.now();\n    //this.cookieService.set( 'cin', \"this.stService.id\",start+60,'/',this.hostname,true,\"None\");\n    //console.log(this.cookieService.getAll());\n  }\n  /** Submit the form when the user hits the submit button */\n  onSubmit() {\n    //this.payLoad = JSON.stringify(this.form.getRawValue());\n    const obj= this.form.getRawValue();\n    obj[\"_id\"]= \"dossier_\"+obj['cin'];\n    this.http.post(this.stService.host+'/api/form', obj).pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.stService.id=obj['_id'];//JSON.stringify(data);\n      this.stService.form=obj;\n      //if(this.stService.host==EventService.local)\n      this.stService.busy.emit(true);\n      //const start = Date.now();\n      //this.cookieService.set( 'data', this.stService.id ,start+60000,'/',this.hostname,true);\n      //console.log(this.cookieService.getAll());\n      setTimeout(() =>\n      {\n        this.router.navigate([\"/form/pic\"]);\n      },\n      1000);\n    });\n  }\n}\n\n    \n\n    \n        ﻿﻿\n  \n    Personal Informations\n  \n  \n    \n\n  \n\n    \n      \n    \n\n    \n      Save\n    \n  \n\n  \n    Saved the following values{{payLoad}}\n  -->\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿﻿      Personal Informations                                  Save            Saved the following values{{payLoad}}  -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DynamicFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicFormQuestionComponent.html":{"url":"components/DynamicFormQuestionComponent.html","title":"component - DynamicFormQuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicFormQuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/r-form/dynamic-form-question.component.ts\n\n\n    \n        Description\n    \n    \n        Component of each question in the form \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                styleUrls\n                ./input-form.css\n            \n\n\n\n            \n                templateUrl\n                ./dynamic-form-question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form-question.component.ts:15\n                            \n                        \n                \n                    \n                        Input FormGroup \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :         QuestionBase\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form-question.component.ts:13\n                            \n                        \n                \n                    \n                        Input Question  \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/r-form/dynamic-form-question.component.ts:17\n                                \n                            \n                    \n                        \n                                Validate the Question \n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { QuestionBase } from './question-base';\n/** Component of each question in the form */\n@Component({\n  selector: 'app-question',\n  styleUrls: ['./input-form.css'],\n  templateUrl: './dynamic-form-question.component.html'\n})\nexport class DynamicFormQuestionComponent {\n  /** Input Question  */\n  @Input() question: QuestionBase;\n  /** Input FormGroup */\n  @Input() form: FormGroup;\n  /** Validate the Question */\n  get isValid() { return this.form.controls[this.question.key].valid; }\n}\n\n    \n\n    \n        ﻿      \n\n        \n          \n          {{question.label}}\n          \n\n          \n          \n          \n            {{opt.value}}\n          \n          \n            {{question.label}} is required\n          \n          \n        \n\n      \n\n    \n\n    \n                \n                    ./input-form.css\n                \n                .example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\ntd {\n  padding-right: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿                                  {{question.label}}                                                    {{opt.value}}                                {{question.label}} is required                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DynamicFormQuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/event.service.ts\n        \n\n            \n                Description\n            \n            \n                Event Service helps us to get the Server Sent Events from our remote or local server\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                evs\n                            \n                            \n                                    Static\n                                local\n                            \n                            \n                                    Static\n                                server\n                            \n                            \n                                    Private\n                                subj\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUpdates\n                            \n                            \n                                returnAsObservable\n                            \n                            \n                                stopUpdates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/event.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUpdates\n                        \n                        \n                    \n                \n            \n            \n                \ngetUpdates(host)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/event.service.ts:37\n                \n            \n\n\n            \n                \n                    Start Listening from the event source in our local server, emitting events to the component and handling errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        EventService.server\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            returnAsObservable\n                        \n                        \n                    \n                \n            \n            \n                \nreturnAsObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/event.service.ts:31\n                \n            \n\n\n            \n                \n                    An observable so we can subscribe for the events emitted from this class.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopUpdates\n                        \n                        \n                    \n                \n            \n            \n                \nstopUpdates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/event.service.ts:81\n                \n            \n\n\n            \n                \n                    This function Stops the communication between the app and the event source\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            evs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:19\n                            \n                        \n\n                \n                    \n                        Event Source Object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            local\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:3003\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:14\n                            \n                        \n\n                \n                    \n                        URL of the local server \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://yarlomia.ga\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the remote server \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.type)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:27\n                            \n                        \n\n                \n                    \n                        BehaviorSubject Used to emit data to other components\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:23\n                            \n                        \n\n                \n                    \n                        Type used to know which data type emitted to the component.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {BehaviorSubject} from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n/**\n * Event Service helps us to get the Server Sent Events from our remote or local server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  /** URL of the remote server */\n  static server=\"https://yarlomia.ga\";\n  /** URL of the local server */\n  static local=\"http://localhost:3003\";\n  constructor() {}\n  /**\n   * Event Source Object\n   */\n  evs: EventSource;\n  /**\n   * Type used to know which data type emitted to the component.\n   */\n  type=\"\";\n  /**\n   * BehaviorSubject Used to emit data to other components\n   */\n  private subj = new BehaviorSubject(this.type);\n  /**\n   * An observable so we can subscribe for the events emitted from this class.\n   */\n  returnAsObservable() {\n      return this.subj.asObservable();\n  }\n  /**\n   * Start Listening from the event source in our local server, emitting events to the component and handling errors.\n   */\n  getUpdates(host=EventService.server) {\n      let subject = this.subj;\n      /**\n       * Local Variable used to know which state where we are:\n       *\n       * Initial State =-1\n       */\n      let k=-1;\n      if (typeof(EventSource) !== 'undefined') {\n          this.evs = new EventSource(host+'/api/state');\n          this.evs.onopen = function(e) {\n              console.log(\"Opening connection with \" + host);\n          }\n          this.evs.addEventListener(\"dbx\", function(e) {\n            if (k==-1 || k==0)\n              subject.next(e[\"data\"]+'x');\n            k=0;\n          });\n          this.evs.addEventListener(\"db\", function(e) {\n            if (k==-1 || k==0)\n              subject.next(e[\"data\"]);\n            k=0;\n          });\n          this.evs.onerror = function(e) {\n            if (k==-1){\n              if (host==EventService.server)\n                subject.next('ex');\n              else subject.next('e');\n            }\n            if(k==2){\n              if(host==EventService.server)\n                subject.next(\"rx\");\n              else subject.next(\"r\");\n            }\n            if (this.readyState == 0) {\n              console.log(\"Reconnecting… \"+host);\n              k++;\n            }\n          }\n      }\n  }\n  /**\n   * This function Stops the communication between the app and the event source\n   */\n  stopUpdates() {\n    if(this.evs.url==EventService.server+\"/api/state\"){\n      return null;\n    }\n    console.log(\"Closing connection with \" + this.evs.url);\n      this.evs.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/file-upload/file-upload.component.ts\n\n\n    \n        Description\n    \n    \n        Upload Page at /form/pic and /form/bio\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-upload\n            \n\n            \n                styleUrls\n                ./file-upload.component.css\n            \n\n\n\n            \n                templateUrl\n                ./file-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentFile\n                            \n                            \n                                    Public\n                                fb\n                            \n                            \n                                imageURL\n                            \n                            \n                                message\n                            \n                            \n                                pageTitle\n                            \n                            \n                                progress\n                            \n                            \n                                selectedFiles\n                            \n                            \n                                type\n                            \n                            \n                                uploadForm\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                selectFile\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, stService: StateParameterService, fb: FormBuilder, fileUploadService: FileUploadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/file-upload.component.ts:35\n                            \n                        \n\n                \n                    \n                            Construct the component and Build the reactive form\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use Router service to navigate among views\n\n                                                        \n                                                \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use the fields in the bag or to backup the image uploaded\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Build a Reactive Form\n\n                                                        \n                                                \n                                                \n                                                        fileUploadService\n                                                  \n                                                        \n                                                                        FileUploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Inject the File Upload Service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:54\n                \n            \n\n\n            \n                \n                    Initiate the component with the title according to the router url\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectFile\n                        \n                        \n                    \n                \n            \n            \n                \nselectFile(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:68\n                \n            \n\n\n            \n                \n                    This function is triggered when the user chooses an image to upload so the preview will be shown in the page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event target containing the image file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \nupload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:85\n                \n            \n\n\n            \n                \n                    This function is triggered when the user hits the button to upload the photo\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:25\n                            \n                        \n\n                \n                    \n                        Current File selected \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:44\n                            \n                        \n\n                \n                    \n                        Build a Reactive Form\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:19\n                            \n                        \n\n                \n                    \n                        URL of the image \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:29\n                            \n                        \n\n                \n                    \n                        Message shown to the user when the upload has been succefully done or not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:33\n                            \n                        \n\n                \n                    \n                        Page Title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:27\n                            \n                        \n\n                \n                    \n                        Progress of the upload \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:23\n                            \n                        \n\n                \n                    \n                        Selected files from the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:35\n                            \n                        \n\n                \n                    \n                        Type of the image sent (Portrait or fingerprint) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:21\n                            \n                        \n\n                \n                    \n                        FormGroup of the upload form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:31\n                            \n                        \n\n                \n                    \n                        the next URL to visit \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit , EventEmitter,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { FileUploadService } from \"./upload.service\";\nimport { Router, NavigationStart } from '@angular/router';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { StateParameterService } from '../shared/st-parameter.service';\nimport { EventService } from '../shared/event.service';\n\n/**\n * Upload Page at /form/pic and /form/bio\n */\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n  /** URL of the image */\n  imageURL: string;\n  /** FormGroup of the upload form */\n  uploadForm: FormGroup;\n  /** Selected files from the user */\n  selectedFiles: FileList;\n  /** Current File selected */\n  currentFile: File;\n  /** Progress of the upload */\n  progress = 0;\n  /** Message shown to the user when the upload has been succefully done or not */\n  message:string;\n  /** the next URL to visit */\n  url:string;\n  /** Page Title */\n  pageTitle:string;\n  /** Type of the image sent (Portrait or fingerprint) */\n  type:string;\n  /**\n   * Construct the component and Build the reactive form\n   * @param router use Router service to navigate among views\n   * @param stService use the fields in the bag or to backup the image uploaded\n   * @param fb Build a Reactive Form\n   * @param fileUploadService Inject the File Upload Service\n   */\n  constructor(private router : Router,private stService :StateParameterService,\n    public fb: FormBuilder,private fileUploadService: FileUploadService) {\n    // Reactive Form\n    this.uploadForm = this.fb.group({\n      avatar: [null],\n      name: ['']\n    });\n  }\n  /**\n   * Initiate the component with the title according to the router url\n   */\n  ngOnInit(): void {\n    if (this.router.url == '/form/pic') {\n      this.pageTitle = \"Upload Portrait\";\n      this.type=\"pic\";\n    }\n    else if (this.router.url == '/form/bio') {\n      this.pageTitle = \"Upload Biometry Info\";\n      this.type=\"bio\";\n    }\n  }\n  /**\n   * This function is triggered when the user chooses an image to upload so the preview will be shown in the page\n   * @param event Event target containing the image file\n   */\n  selectFile(event): void {\n    this.selectedFiles = event.target.files;\n    const file = (event.target as HTMLInputElement).files[0];\n      this.uploadForm.patchValue({\n        avatar: file\n      });\n      this.uploadForm.get('avatar').updateValueAndValidity()\n      // File Preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imageURL = reader.result as string;\n      }\n      reader.readAsDataURL(file)\n  }\n  /**\n   * This function is triggered when the user hits the button to upload the photo\n   */\n  upload(): void {\n    this.progress = 0;\n    this.currentFile = this.selectedFiles.item(0);\n\n    this.fileUploadService.postImg(this.currentFile,this.stService.id,this.stService.host,this.type).subscribe(\n      (event: any) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.message = event.body.message;\n          //console.log(event.body.message);\n          this.message = 'Uploaded Successfully!';\n          if (this.router.url === '/form/pic'){\n            this.stService.pic=this.currentFile;\n            this.url='/form/bio';\n          }\n          else if (this.router.url === '/form/bio'){\n            this.stService.form=null;\n            this.stService.pic=null;\n            if(this.stService.host==EventService.local)\n              this.stService.busy.emit(false);\n            this.url='/';\n          }\n          setTimeout(() =>\n          {\n              this.router.navigate([this.url]);\n          },\n          1000);\n\n          this.selectedFiles = undefined;\n        }\n      },\n      err => {\n        this.progress = 0;\n        this.message = 'Could not upload the file!';\n        //this.currentFile = undefined;\n      });\n\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{pageTitle}}\n  \n  \n    \n\n        \n          \n            \n              {{ progress }}%\n            \n          \n\n          \n            Select Image\n            \n            image\n            -->\n          \n\n          \n            Upload\n          \n         \n            Done\n          -->\n          {{ message }}\n          \n            Preview\n              \n              \n                \n              \n          \n\n        \n    \n  \n\n\n    \n\n    \n                \n                    ./file-upload.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{pageTitle}}                                                    {{ progress }}%                                            Select Image                        image            -->                                Upload                               Done          -->          {{ message }}                      Preview                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileUploadModule.html":{"url":"modules/FileUploadModule.html","title":"module - FileUploadModule","body":"\n                   \n\n\n\n\n    Modules\n    FileUploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileUploadModule\n\n\n\ncluster_FileUploadModule_declarations\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nFileUploadModule -->\n\nFileUploadComponent->FileUploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/file-upload/file-upload.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FileUploadComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FileUploadComponent } from './file-upload.component';\nimport { RouterModule } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { FormGuard } from \"./form.guard\";\n@NgModule({\n  declarations: [\n    FileUploadComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressBarModule,\n    ReactiveFormsModule,\n    MaterialFileInputModule,\n    RouterModule.forChild([\n      { path: 'form/pic', canActivate: [FormGuard], component: FileUploadComponent },\n      { path: 'form/bio', canActivate: [FormGuard], component: FileUploadComponent }\n    ]),\n  ],\n  exports:[\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ]\n})\nexport class FileUploadModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileUploadService.html":{"url":"injectables/FileUploadService.html","title":"injectable - FileUploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileUploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file-upload/upload.service.ts\n        \n\n            \n                Description\n            \n            \n                FileUploadService Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postImg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/upload.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructs the Injectable\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTTP Client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postImg\n                        \n                        \n                    \n                \n            \n            \n                \npostImg(file: File, id: string, hostname: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/upload.service.ts:22\n                \n            \n\n\n            \n                \n                    Build the post request of the image to the server\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        File Object to upload\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Citizen ID to append to the formdata of the request\n\n                                    \n                                \n                                \n                                    hostname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the server (remote or local)\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Refers to the type of the image (Portrait or fingerprint)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent,HttpHeaders } from  '@angular/common/http';\nimport { Observable, } from 'rxjs';\n\n/** FileUploadService Injectable */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n  /**\n   * Constructs the Injectable\n   * @param http HTTP Client\n   */\n  constructor(private http: HttpClient) { }\n  /**\n   * Build the post request of the image to the server\n   * @param file File Object to upload\n   * @param id Citizen ID to append to the formdata of the request\n   * @param hostname URL of the server (remote or local)\n   * @param type Refers to the type of the image (Portrait or fingerprint)\n   */\n  postImg(file: File,id:string,hostname:string,type:string): Observable> {\n    const formData = new FormData();\n    formData.append('_id',id);\n    formData.append('file', file,file.name);\n\n    const req = new HttpRequest('POST', hostname+'/api/upload/'+type, formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n    return this.http.request(req);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FormGuard.html":{"url":"guards/FormGuard.html","title":"guard - FormGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    FormGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/file-upload/form.guard.ts\n            \n\n                \n                Description\n                \n                \n                    we use this Form Guard to prohibit access to the next steps of the form if we don't have retrieved the citizen id \n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, stService: StateParameterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/form.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Construct the FormGuard Injectable\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use Router service to navigate among views\n\n                                                        \n                                                \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use the fields in the bag to retreive the citizen id if it exists\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/form.guard.ts:20\n                \n            \n\n\n            \n                \n                    Grant the access by returning true if the citizen id exists in the bag\n\n\n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\n\n/** we use this Form Guard to prohibit access to the next steps of the form if we don't have retrieved the citizen id */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGuard implements CanActivate {\n  /**\n   * Construct the FormGuard Injectable\n   * @param router use Router service to navigate among views\n   * @param stService use the fields in the bag to retreive the citizen id if it exists\n   */\n  constructor(private router: Router,private stService:StateParameterService) { }\n  /**\n   * Grant the access by returning true if the citizen id exists in the bag\n   */\n  canActivate(): Observable | Promise | boolean | UrlTree {\n\n    if (!this.stService.id) {\n      alert('Please complete the form before uploading the photos!');\n      this.router.navigate(['/form']);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/user.ts\n        \n\n            \n                Description\n            \n            \n                information about citizen\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        address\n                                \n                                \n                                        bio\n                                \n                                \n                                        cin\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        pic\n                                \n                                \n                                        sexe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    citizen id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    citizen adress \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    citizen biometric image \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cin\n                                    \n                                \n                                \n                                    \n                                        cin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    citizen cin \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    citizen first Name \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    citizen last Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pic\n                                    \n                                \n                                \n                                    \n                                        pic:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    citizen image \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sexe\n                                    \n                                \n                                \n                                    \n                                        sexe:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    citizen gendre \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n      /** citizen id */\n\n  _id: string;\n      /** citizen first Name */\n\n  firstName: string;\n      /** citizen last Name*/\n\n  lastName: string;\n      /** citizen cin */\n\n  cin: string;\n      /** citizen adress */\n\n  address: string;\n      /** citizen gendre */\n\n  sexe:string;\n      /** citizen image */\n\n  pic: string;\n      /** citizen biometric image */\n\n  bio:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionBase.html":{"url":"classes/QuestionBase.html","title":"class - QuestionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlType\n                            \n                            \n                                key\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                order\n                            \n                            \n                                required\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/r-form/question-base.ts:17\n                            \n                        \n\n                \n                    \n                            Construct each question from the options below\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options of the question\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the question (textbox,area,dropdown,checkbox...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:5\n                            \n                        \n\n                \n                    \n                        key of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:7\n                            \n                        \n\n                \n                    \n                        Label or the placeholder of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:17\n                            \n                        \n\n                \n                    \n                        Options to choose in the case of a dropdown for example \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:11\n                            \n                        \n\n                \n                    \n                        order of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:9\n                            \n                        \n\n                \n                    \n                        Is the question required or not ? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:15\n                            \n                        \n\n                \n                    \n                        Type of the question (text,number...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:3\n                            \n                        \n\n                \n                    \n                        Type of the question \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class QuestionBase {\n  /** Type of the question */\n  value: T;\n  /** key of the question in the form */\n  key: string;\n  /** Label or the placeholder of the question in the form */\n  label: string;\n  /** Is the question required or not ? */\n  required: boolean;\n  /** order of the question in the form */\n  order: number;\n  /** Type of the question (textbox,area,dropdown,checkbox...) */\n  controlType: string;\n  /** Type of the question (text,number...) */\n  type: string;\n  /** Options to choose in the case of a dropdown for example */\n  options: {key: string, value: string}[];\n  /**\n   * Construct each question from the options below\n   * @param options Options of the question\n   */\n  constructor(options: {\n      value?: T;\n      key?: string;\n      label?: string;\n      required?: boolean;\n      order?: number;\n      controlType?: string;\n      type?: string;\n      options?: {key: string, value: string}[];\n    } = {}) {\n    this.value = options.value;\n    this.key = options.key || '';\n    this.label = options.label || '';\n    this.required = !!options.required;\n    this.order = options.order === undefined ? 1 : options.order;\n    this.controlType = options.controlType || '';\n    this.type = options.type || '';\n    this.options = options.options || [];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionControlService.html":{"url":"injectables/QuestionControlService.html","title":"injectable - QuestionControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-control.service.ts\n        \n\n            \n                Description\n            \n            \n                QuestionControlService Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/r-form/question-control.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ntoFormGroup(questions: QuestionBase[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/r-form/question-control.service.ts:13\n                \n            \n\n\n            \n                \n                    Constructs a FormGroup from the questionBase objects\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    questions\n                                    \n                                                QuestionBase[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Questions from QuestionBase objects in an array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { QuestionBase } from './question-base';\n/** QuestionControlService Injectable */\n@Injectable()\nexport class QuestionControlService {\n  constructor() { }\n  /**\n   * Constructs a FormGroup from the questionBase objects\n   * @param questions Questions from QuestionBase objects in an array\n   */\n  toFormGroup(questions: QuestionBase[] ) {\n    const group: any = {};\n\n    questions.forEach(question => {\n      group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\n                                              : new FormControl(question.value || '');\n    });\n    return new FormGroup(group);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question.service.ts\n        \n\n            \n                Description\n            \n            \n                QuestionService Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuestions\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuestions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/r-form/question.service.ts:13\n                \n            \n\n\n            \n                \n                    Returns the observable of questions to show in the form \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AreaQuestion } from './question-loc';\nimport { QuestionBase } from './question-base';\nimport { TextboxQuestion } from './question-textbox';\nimport { DropdownQuestion } from './question-dropdown';\n\nimport { of } from 'rxjs';\n/** QuestionService Injectable */\n@Injectable()\nexport class QuestionService {\n  /** Returns the observable of questions to show in the form */\n  getQuestions() {\n\n    const questions: QuestionBase[] = [\n\n      new DropdownQuestion({\n        key: 'sexe',\n        label: 'Gender',\n        required: true,\n        options: [\n          {key: 'M',  value: 'Man'},\n          {key: 'F',  value: 'Woman'}\n        ],\n        order: 5\n      }),\n      new AreaQuestion({\n        key: 'address',\n        label: 'Address',\n        required: true,\n        order: 4\n      }),\n      new TextboxQuestion({\n        key: 'cin',\n        label: 'CIN',\n        required: true,\n        order: 3\n      }),\n      new TextboxQuestion({\n        key: 'firstName',\n        label: 'First name',\n        required: true,\n        order: 1\n      }),\n\n      new TextboxQuestion({\n        key: 'lastName',\n        label: 'Last Name',\n        type: 'text',\n        required: true,\n        order: 2\n      })\n    ];\n\n    return of(questions.sort((a, b) => a.order - b.order));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RFormComponent.html":{"url":"components/RFormComponent.html","title":"component - RFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/r-form/r-form.component.ts\n\n\n    \n        Description\n    \n    \n        Form Component at /form \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                QuestionService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questions$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuestionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/r-form/r-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructs the form component with the questions retreived from the injectable\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the QuestionService Injectable\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/r-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        Observable of QuestionBase objects in an array \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { QuestionService } from './question.service';\nimport { QuestionBase } from './question-base';\nimport { Observable } from 'rxjs';\n/** Form Component at /form */\n@Component({\n  selector: 'app-root',\n  template: `\n    \n      \n    \n  `,\n  providers:  [QuestionService]\n})\nexport class RFormComponent {\n  /** Observable of QuestionBase objects in an array */\n  questions$: Observable[]>;\n  /**\n   * Constructs the form component with the questions retreived from the injectable\n   * @param service Instance of the QuestionService Injectable\n   */\n  constructor(service: QuestionService) {\n    this.questions$ = service.getQuestions();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RFormModule.html":{"url":"modules/RFormModule.html","title":"module - RFormModule","body":"\n                   \n\n\n\n\n    Modules\n    RFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RFormModule\n\n\n\ncluster_RFormModule_declarations\n\n\n\ncluster_RFormModule_DynamicFormComponent_providers\n\n\n\ncluster_RFormModule_RFormComponent_providers\n\n\n\ncluster_RFormModule_bootstrap\n\n\n\n\nDynamicFormComponent\n\nDynamicFormComponent\n\n\n\nRFormModule\n\nRFormModule\n\nRFormModule -->\n\nDynamicFormComponent->RFormModule\n\n\n\n\n\nDynamicFormQuestionComponent\n\nDynamicFormQuestionComponent\n\nRFormModule -->\n\nDynamicFormQuestionComponent->RFormModule\n\n\n\n\n\nRFormComponent\n\nRFormComponent\n\nRFormModule -->\n\nRFormComponent->RFormModule\n\n\n\n\n\nRFormComponent \n\nRFormComponent \n\nRFormComponent  -->\n\nRFormModule->RFormComponent \n\n\n\n\n\nQuestionControlService\n\nQuestionControlService\n\nDynamicFormComponent -->\n\nQuestionControlService->DynamicFormComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nDynamicFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->DynamicFormComponent\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nRFormComponent -->\n\nQuestionService->RFormComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/r-form/r-form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicFormComponent\n                        \n                        \n                            DynamicFormQuestionComponent\n                        \n                        \n                            RFormComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            RFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { RFormComponent } from './r-form.component';\nimport { DynamicFormComponent } from './dynamic-form.component';\nimport { DynamicFormQuestionComponent } from './dynamic-form-question.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [ BrowserModule, ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    RouterModule.forChild([\n      { path: 'form', component: RFormComponent },\n    ]), ],\n  declarations: [ RFormComponent, DynamicFormComponent, DynamicFormQuestionComponent ],\n  bootstrap: [ RFormComponent ],\n  exports:[\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule\n  ]\n})\nexport class RFormModule {\n  constructor() {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateParameterService.html":{"url":"injectables/StateParameterService.html","title":"injectable - StateParameterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateParameterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/st-parameter.service.ts\n        \n\n            \n                Description\n            \n            \n                Bag to store the fields that we need in our application\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                busy\n                            \n                            \n                                form\n                            \n                            \n                                host\n                            \n                            \n                                id\n                            \n                            \n                                pic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/st-parameter.service.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:18\n                            \n                        \n\n                \n                    \n                        The event emitter that we use to lock the switching from the 2 modes (online and local) inside a form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSON\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:14\n                            \n                        \n\n                \n                    \n                        The form filled in by the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:12\n                            \n                        \n\n                \n                    \n                        It can takes URL of the remote server or the local one \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:10\n                            \n                        \n\n                \n                    \n                        Id of the citizen \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:16\n                            \n                        \n\n                \n                    \n                        Portrait picture of the citizen \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\n/**\n * Bag to store the fields that we need in our application\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateParameterService {\n  /** Id of the citizen */\n  id: string;\n  /** It can takes URL of the remote server or the local one */\n  host:string;\n  /** The form filled in by the user */\n  form:JSON;\n  /** Portrait picture of the citizen */\n  pic:File;\n  /** The event emitter that we use to lock the switching from the 2 modes (online and local) inside a form */\n  busy: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextboxQuestion.html":{"url":"classes/TextboxQuestion.html","title":"class - TextboxQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextboxQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-textbox.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuestionBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlType\n                            \n                            \n                                controlType\n                            \n                            \n                                key\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                order\n                            \n                            \n                                required\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'textbox'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-textbox.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:13\n\n                            \n                        \n\n                \n                    \n                        Type of the question (textbox,area,dropdown,checkbox...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:5\n\n                            \n                        \n\n                \n                    \n                        key of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:7\n\n                            \n                        \n\n                \n                    \n                        Label or the placeholder of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:17\n\n                            \n                        \n\n                \n                    \n                        Options to choose in the case of a dropdown for example \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:11\n\n                            \n                        \n\n                \n                    \n                        order of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:9\n\n                            \n                        \n\n                \n                    \n                        Is the question required or not ? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:15\n\n                            \n                        \n\n                \n                    \n                        Type of the question (text,number...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:3\n\n                            \n                        \n\n                \n                    \n                        Type of the question \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QuestionBase } from './question-base';\n\nexport class TextboxQuestion extends QuestionBase {\n  controlType = 'textbox';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDetailComponent.html":{"url":"components/UserDetailComponent.html","title":"component - UserDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/user-detail.component.ts\n\n\n    \n        Description\n    \n    \n        detail of the citizen\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./user-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                pageTitle\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBack\n                            \n                            \n                                sanatizeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, userService: UserService, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-detail.component.ts:23\n                            \n                        \n\n                \n                    \n                            Construct the component  \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.component.ts:41\n                \n            \n\n\n            \n                \n                    This function is triggered when the user hits the button to view the detail  \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.component.ts:32\n                \n            \n\n\n            \n                \n                    Initiate the component with the id of user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBack\n                        \n                        \n                    \n                \n            \n            \n                \nonBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.component.ts:54\n                \n            \n\n\n            \n                \n                    This function is triggered to return to the table of users\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sanatizeUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsanatizeUrl(b64ImageUrl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.component.ts:49\n                \n            \n\n\n            \n                \n                    This function is triggered to show the image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    b64ImageUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-detail.component.ts:20\n                            \n                        \n\n                \n                    \n                        Message shown to the user when the get has been succefully done or not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Citizen Detail'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-detail.component.ts:17\n                            \n                        \n\n                \n                    \n                        page title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-detail.component.ts:23\n                            \n                        \n\n                \n                    \n                        citizen detail \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { IUser } from './user';\nimport { UserService } from './user.service';\n/**\n * detail of the citizen\n */\n@Component({\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n    /** page title */\n\n  pageTitle = 'Citizen Detail';\n  /** Message shown to the user when the get has been succefully done or not */\n\n  errorMessage = '';\n    /** citizen detail */\n\n  user: IUser | undefined;\n/** Construct the component  */\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private userService: UserService,\n              private domSanitizer: DomSanitizer) {\n  }\n  /**  Initiate the component with the id of user*/\n\n  ngOnInit(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = param;\n      this.getUser(id);\n    }\n  }\n  /**This function is triggered when the user hits the button to view the detail  */\n\n  getUser(id: string): void {\n    this.userService.getUser(id).subscribe({\n      next: user => this.user = user,\n      error: err => this.errorMessage = err\n    });\n  }\n    /** This function is triggered to show the image*/\n\n  sanatizeUrl(b64ImageUrl): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(b64ImageUrl);\n  }\n    /** This function is triggered to return to the table of users*/\n\n  onBack(): void {\n    this.router.navigate(['/users']);\n  }\n}\n    \n\n    \n        \n  \n    {{pageTitle + ': ' + user.firstName + ' ' + user.lastName}}\n  \n\n  \n    \n      \n        \n          First Name:\n          {{user.firstName}}\n        \n        \n          Last Name:\n          {{ user.lastName}}\n                \n          CIN:\n          {{user.cin}}\n        \n        \n           Address:\n          {{ user.address}}\n        \n        \n          Genre:\n          {{ user.sexe}}\n        \n      \n      \n\n      \n\n      \n        \n      \n\n\n      \n        \n      \n    \n\n\n      \n    \n  \n\n  \n    \n       Back\n    \n  \n\n    \n\n    \n                \n                    ./user-detail.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{pageTitle + \\': \\' + user.firstName + \\' \\' + user.lastName}}                                First Name:          {{user.firstName}}                          Last Name:          {{ user.lastName}}                          CIN:          {{user.cin}}                           Address:          {{ user.address}}                          Genre:          {{ user.sexe}}                                                                                               Back      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserDetailGuard.html":{"url":"guards/UserDetailGuard.html","title":"guard - UserDetailGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserDetailGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/users/user-detail.guard.ts\n            \n\n                \n                Description\n                \n                \n                    we use this Guard to prohibit access to the citizen id\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-detail.guard.ts:11\n                            \n                        \n\n                \n                    \n                            use Router service to navigate among views  \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * we use this Guard to prohibit access to the citizen id\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDetailGuard implements CanActivate {\n /** use Router service to navigate among views  */\n  constructor(private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    const id = next.url[1].path;\n    /** Grant the access by returning true if the citizen id exists in the bag*/\n\n    if (!id) {\n      alert('Invalid citizen Id');\n      this.router.navigate(['/users']);\n      return false;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/user-list.component.ts\n\n\n    \n        Description\n    \n    \n        the liste of all citizens\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./user-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                errorMessage\n                            \n                            \n                                expandedElement\n                            \n                            \n                                imageMargin\n                            \n                            \n                                imageWidth\n                            \n                            \n                                isLoadingResults\n                            \n                            \n                                pageTitle\n                            \n                            \n                                showImage\n                            \n                            \n                                Users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sanatizeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domSanitizer: DomSanitizer, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-list.component.ts:46\n                            \n                        \n\n                \n                    \n                            Construct the component  \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-list.component.ts:51\n                \n            \n\n\n            \n                \n                    This function is triggered when the user filitered the citizens\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-list.component.ts:65\n                \n            \n\n\n            \n                \n                    Initiate the component \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sanatizeUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsanatizeUrl(b64ImageUrl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-list.component.ts:57\n                \n            \n\n\n            \n                \n                    This function is triggered to show the image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    b64ImageUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['pic', 'firstName', 'lastName', 'cin','address','sexe']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:45\n                            \n                        \n\n                \n                    \n                        use to show the columns of the table of citizens \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:33\n                            \n                        \n\n                \n                    \n                        message to show when we have error \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:36\n                            \n                        \n\n                \n                    \n                        detail about citizen \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageMargin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:28\n                            \n                        \n\n                \n                    \n                        size of the image \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoadingResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:39\n                            \n                        \n\n                \n                    \n                        use to upload  the spinner\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Citizens List'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:25\n                            \n                        \n\n                \n                    \n                        page title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:42\n                            \n                        \n\n                \n                    \n                        the citizens \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { IUser } from './user';\nimport { UserService } from './user.service';\n    /** the liste of all citizens*/\n\n@Component({\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded  collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n\n    ]),\n  ],\n})\nexport class UserListComponent implements OnInit {\n    /** page title */\n\n  pageTitle ='Citizens List';\n    /** size of the image */\n\n  imageWidth = 50;\n  imageMargin = 2;\n  showImage = true;\n    /** message to show when we have error */\n\n  errorMessage = '';\n    /** detail about citizen */\n\n  expandedElement: IUser | null;\n    /** use to upload  the spinner*/\n\n  isLoadingResults = false;\n  /** the citizens */\n\n  Users: IUser[] = [];\n    /** use to show the columns of the table of citizens */\n\n  displayedColumns: string[] = ['pic', 'firstName', 'lastName', 'cin','address','sexe'];\n  dataSource;\n/** Construct the component  */\n  constructor(private domSanitizer: DomSanitizer,private userService: UserService) { }\n  /** This function is triggered when the user filitered the citizens*/\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  /**  This function is triggered to show the image*/\n\n  sanatizeUrl(b64ImageUrl): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(b64ImageUrl);\n  }\n\n /**\n   * Initiate the component \n   */\n\n  ngOnInit(): void {\n    this.isLoadingResults = true;\n\n    this.userService.getUsers().subscribe({\n      next: Users => {\n        this.Users = Users;\n        this.dataSource = new MatTableDataSource(this.Users);\n        this.isLoadingResults = false;\n\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n}\n    \n\n    \n        \n  \n    {{pageTitle}}\n  \n  \n    \n    \n      \n        Filter\n        \n      \n      \n\n        \n           IMAGE \n\n          \n               \n        \n\n        \n           FIRST NAME \n          \n            \n            {{element.firstName}} \n        \n\n        \n           LAST NAME \n                         {{element.lastName}} \n        \n\n        \n           CIN \n           {{element.cin}} \n        \n\n\n        \n           ADDRESS \n           {{element.address}} \n        \n\n        \n           GENDRE \n           {{element.sexe}} \n        \n\n        \n          \n            \n              \n                \n                  \n                  \n                \n                \n                   {{element.firstName}}  {{element.lastName}}  \n                \n              \n              \n          \n        \n\n        \n        \n        \n        \n\n        \n          No data matching the filter \"{{input.value}}\"\n        \n      \n\n\n    \n    \n      \n   \n      \n      \n        no citizents to show    \n    \n    \n     Error: {{ errorMessage }}\n     \n  \n\n\n    \n\n    \n                \n                    ./user-list.component.css\n                \n                thead {\n  color: #337AB7;\n}\ntable {\n  width: 100%;\n}\n\ntr.example-detail-row {\n  height: 0;\n}\n\ntr.example-element-row:not(.example-expanded-row):hover {\n  background: whitesmoke;\n}\n\ntr.example-element-row:not(.example-expanded-row):active {\n  background: #efefef;\n}\n\n.example-element-row td {\n  border-bottom-width: 0;\n}\n\n.example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n\n.example-element-diagram {\n  width: 340px;\n  border: 1.5px solid black;\n  padding: 10px;\n  padding-bottom: 5px;\n  font-weight: lighter;\n  margin: 14px 0;\n  margin-left: 10%;\n  height: 210px;\n}\n.example-element-symbol {\n  font-weight: bold;\n  width: 80;\n  line-height: normal;\n}\n\n.example-loading-shade {\n  position: absolute;\n  top: 0;\n  left: 0;\n  margin: 30% 30%;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.example-element-name {\n  font-weight: bold;\n  line-height: normal;\n  padding-bottom: 5px;\nfont: large;\npadding-left: 75px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{pageTitle}}                          Filter                                       IMAGE                                                     FIRST NAME                                   {{element.firstName}}                            LAST NAME                          {{element.lastName}}                            CIN            {{element.cin}}                            ADDRESS            {{element.address}}                            GENDRE            {{element.sexe}}                                                                                                                                                            {{element.firstName}}  {{element.lastName}}                                                                                                                  No data matching the filter \"{{input.value}}\"                                                   no citizents to show                 Error: {{ errorMessage }}       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nUserDetailComponent\n\nUserDetailComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserDetailComponent->UserModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nUserModule -->\n\nUserListComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserDetailComponent\n                        \n                        \n                            UserListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { UserListComponent } from './user-list.component';\nimport { UserDetailComponent } from './user-detail.component';\nimport { RouterModule } from '@angular/router';\nimport { UserDetailGuard } from './user-detail.guard';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    UserListComponent,\n    UserDetailComponent,\n  ],\n  imports: [\n    MatFormFieldModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    CommonModule,\n    MatProgressSpinnerModule,\n    RouterModule.forChild([\n      { path: 'users', component: UserListComponent },\n      {\n        path: 'users/:id',\n        canActivate: [UserDetailGuard],\n        component: UserDetailComponent\n      }\n    ])\n    ],\n  exports:[\n    MatTableModule,\n    MatFormFieldModule\n  ]\n})\nexport class UserModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/user.service.ts\n        \n\n            \n                Description\n            \n            \n                getUsersService Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, http: HttpClient, stService: StateParameterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            Construct the component  \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user.service.ts:30\n                \n            \n\n\n            \n                \n                    This function is triggered to get citizen by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user.service.ts:19\n                \n            \n\n\n            \n                \n                    This function is triggered to get all citizens \n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user.service.ts:38\n                \n            \n\n\n            \n                \n                    This function is triggered when the functions getUser and getUsers have a error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\n\nimport { IUser } from './user';\nimport { Router } from '@angular/router';\n/**getUsersService Injectable */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n/**Construct the component  */\n  constructor(private router : Router,private http: HttpClient,private stService:StateParameterService) { }\n  /** This function is triggered to get all citizens */\n\n  getUsers(): Observable {\n    if(!this.stService.host)\n    this.router.navigate([\"/\"]);\n    return this.http.get(this.stService.host + \"/api/getAll\")\n      .pipe(\n        tap(data => console.log('')),\n        catchError(this.handleError)\n      );\n  }\n  /** This function is triggered to get citizen by id*/\n\n  getUser(id: string): Observable {\n    return this.getUsers()\n      .pipe(\n        map((users: IUser[]) => users.find(p => p._id === id))\n      );\n  }\n  /** This function is triggered when the functions getUser and getUsers have a error*/\n\n  private handleError(err: HttpErrorResponse): Observable {\n   \n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n   \n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomeComponent.html":{"url":"components/WelcomeComponent.html","title":"component - WelcomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WelcomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/welcome.component.ts\n\n\n    \n        Description\n    \n    \n        Welcome Component at /home\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./welcome.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Home'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/welcome.component.ts:10\n                            \n                        \n\n                \n                    \n                        Page title \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * Welcome Component at /home\n */\n@Component({\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n  /** Page title */\n  public pageTitle = 'Home';\n}\n\n    \n\n    \n        ﻿\n  \n    {{pageTitle}}\n  \n  \n    \n      \n        \n      \n\n      \n        Source Code\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿      {{pageTitle}}                                          Source Code            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            CountdownSnackbarComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            injectable\n            CountdownService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/file-upload/file-upload.component.ts\n            \n            component\n            FileUploadComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/file-upload/form.guard.ts\n            \n            guard\n            FormGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/file-upload/upload.service.ts\n            \n            injectable\n            FileUploadService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/home/welcome.component.ts\n            \n            component\n            WelcomeComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/r-form/dynamic-form-question.component.ts\n            \n            component\n            DynamicFormQuestionComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/r-form/dynamic-form.component.ts\n            \n            component\n            DynamicFormComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/r-form/question-base.ts\n            \n            class\n            QuestionBase\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/r-form/question-control.service.ts\n            \n            injectable\n            QuestionControlService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/r-form/question-dropdown.ts\n            \n            class\n            DropdownQuestion\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/r-form/question-loc.ts\n            \n            class\n            AreaQuestion\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/r-form/question-textbox.ts\n            \n            class\n            TextboxQuestion\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/r-form/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/r-form/r-form.component.ts\n            \n            component\n            RFormComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/event.service.ts\n            \n            injectable\n            EventService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/shared/st-parameter.service.ts\n            \n            injectable\n            StateParameterService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/users/user-detail.component.ts\n            \n            component\n            UserDetailComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/users/user-detail.guard.ts\n            \n            guard\n            UserDetailGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/users/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/users/user.ts\n            \n            interface\n            IUser\n            \n                100 %\n                (9/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.14\n        \n            @angular/cdk : ^10.2.4\n        \n            @angular/common : ^10.0.14\n        \n            @angular/compiler : ^10.0.14\n        \n            @angular/core : ^10.0.14\n        \n            @angular/forms : ^10.0.14\n        \n            @angular/material : ^10.2.4\n        \n            @angular/platform-browser : ^10.0.14\n        \n            @angular/platform-browser-dynamic : ^10.0.14\n        \n            @angular/router : ^10.0.14\n        \n            @angular/service-worker : ^10.0.14\n        \n            bootstrap : ^4.5.0\n        \n            font-awesome : ^4.7.0\n        \n            ngx-cookie-service : ^10.1.1\n        \n            ngx-material-file-input : ^2.1.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.2\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nYARLOMIA\nThis project was generated with Angular CLI version 10.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileUploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FileUploadModule\n\n\n\ncluster_FileUploadModule_declarations\n\n\n\ncluster_RFormModule\n\n\n\ncluster_RFormModule_declarations\n\n\n\ncluster_RFormModule_DynamicFormComponent_providers\n\n\n\ncluster_RFormModule_RFormComponent_providers\n\n\n\ncluster_RFormModule_bootstrap\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCountdownSnackbarComponent\n\nCountdownSnackbarComponent\n\nAppModule -->\n\nCountdownSnackbarComponent->AppModule\n\n\n\n\n\nWelcomeComponent\n\nWelcomeComponent\n\nAppModule -->\n\nWelcomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nAppModule -->\n\nFileUploadModule->AppModule\n\n\n\n\n\nRFormModule\n\nRFormModule\n\nAppModule -->\n\nRFormModule->AppModule\n\n\n\n\n\nRFormComponent \n\nRFormComponent \n\nRFormComponent  -->\n\nRFormModule->RFormComponent \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nCountdownService\n\nCountdownService\n\nAppModule -->\n\nCountdownService->AppModule\n\n\n\n\n\nStateParameterService\n\nStateParameterService\n\nAppModule -->\n\nStateParameterService->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nFileUploadModule -->\n\nFileUploadComponent->FileUploadModule\n\n\n\n\n\nDynamicFormComponent\n\nDynamicFormComponent\n\nRFormModule -->\n\nDynamicFormComponent->RFormModule\n\n\n\n\n\nDynamicFormQuestionComponent\n\nDynamicFormQuestionComponent\n\nRFormModule -->\n\nDynamicFormQuestionComponent->RFormModule\n\n\n\n\n\nRFormComponent\n\nRFormComponent\n\nRFormModule -->\n\nRFormComponent->RFormModule\n\n\n\n\n\nQuestionControlService\n\nQuestionControlService\n\nDynamicFormComponent -->\n\nQuestionControlService->DynamicFormComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nDynamicFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->DynamicFormComponent\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nRFormComponent -->\n\nQuestionService->RFormComponent\n\n\n\n\n\nUserDetailComponent\n\nUserDetailComponent\n\nUserModule -->\n\nUserDetailComponent->UserModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nUserModule -->\n\nUserListComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
