var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.222,1,0.833]],["body/components/AppComponent.html",[0,0.374,1,0.834,2,0.695,3,0.071,4,0.181,5,0.695,6,0.483,7,0.483,8,0.096,9,0.773,10,0.859,11,1.48,12,1.818,13,0.033,14,0.821,15,1.275,16,1.93,17,0.483,18,1.813,19,0.985,20,0.755,21,0.977,22,1.93,23,0.985,24,1.833,25,1.541,26,1.714,27,0.788,28,0.116,29,0.457,30,2.485,31,2.266,32,2.552,33,2.96,34,1.93,35,2.552,36,1.93,37,1.93,38,2.266,39,3.465,40,2.552,41,0.589,42,2.038,43,2.277,44,2.038,45,2.277,46,1.503,47,2.038,48,2.775,49,0.418,50,1.199,51,1.649,52,1.503,53,1.201,54,2.277,55,1.833,56,4.431,57,2.277,58,2.96,59,2.146,60,2.775,61,2.095,62,2.022,63,0.695,64,2.038,65,2.767,66,2.988,67,1.314,68,1.416,69,1.48,70,2.277,71,1.813,72,1.714,73,3.364,74,1.182,75,1.48,76,0.767,77,0.731,78,0.5,79,0.767,80,1.93,81,1.071,82,1.182,83,2.9,84,0.075,85,1.48,86,0.907,87,2.022,88,3.919,89,2.353,90,1.48,91,1.923,92,1.199,93,1.48,94,1.884,95,1.447,96,1.304,97,2.96,98,3.364,99,2.552,100,2.464,101,1.93,102,1.191,103,2.034,104,1.199,105,1.071,106,1.314,107,1.48,108,1.236,109,3.287,110,1.199,111,2.277,112,1.48,113,1.085,114,4.208,115,2.038,116,2.038,117,2.277,118,2.277,119,2.022,120,1.93,121,2.022,122,1.199,123,1.48,124,1.48,125,1.314,126,1.714,127,1.543,128,1.48,129,1.199,130,2.489,131,2.629,132,1.48,133,1.199,134,1.48,135,1.199,136,1.48,137,1.314,138,1.071,139,1.314,140,1.48,141,3.249,142,1.199,143,2.775,144,1.649,145,2.277,146,2.277,147,1.48,148,2.277,149,2.277,150,2.464,151,1.93,152,2.022,153,1.199,154,2.277,155,1.48,156,2.022,157,1.199,158,2.277,159,1.199,160,1.314,161,1.199,162,1.182,163,2.277,164,1.199,165,1.93,166,1.48,167,1.541,168,1.93,169,1.199,170,2.552,171,1.48,172,1.314,173,1.48,174,1.48,175,1.93,176,1.199,177,1.48,178,1.48,179,1.48,180,1.48,181,2.552,182,1.199,183,1.071,184,1.199,185,1.93,186,1.199,187,1.182,188,1.93,189,1.314,190,1.48,191,0.358,192,0.773,193,0.41,194,0.132,195,1.48,196,0.87,197,1.48,198,0.87,199,0.377,200,0.773,201,0.87,202,0.87,203,0.695,204,0.526,205,0.695,206,0.526,207,0.526,208,0.87,209,0.87,210,0.773,211,0.444,212,0.87,213,0.157,214,0.87,215,0.695,216,0.87,217,0.87,218,0.87,219,0.87,220,1.93,221,0.575,222,0.87,223,0.526,224,0.695,225,1.841,226,0.87,227,0.409,228,0.87,229,0.695,230,0.87,231,0.769,232,0.87,233,0.483,234,1.93,235,0.87,236,0.755,237,0.87,238,0.87,239,1.48,240,1.48,241,2.96,242,2.01,243,1.93,244,1.48,245,0.87,246,2.96,247,1.48,248,0.87,249,3.116,250,2.96,251,1.93,252,0.87,253,0.87,254,1.302,255,0.87,256,0.87,257,1.93,258,1.48,259,2.552,260,1.314,261,2.552,262,1.167,263,0.87,264,0.87,265,0.87,266,0.87,267,0.87,268,1.93,269,0.87,270,0.87,271,0.87,272,1.93,273,0.87,274,0.695,275,0.87,276,0.87,277,0.87,278,0.87,279,1.818,280,0.87,281,0.87,282,0.87,283,0.87,284,0.87,285,0.87,286,0.773,287,0.773,288,1.93,289,0.87,290,0.87,291,0.695,292,0.87,293,0.87,294,0.773,295,0.773,296,0.87,297,0.87,298,0.87,299,1.48,300,1.48,301,1.48,302,1.48,303,0.87,304,0.87,305,1.649,306,0.87,307,0.87,308,1.93,309,0.977,310,0.87,311,1.48,312,1.48,313,0.87,314,0.87,315,0.87,316,0.87,317,0.87,318,0.87,319,0.87,320,0.87,321,0.87,322,0.87,323,0.87,324,0.87,325,0.87,326,0.575,327,0.87,328,0.87,329,0.87,330,0.87,331,0.87,332,0.773,333,0.87,334,0.87,335,0.87,336,0.87,337,0.87,338,1.182,339,1.199,340,1.199,341,0.87,342,1.199,343,1.001,344,0.319,345,0.821,346,0.821,347,0.483,348,0.483,349,0.821,350,0.483,351,0.347,352,1.07,353,0.409,354,0.483,355,0.347,356,0.483,357,0.347,358,0.483,359,0.347,360,0.347,361,0.347,362,0.347,363,0.483,364,0.483,365,0.006,366,0.01,367,0.006]],["title/modules/AppModule.html",[368,1.261,369,2.017]],["body/modules/AppModule.html",[0,0.239,1,1.655,3,0.198,4,0.159,8,0.163,13,0.033,25,2.94,53,1.773,59,2.706,68,1.246,84,0.051,113,1.579,167,1.949,191,0.533,194,0.369,204,1.475,206,1.475,207,1.475,210,2.167,211,1.246,213,0.198,233,1.354,274,1.949,344,0.894,362,1.716,365,0.017,366,0.022,367,0.017,368,1.354,369,4.18,370,1.612,371,1.612,372,2.94,373,2.666,374,2.431,375,2.608,376,2.807,377,2.807,378,2.807,379,2.807,380,2.807,381,3.368,382,3.368,383,3.368,384,2.608,385,1.949,386,3.362,387,4.5,388,2.9,389,3.266,390,2.365,391,2.9,392,4.5,393,2.167,394,1.147,395,3.362,396,3.362,397,3.362,398,3.362,399,4.5,400,3.362,401,2.167,402,3.362,403,2.167,404,3.362,405,4.233,406,2.807,407,3.362,408,2.807,409,2.807,410,3.362,411,3.362,412,4.5,413,2.807,414,2.167,415,2.441,416,3.362,417,3.269,418,4.5,419,4.5,420,3.756,421,3.362,422,3.362,423,3.362,424,3.362,425,3.362]],["title/classes/AreaQuestion.html",[84,0.047,426,2.017]],["body/classes/AreaQuestion.html",[3,0.234,4,0.188,8,0.144,13,0.032,27,1.232,28,0.382,29,1.124,63,0.781,78,0.625,84,0.06,91,1.599,95,1.148,96,1.343,108,1.335,183,1.599,191,0.331,213,0.234,221,1.902,365,0.02,366,0.025,367,0.02,426,3.231,427,2.301,428,1.709,429,2.635,430,3.313,431,3.639,432,2.178,433,3.836,434,3.185,435,3.185,436,3.185,437,3.185,438,2.888,439,5.013,440,3.969,441,4.532,442,2.881,443,2.515,444,2.558,445,2.881,446,2.881,447,2.558,448,2.558,449,2.881,450,2.558,451,2.558,452,2.301,453,2.086,454,2.881,455,2.881,456,2.881,457,2.558,458,2.881,459,1.742]],["title/injectables/CountdownService.html",[59,1.5,193,0.482]],["body/injectables/CountdownService.html",[0,0.37,1,0.417,3,0.092,4,0.153,8,0.092,9,1.009,10,0.622,11,1.137,12,1.476,13,0.033,14,0.631,15,1.22,16,1.848,18,0.943,19,0.58,20,0.58,21,0.751,22,1.137,23,0.943,24,1.22,25,0.908,26,1.009,27,0.571,28,0.151,29,0.571,30,2.377,31,1.641,32,2.335,33,2.335,34,1.137,35,2.335,36,1.137,37,1.137,38,1.641,39,3.17,40,2.335,41,0.736,43,1.137,45,1.137,46,0.751,48,1.848,49,0.321,51,1.338,52,1.22,53,1.01,54,1.848,55,1.542,56,4.374,57,1.848,58,3.17,59,2.206,60,2.335,61,1.789,62,1.641,63,0.505,65,2.388,66,2.627,67,1.009,68,1.192,69,1.137,70,1.848,71,1.777,72,1.641,73,3.17,74,0.908,75,1.137,76,0.383,77,0.267,78,0.151,79,0.383,80,1.848,81,0.823,82,0.908,83,2.668,84,0.072,85,1.137,86,1.071,87,1.641,88,3.861,89,2.142,90,1.137,91,1.759,93,1.137,94,1.626,95,1.071,96,1.068,97,2.689,98,3.17,99,2.335,100,2.073,101,1.848,102,0.856,103,1.789,105,0.823,106,1.009,107,1.137,108,1.032,109,3.092,111,1.848,112,1.137,113,0.986,114,4.354,115,1.865,116,1.865,117,1.848,118,1.848,119,1.641,120,1.848,121,1.641,123,1.137,124,1.137,125,1.009,126,2.073,127,1.412,128,1.137,130,2.148,131,2.815,132,1.137,134,1.137,136,1.137,137,1.009,138,0.823,139,1.009,140,1.137,141,2.959,143,2.335,144,1.338,145,1.848,146,1.848,147,1.137,148,1.848,149,1.848,150,2.073,151,1.848,152,2.388,154,1.848,155,1.137,156,1.641,158,1.848,160,1.009,162,0.908,163,2.335,165,1.848,166,1.137,167,1.476,168,1.848,170,2.689,171,1.137,172,1.009,173,1.137,174,1.137,175,1.848,177,1.137,178,1.137,179,1.137,180,1.137,181,3.17,183,1.026,185,1.848,187,0.908,188,1.848,189,1.009,190,1.137,191,0.4,192,1.009,193,0.495,194,0.172,195,1.848,196,1.137,197,1.848,198,1.137,199,0.492,200,1.009,201,1.137,202,1.137,203,0.908,204,0.687,205,0.908,206,0.687,207,0.687,208,1.137,209,1.137,210,1.009,211,0.943,212,1.848,213,0.19,214,2.335,215,1.476,216,2.335,217,1.848,218,1.848,219,1.848,220,2.689,221,1.22,222,1.848,223,1.117,224,2.148,225,1.956,226,1.848,227,0.534,228,1.137,229,0.908,230,1.137,231,1.071,232,1.848,233,1.026,234,3.17,235,1.137,236,0.943,237,1.137,238,1.137,239,1.848,240,1.848,241,3.341,242,2.296,243,2.335,244,1.848,245,1.137,246,3.341,247,1.848,248,1.137,249,3.482,250,3.341,251,2.335,252,1.137,253,1.137,254,0.58,255,1.137,256,1.137,257,2.335,258,1.848,259,2.959,260,1.641,261,2.959,262,1.412,263,1.137,264,1.137,265,1.137,266,1.137,267,1.137,268,2.335,269,1.137,270,1.137,271,1.137,272,2.335,273,1.137,274,0.908,275,1.137,276,1.137,277,1.137,278,1.137,279,2.148,280,1.137,281,1.137,282,1.137,283,1.137,284,1.137,285,1.137,286,1.009,287,1.009,288,2.335,289,1.137,290,1.137,291,0.908,292,1.137,293,1.137,294,1.009,295,1.009,296,1.137,297,1.137,298,1.137,299,1.848,300,1.848,301,1.848,302,1.848,303,1.137,304,1.137,305,1.947,306,1.137,307,1.137,308,2.335,309,1.22,310,1.137,311,1.848,312,1.848,313,1.137,314,1.137,315,1.137,316,1.137,317,1.137,318,1.137,319,1.137,320,1.137,321,1.137,322,1.137,323,1.137,324,1.137,325,1.137,326,0.751,327,1.137,328,1.137,329,1.137,330,1.137,331,1.137,332,1.009,333,1.137,334,1.137,335,1.137,336,1.137,337,1.137,338,1.476,365,0.008,366,0.013,367,0.008,460,0.687,461,1.566,462,1.566,463,1.566,464,1.566]],["title/components/CountdownSnackbarComponent.html",[0,0.222,113,0.833]],["body/components/CountdownSnackbarComponent.html",[0,0.372,1,0.649,2,0.832,3,0.088,4,0.147,6,0.599,7,0.599,8,0.113,9,0.958,10,0.596,11,1.079,12,1.414,13,0.033,14,0.599,15,1.169,16,1.771,17,0.599,18,1.941,19,0.904,20,0.551,21,0.712,22,1.079,23,1.149,24,1.169,25,0.861,26,0.958,27,0.547,28,0.143,29,0.547,30,2.333,31,1.572,32,2.252,33,2.252,34,1.079,35,3.267,36,1.079,37,1.079,38,1.572,39,3.093,40,2.252,43,1.079,45,1.079,46,0.712,48,1.771,49,0.637,51,1.282,52,1.169,53,0.974,54,1.771,55,1.487,56,4.426,57,1.771,58,3.093,59,2.401,60,2.252,61,1.74,62,1.572,63,0.491,65,2.314,66,2.556,67,0.958,68,1.149,69,1.079,70,1.771,71,1.668,72,2,73,3.093,74,0.861,75,1.079,76,0.363,77,0.675,78,0.299,79,0.363,80,1.771,81,0.781,82,0.861,83,2.724,84,0.071,85,1.079,86,0.897,87,1.572,88,3.803,89,2.084,90,1.079,91,1.25,93,1.079,94,1.576,95,0.897,96,0.969,97,2.606,98,3.093,99,2.252,100,2,101,2.606,102,0.395,103,1.576,105,0.781,106,0.958,107,1.079,108,1.009,109,3.029,111,1.771,112,1.079,113,1.25,114,4.319,115,2.298,116,2.298,117,1.771,118,1.771,119,1.572,120,1.771,121,1.572,123,1.079,124,1.079,125,0.958,126,1.572,127,1.361,128,1.079,130,2.081,131,2.747,132,1.079,134,1.079,136,1.079,137,0.958,138,0.781,139,0.958,140,1.079,141,2.878,143,2.252,144,1.282,145,1.771,146,1.771,147,1.079,148,1.771,149,1.771,150,2,151,1.771,152,2.314,154,1.771,155,1.079,156,1.572,158,1.771,160,0.958,162,0.861,163,3.093,165,2.606,166,1.079,167,1.414,168,1.771,170,2.252,171,1.079,172,0.958,173,1.079,174,1.079,175,1.771,177,1.079,178,1.079,179,1.079,180,1.079,181,2.878,183,0.983,185,1.771,187,0.861,188,1.771,189,0.958,190,1.079,191,0.392,192,0.958,193,0.553,194,0.163,195,1.771,196,1.079,197,1.771,198,1.079,199,0.467,200,0.958,201,1.079,202,1.079,203,0.861,204,0.652,205,0.861,206,0.652,207,0.652,208,1.079,209,1.079,210,0.958,211,0.551,212,1.079,213,0.183,214,1.079,215,0.861,216,1.079,217,1.079,218,1.079,219,1.079,220,2.878,221,0.712,222,1.079,223,0.652,224,0.861,225,1.935,226,1.079,227,0.507,228,1.079,229,0.861,230,1.079,231,0.897,232,1.079,233,0.599,234,3.267,235,1.079,236,0.904,237,1.079,238,1.079,239,1.771,240,1.771,241,3.267,242,2.24,243,2.252,244,1.771,245,1.079,246,3.267,247,1.771,248,1.079,249,3.411,250,3.267,251,2.252,252,1.079,253,1.079,254,1.469,255,1.079,256,1.079,257,2.252,258,1.771,259,2.878,260,1.572,261,2.878,262,1.361,263,1.079,264,1.079,265,1.079,266,1.079,267,1.079,268,2.252,269,1.079,270,1.079,271,1.079,272,2.252,273,1.079,274,0.861,275,1.079,276,1.079,277,1.079,278,1.079,279,2.081,280,1.079,281,1.079,282,1.079,283,1.079,284,1.079,285,1.079,286,0.958,287,0.958,288,2.252,289,1.079,290,1.079,291,0.861,292,1.079,293,1.079,294,0.958,295,0.958,296,1.079,297,1.079,298,1.079,299,1.771,300,1.771,301,1.771,302,1.771,303,1.079,304,1.079,305,2.558,306,1.079,307,1.079,308,2.252,309,1.169,310,1.079,311,1.771,312,1.771,313,1.079,314,1.079,315,1.079,316,1.079,317,1.079,318,1.079,319,1.079,320,1.079,321,1.079,322,1.079,323,1.079,324,1.079,325,1.079,326,0.712,327,1.079,328,1.079,329,1.079,330,1.079,331,1.771,332,1.572,333,2.252,334,1.771,335,2.252,336,1.771,337,1.771,338,2.47,344,0.395,345,0.983,346,0.983,347,0.599,348,0.599,349,0.983,350,0.599,351,0.43,352,1.225,353,0.507,354,0.599,355,0.43,356,0.599,357,0.43,358,0.599,359,0.43,360,0.43,361,0.43,362,0.43,363,0.599,364,0.599,365,0.007,366,0.012,367,0.007,465,1.486,466,2.439,467,1.486,468,1.486,469,1.486,470,1.486]],["title/classes/DropdownQuestion.html",[84,0.047,471,2.017]],["body/classes/DropdownQuestion.html",[3,0.234,4,0.188,8,0.144,13,0.032,27,1.232,28,0.382,29,1.124,63,0.781,78,0.625,84,0.06,91,1.599,95,1.148,96,1.343,108,1.335,183,1.599,191,0.331,213,0.234,221,1.902,365,0.02,366,0.025,367,0.02,427,2.301,428,1.709,429,2.635,431,3.639,432,2.178,433,3.836,434,3.185,435,3.185,436,3.185,437,3.185,438,2.888,441,4.532,442,2.881,443,2.515,444,2.558,445,2.881,446,2.881,447,2.558,448,2.558,449,2.881,450,2.558,451,2.558,452,3.185,453,2.086,454,2.881,455,2.881,456,2.881,457,2.558,458,2.881,459,1.742,471,3.231,472,3.313,473,3.969]],["title/components/DynamicFormComponent.html",[0,0.222,351,0.905]],["body/components/DynamicFormComponent.html",[0,0.391,1,0.687,2,1.277,3,0.152,4,0.123,6,1.041,7,1.041,8,0.136,10,0.915,13,0.033,14,1.508,15,1.795,17,1.041,18,2.194,19,0.957,23,0.957,27,1.237,28,0.249,29,0.84,30,1.238,41,1.083,46,2.315,49,0.53,51,2.538,52,2.111,53,1.517,61,1.133,63,0.662,76,0.631,77,0.872,78,0.465,79,0.631,81,2.81,82,2.17,83,2.799,84,0.039,86,1.083,95,1.083,96,0.915,102,0.996,103,1.643,106,2.413,113,0.687,127,2.119,187,2.17,191,0.499,194,0.284,199,0.811,203,1.497,204,1.133,205,1.497,206,1.133,207,1.133,211,1.631,213,0.152,215,2.972,224,2.17,225,1.647,227,1.502,229,1.497,254,1.789,279,1.497,286,2.413,287,2.413,291,1.497,305,1.358,344,0.687,345,1.508,346,1.508,347,1.041,348,1.041,349,1.508,350,1.041,351,1.546,352,1.823,353,1.748,354,1.041,355,0.747,356,1.041,357,0.747,358,1.041,359,0.747,360,0.747,361,0.747,362,0.747,363,1.041,364,1.041,365,0.013,366,0.018,367,0.013,374,1.795,394,0.881,413,3.125,414,1.665,415,1.875,428,1.881,432,1.748,443,1.508,459,1.133,474,4.003,475,1.875,476,3.744,477,3.71,478,2.898,479,2.718,480,3.197,481,2.718,482,3.197,483,1.968,484,3.744,485,4.404,486,4.829,487,3.125,488,3.304,489,2.583,490,4.829,491,3.025,492,3.744,493,2.413,494,3.744,495,2.799,496,2.413,497,2.413,498,3.125,499,1.968,500,1.795,501,3.125,502,3.125,503,2.718,504,2.413,505,2.718,506,2.583,507,3.113,508,2.583,509,3.125,510,2.718,511,2.583,512,4.829,513,1.795,514,3.125,515,3.125,516,2.583,517,2.583,518,1.133,519,2.583,520,2.583,521,1.875,522,2.583,523,2.583,524,2.583,525,1.665,526,2.583,527,2.583,528,3.744,529,3.744,530,1.497,531,2.583,532,3.744,533,2.583,534,2.583,535,2.583,536,2.583,537,2.583,538,2.583,539,2.583,540,2.583,541,2.583,542,2.583,543,2.156,544,2.583,545,2.583,546,2.583,547,3.744,548,3.744,549,3.744,550,3.744]],["title/components/DynamicFormQuestionComponent.html",[0,0.222,355,0.905]],["body/components/DynamicFormQuestionComponent.html",[0,0.406,1,0.928,2,1.573,3,0.206,4,0.165,5,2.022,6,1.405,7,1.405,8,0.167,10,0.853,13,0.033,17,1.405,18,2.319,19,1.292,21,2.21,23,1.292,27,1.413,28,0.336,63,0.64,77,0.935,78,0.444,84,0.052,113,0.928,191,0.431,194,0.383,213,0.206,231,1.009,254,2.036,344,0.928,345,1.858,346,1.858,347,1.405,348,1.405,349,1.858,350,1.405,351,1.009,352,2.002,353,1.762,354,1.405,355,1.589,356,1.405,357,1.009,358,1.405,359,1.009,360,1.009,361,1.009,362,1.009,363,1.405,364,1.405,365,0.017,366,0.023,367,0.017,420,2.912,428,1.874,432,1.762,438,2.424,443,2.539,453,2.424,459,1.531,474,3.989,477,3.684,483,2.424,487,3.849,507,4.003,518,1.531,551,2.912,552,3.849,553,5.165,554,4.611,555,4.611,556,5.165,557,3.488,558,3.488,559,3.488,560,3.488,561,4.611,562,3.488,563,5.496,564,4.611,565,3.488,566,4.771,567,3.488,568,3.488,569,3.488,570,3.347,571,2.912,572,2.912,573,2.912,574,3.488]],["title/injectables/EventService.html",[61,1.373,193,0.482]],["body/injectables/EventService.html",[0,0.361,2,1.386,3,0.171,4,0.271,8,0.105,10,0.709,13,0.033,20,1.074,28,0.279,29,0.912,30,2.25,41,1.175,49,0.963,61,1.784,63,0.733,65,2.62,66,3.58,67,3.28,71,1.506,74,2.356,76,0.709,77,0.493,78,0.584,79,0.709,84,0.071,86,1.357,89,3.109,94,2.683,95,1.549,96,1.31,102,1.249,103,1.272,105,2.137,108,1.053,125,2.62,126,2.62,127,2.554,130,2.356,137,2.62,138,2.674,172,2.62,191,0.339,193,0.626,194,0.318,199,0.91,211,1.506,213,0.171,215,1.68,223,2.351,224,2.356,231,1.175,260,1.868,305,2.674,352,1.386,365,0.014,366,0.02,367,0.014,460,1.272,501,3.393,503,2.951,575,2.42,576,4.065,577,4.694,578,5.554,579,4.694,580,4.065,581,5.088,582,5.088,583,4.065,584,2.899,585,2.899,586,4.065,587,4.065,588,4.065,589,4.065,590,3.918,591,2.899,592,2.899,593,4.065,594,2.899,595,2.899,596,3.28,597,2.899,598,2.899,599,4.065,600,2.899,601,4.694,602,5.358,603,2.899,604,4.694,605,1.524,606,2.899,607,2.899,608,2.899,609,2.899,610,2.899,611,2.899,612,2.899,613,5.358,614,2.899,615,1.868,616,2.899,617,2.899,618,2.899,619,5.088,620,2.899,621,2.899,622,4.065,623,2.899,624,4.065,625,2.899,626,2.899,627,2.899,628,2.899,629,2.899,630,2.899,631,2.899,632,2.899,633,2.899,634,2.899,635,2.899,636,1.868,637,2.899,638,2.899,639,2.104,640,2.899,641,2.899,642,2.899]],["title/components/FileUploadComponent.html",[0,0.222,357,0.905]],["body/components/FileUploadComponent.html",[0,0.36,1,0.534,2,1.057,3,0.183,4,0.095,5,1.164,6,0.809,7,0.809,8,0.221,10,0.926,12,2.82,13,0.033,14,1.249,15,1.815,17,0.809,18,2.07,19,0.744,21,1.486,23,0.744,24,2.042,27,1.175,28,0.193,29,0.695,41,0.897,46,2.042,49,0.412,52,2.042,53,1.338,55,2.511,61,0.881,63,0.72,74,2.469,76,0.758,77,0.863,78,0.565,79,0.758,84,0.03,86,0.581,91,0.809,95,0.581,96,0.491,102,1.008,103,2.135,108,1.137,113,0.534,115,2.82,127,2.135,130,1.797,162,2.469,187,1.797,191,0.423,192,1.999,194,0.221,204,0.881,205,1.164,206,0.881,207,0.881,211,1.578,213,0.118,225,1.57,227,1.057,229,1.164,236,0.744,254,1.578,279,1.164,294,2.441,295,1.294,326,0.963,338,2.196,344,0.534,345,1.249,346,1.249,347,0.809,348,0.809,349,1.249,350,0.809,351,0.581,352,1.659,353,0.685,354,0.809,355,0.581,356,0.809,357,1.232,358,0.809,359,0.581,360,0.581,361,0.581,362,0.581,363,0.809,364,0.809,365,0.01,366,0.015,367,0.01,394,0.685,401,3.782,477,2.967,483,1.63,491,2.886,495,2.469,496,1.999,497,1.999,504,1.999,505,2.251,513,2.511,514,2.588,515,2.588,518,0.881,525,1.294,543,1.676,596,3.376,615,1.999,636,2.745,639,1.458,643,3.401,644,1.676,645,5.182,646,3.555,647,3.555,648,3.788,649,3.101,650,3.788,651,4.865,652,3.788,653,5.071,654,3.788,655,3.788,656,3.101,657,1.294,658,4.259,659,3.101,660,2.251,661,3.341,662,4.865,663,3.101,664,4.217,665,2.008,666,3.101,667,3.101,668,2.008,669,4.259,670,3.101,671,4.603,672,4.259,673,3.101,674,3.101,675,2.008,676,3.101,677,2.008,678,3.101,679,4.259,680,2.008,681,2.008,682,2.008,683,3.101,684,4.259,685,2.008,686,2.008,687,3.101,688,2.008,689,2.588,690,2.749,691,2.588,692,2.008,693,2.008,694,1.797,695,3.101,696,2.008,697,2.008,698,2.008,699,2.008,700,3.101,701,2.008,702,2.008,703,2.008,704,2.008,705,2.008,706,2.008,707,2.008,708,3.101,709,4.259,710,3.101,711,2.008,712,2.008,713,2.008,714,3.101,715,2.008,716,1.676,717,2.008,718,2.008,719,2.008,720,2.008,721,2.008,722,2.008,723,2.008,724,2.008,725,2.008,726,3.788,727,3.101,728,2.008,729,2.008,730,2.008,731,2.008,732,2.008,733,2.008,734,2.008,735,1.676,736,3.788,737,2.008,738,2.008,739,2.008,740,2.008,741,2.008,742,2.008,743,2.008,744,2.008,745,2.008,746,3.101]],["title/modules/FileUploadModule.html",[368,1.261,381,1.814]],["body/modules/FileUploadModule.html",[0,0.351,3,0.229,4,0.184,8,0.197,13,0.033,68,1.437,84,0.058,144,2.039,167,2.249,191,0.538,194,0.426,213,0.229,233,1.563,344,1.032,357,1.797,365,0.019,366,0.024,367,0.019,368,1.563,370,1.86,371,1.86,372,3.151,373,2.039,374,1.86,375,2.864,381,3.502,384,2.864,385,2.249,388,2.501,389,3.586,390,2.039,391,3.185,393,2.501,394,1.323,401,2.501,405,4.124,406,3.239,414,2.501,417,3.185,507,2.501,518,1.703,643,2.249,646,3.239,647,3.239,747,3.239,748,3.239,749,3.88,750,3.586,751,3.88,752,3.946,753,2.816,754,3.946,755,2.816,756,4.538,757,3.239,758,4.941,759,3.88,760,4.941,761,3.88,762,4.941,763,3.239,764,4.941,765,3.239,766,3.504,767,3.88,768,2.816,769,3.185]],["title/injectables/FileUploadService.html",[55,1.5,193,0.482]],["body/injectables/FileUploadService.html",[3,0.216,4,0.173,8,0.22,10,1.292,13,0.033,20,1.355,28,0.352,41,1.375,49,0.75,51,2.942,55,2.683,63,0.589,71,1.958,76,1.163,77,0.81,78,0.584,79,1.163,81,3.05,82,2.757,84,0.055,86,1.375,89,2.5,94,2.456,102,0.973,108,1.334,138,2.5,191,0.441,193,0.916,194,0.402,199,1.149,204,1.605,213,0.216,225,1.979,227,1.622,231,1.057,236,1.355,262,1.605,365,0.018,366,0.023,367,0.018,460,1.605,493,3.066,499,2.5,500,2.781,503,3.452,596,3.066,605,1.922,643,3.064,645,3.97,661,3.452,664,4.063,690,3.452,691,3.97,770,3.053,771,4.756,772,3.657,773,3.657,774,4.756,775,5.286,776,3.657,777,4.756,778,5.597,779,4.756,780,5.803,781,4.756,782,3.657,783,3.657,784,3.657,785,3.657,786,3.657,787,3.657,788,3.657,789,3.657,790,3.657,791,3.657,792,3.657,793,3.053,794,3.657]],["title/guards/FormGuard.html",[766,2.017,795,2.017]],["body/guards/FormGuard.html",[3,0.215,4,0.173,8,0.132,10,1.162,13,0.033,14,1.471,20,1.353,27,1.301,28,0.352,41,1.374,49,0.749,52,2.532,53,1.659,63,0.589,71,1.957,76,0.893,77,0.621,78,0.352,79,0.893,84,0.055,100,2.354,102,0.971,183,1.914,191,0.467,193,0.862,194,0.401,199,1.147,206,1.602,207,1.602,211,1.76,213,0.215,225,1.62,231,1.374,236,1.353,242,1.919,262,2.318,291,2.117,365,0.018,366,0.023,367,0.018,394,1.245,491,3.227,495,3.447,496,3.063,497,3.606,499,3.125,500,2.85,504,3.063,505,3.449,525,2.354,605,1.919,643,3.062,657,2.354,660,3.449,694,2.754,766,3.606,769,3.833,795,3.063,796,2.651,797,3.048,798,4.752,799,5.594,800,4.752,801,4.752,802,4.752,803,3.651,804,4.752,805,5.594,806,3.651,807,4.752,808,4.752,809,3.966,810,4.409,811,3.048,812,3.048,813,3.048,814,3.651,815,3.651,816,3.651,817,3.651,818,3.651]],["title/interfaces/IUser.html",[819,2.017,820,1.645]],["body/interfaces/IUser.html",[3,0.258,4,0.208,8,0.159,13,0.032,28,0.422,29,1.195,78,0.613,108,1.488,213,0.258,365,0.022,366,0.026,367,0.022,530,3.463,819,2.822,820,2.8,821,4.379,822,3.655,823,5.974,824,3.851,825,5.742,826,4.337,827,4.337,828,4.337,829,4.793,830,4.379,831,4.379]],["title/classes/QuestionBase.html",[84,0.047,432,1.067]],["body/classes/QuestionBase.html",[3,0.191,4,0.153,8,0.117,10,0.791,13,0.033,27,1.288,28,0.312,29,0.983,49,0.664,63,0.751,76,0.791,77,0.551,78,0.624,79,0.791,84,0.049,91,2.004,96,1.405,108,1.427,183,2.004,213,0.191,221,2.384,223,1.42,225,1.104,365,0.016,366,0.022,367,0.016,427,1.876,428,2.089,429,3.22,432,1.496,433,3.437,434,3.465,435,3.331,436,3.611,437,3.331,438,3.02,443,2.582,444,2.827,447,2.827,448,3.206,450,2.827,451,2.827,452,2.542,453,2.305,457,2.827,552,3.661,615,2.086,660,3.183,832,2.701,833,4.385,834,4.385,835,4.385,836,3.236,837,3.236,838,3.236,839,3.236,840,3.236,841,3.236,842,3.236,843,3.236,844,3.236,845,3.236,846,3.236,847,3.236,848,3.236,849,3.236,850,3.236,851,3.236,852,4.385,853,3.236,854,3.236,855,3.236,856,3.236,857,3.236,858,3.236]],["title/injectables/QuestionControlService.html",[193,0.482,478,1.645]],["body/injectables/QuestionControlService.html",[3,0.242,4,0.195,8,0.149,10,1.251,13,0.033,28,0.395,41,1.48,49,1.145,63,0.634,76,1.003,77,0.698,78,0.395,79,1.003,84,0.062,86,1.613,102,1.092,191,0.465,193,0.9,194,0.451,213,0.242,225,1.4,227,1.4,231,1.187,365,0.02,366,0.025,367,0.02,428,1.902,429,2.932,432,2.143,443,1.653,459,1.801,460,1.801,477,3.596,478,3.07,488,3.765,493,3.299,510,4.24,518,1.801,859,3.426,860,5.119,861,4.104,862,5.119,863,4.104,864,4.273,865,4.104,866,4.104,867,4.104,868,4.104,869,4.104,870,4.104,871,5.119,872,4.104,873,4.104]],["title/injectables/QuestionService.html",[193,0.482,874,1.645]],["body/injectables/QuestionService.html",[3,0.227,4,0.182,8,0.139,10,0.939,13,0.033,27,1.101,28,0.37,41,1.42,62,2.477,63,0.476,71,1.819,77,0.836,78,0.37,84,0.058,86,1.704,96,1.201,102,1.44,116,2.847,191,0.503,193,0.878,194,0.422,199,1.207,213,0.227,223,1.686,227,1.311,231,1.111,262,2.586,309,1.842,365,0.019,366,0.024,367,0.019,426,3.165,428,1.675,432,1.675,434,3.551,435,3.416,436,2.228,437,3.416,438,3.098,443,2.297,452,2.228,459,1.686,460,1.686,471,3.165,488,3.488,530,2.847,824,3.165,826,2.79,827,2.79,829,3.208,874,2.998,875,3.208,876,5.703,877,3.843,878,3.676,879,3.208,880,3.843,881,3.843,882,3.843,883,3.843,884,3.843,885,3.843,886,3.208,887,3.843,888,2.79,889,2.79,890,3.843,891,3.843,892,3.843,893,3.843,894,3.843]],["title/components/RFormComponent.html",[0,0.222,359,0.905]],["body/components/RFormComponent.html",[0,0.43,1,0.976,2,1.625,3,0.216,4,0.174,6,1.478,7,1.478,8,0.173,10,1.165,13,0.033,17,1.478,18,2.338,19,1.359,20,1.766,23,1.766,27,1.335,28,0.353,29,1.069,49,0.753,63,0.59,71,2.152,76,0.897,77,0.989,78,0.459,79,0.897,83,2.762,84,0.055,113,0.976,191,0.467,193,0.863,194,0.403,199,1.152,211,1.766,213,0.216,225,1.251,254,2.076,344,0.976,345,1.92,346,1.92,347,1.478,348,1.478,349,1.92,350,1.478,351,1.061,352,2.03,353,1.251,354,1.478,355,1.061,356,1.478,357,1.061,358,1.478,359,1.62,360,1.061,361,1.061,362,1.061,363,1.478,364,1.478,365,0.018,366,0.024,367,0.018,374,2.284,403,3.412,428,1.805,432,1.805,443,1.478,459,1.61,475,2.663,488,3.744,493,3.072,510,3.459,864,3.978,874,3.23,895,4.766,896,4.766,897,4.766,898,3.668,899,3.668,900,3.668]],["title/modules/RFormModule.html",[368,1.261,382,1.814]],["body/modules/RFormModule.html",[0,0.26,3,0.216,4,0.174,8,0.133,13,0.033,27,1.069,49,0.753,68,1.359,84,0.055,144,1.928,191,0.526,194,0.403,213,0.216,233,1.478,274,2.126,344,0.976,351,1.812,353,1.625,355,1.721,359,1.86,365,0.018,366,0.024,367,0.018,368,1.478,370,1.758,371,1.758,372,3.068,373,2.782,374,1.758,375,2.762,382,3.658,384,2.762,385,2.126,388,2.364,389,3.459,390,1.928,391,3.072,393,2.364,394,1.251,403,2.364,417,2.364,428,1.251,478,2.782,479,3.843,480,3.843,481,3.843,482,3.843,518,1.61,750,3.459,752,3.843,753,2.663,754,3.843,755,2.663,756,4.419,757,3.062,768,2.663,874,2.782,901,3.062,902,3.062,903,3.062,904,3.062,905,3.062,906,3.668,907,4.766,908,3.668,909,5.294,910,3.668]],["title/injectables/StateParameterService.html",[53,0.983,193,0.482]],["body/injectables/StateParameterService.html",[3,0.226,4,0.182,8,0.178,10,0.938,13,0.033,20,1.421,27,1.351,28,0.37,29,1.1,49,1.11,53,1.541,63,0.746,78,0.568,84,0.058,86,1.419,87,3.162,89,2.996,94,2.153,95,1.109,96,0.938,108,1.213,127,2.153,131,3.486,138,2.579,139,3.162,191,0.32,193,0.756,194,0.421,213,0.226,309,2.351,332,3.162,365,0.019,366,0.024,367,0.019,460,1.684,495,2.844,496,3.162,497,3.162,498,4.095,499,2.996,500,2.823,502,4.095,513,2.351,590,4.095,596,3.162,605,2.017,690,3.561,793,3.203,828,3.561,911,5.112,912,3.203,913,4.906,914,4.906,915,4.906,916,5.89,917,4.906,918,4.906,919,4.906,920,3.837,921,4.906,922,3.837,923,4.906,924,3.837,925,3.837,926,4.906,927,3.837,928,3.837,929,3.837]],["title/classes/TextboxQuestion.html",[84,0.047,878,2.017]],["body/classes/TextboxQuestion.html",[3,0.234,4,0.188,8,0.144,13,0.032,27,1.232,28,0.382,29,1.124,63,0.781,78,0.625,84,0.06,91,1.599,95,1.148,96,1.343,108,1.335,183,1.599,191,0.331,213,0.234,221,1.902,365,0.02,366,0.025,367,0.02,427,2.301,428,1.709,429,2.635,431,3.639,432,2.178,433,3.836,434,3.185,435,3.185,436,3.185,437,3.185,438,2.888,441,4.532,442,2.881,443,2.515,444,2.558,445,2.881,446,2.881,447,2.558,448,2.558,449,2.881,450,2.558,451,2.558,452,2.301,453,2.086,454,2.881,455,2.881,456,2.881,457,2.558,458,2.881,459,1.742,878,3.231,879,4.184,930,3.313,931,3.969]],["title/components/UserDetailComponent.html",[0,0.222,360,0.905]],["body/components/UserDetailComponent.html",[0,0.334,1,0.773,2,1.389,3,0.171,4,0.138,5,1.684,6,1.171,7,1.171,8,0.148,13,0.033,14,1.64,15,2.253,17,1.171,18,2.193,19,1.076,21,1.952,23,1.076,24,2.57,28,0.28,29,0.913,30,2.253,41,1.177,46,2.441,49,0.596,63,0.722,68,1.076,76,1.149,77,1.032,78,0.517,79,1.149,84,0.044,95,1.177,96,0.995,102,1.355,103,2.439,108,1.203,113,0.773,191,0.447,194,0.319,213,0.171,225,1.603,227,1.389,231,0.84,236,1.076,254,1.887,326,1.952,344,0.773,345,1.64,346,1.64,347,1.171,348,1.171,349,1.64,350,1.171,351,0.84,352,1.737,353,0.991,354,1.171,355,0.84,356,1.171,357,0.84,358,1.171,359,0.84,360,1.473,361,0.84,362,0.84,363,1.171,364,1.171,365,0.014,366,0.02,367,0.014,390,1.527,394,0.991,483,2.14,491,3,499,2.14,500,1.952,513,2.906,530,2.36,615,2.625,694,1.684,820,2.471,824,2.625,888,2.956,889,2.956,932,3.815,933,2.426,934,4.7,935,4.072,936,3.412,937,3.399,938,5.094,939,3.399,940,2.906,941,5.094,942,3.308,943,4.764,944,4.072,945,4.072,946,3.399,947,2.906,948,2.906,949,2.906,950,3.399,951,2.906,952,2.426,953,3.924,954,2.906,955,3.399,956,2.906,957,2.426,958,2.906,959,2.906,960,2.906,961,2.906,962,2.109,963,2.426,964,2.426,965,2.426,966,5.094,967,5.094,968,4.072,969,4.072,970,4.072,971,4.072,972,4.072]],["title/guards/UserDetailGuard.html",[795,2.017,973,2.017]],["body/guards/UserDetailGuard.html",[3,0.245,4,0.197,8,0.151,13,0.033,14,1.673,20,1.539,28,0.4,41,1.491,49,0.852,63,0.639,71,2.078,76,1.261,77,0.878,78,0.497,79,1.261,84,0.063,102,1.105,105,2.948,183,2.077,191,0.468,193,0.794,194,0.456,199,1.304,213,0.245,227,1.416,231,1.491,236,1.539,242,2.183,262,1.823,365,0.021,366,0.025,367,0.021,394,1.416,491,3.231,499,2.183,500,2.688,605,2.183,657,2.677,694,2.989,769,3.888,796,3.015,809,4.305,810,4.682,811,4.896,812,4.896,932,3.615,965,3.467,973,3.324,974,3.467,975,4.153,976,4.153,977,4.153,978,4.153,979,4.153]],["title/components/UserListComponent.html",[0,0.222,361,0.905]],["body/components/UserListComponent.html",[0,0.287,1,0.596,2,1.149,3,0.132,4,0.106,5,1.298,6,0.902,7,0.902,8,0.122,13,0.033,14,1.357,15,1.941,17,0.902,18,2.054,19,0.829,21,1.615,23,0.829,24,2.316,26,2.171,28,0.325,29,0.755,41,0.974,46,2.159,49,0.459,63,0.736,68,0.829,76,0.99,77,0.989,78,0.534,79,0.99,84,0.034,86,0.647,91,1.357,95,1.567,96,1.325,102,1.077,103,1.777,105,1.177,108,1.01,109,1.443,113,0.596,116,1.953,121,2.61,127,1.977,152,2.61,156,1.443,189,2.904,191,0.423,194,0.246,213,0.132,223,1.478,227,0.763,231,0.647,236,0.829,242,2.129,254,1.669,262,1.777,305,1.771,309,1.615,326,1.615,341,3.27,343,1.869,344,0.596,345,1.357,346,2.234,347,0.902,348,0.902,349,1.357,350,0.902,351,0.647,352,1.536,353,0.763,354,0.902,355,0.647,356,0.902,357,0.647,358,0.902,359,0.647,360,0.647,361,1.303,362,0.647,363,0.902,364,0.902,365,0.011,366,0.022,367,0.011,390,1.177,453,2.668,483,1.771,513,2.433,530,1.953,566,3.761,570,1.625,571,1.869,572,3.761,573,1.869,636,3.574,639,2.445,664,2.445,694,1.298,716,1.869,820,2.539,824,2.171,826,2.445,827,2.445,828,2.445,888,2.445,889,2.445,932,3.859,936,3.507,939,2.812,942,3.053,943,4.033,950,2.812,952,1.869,953,3.38,955,2.812,957,1.869,962,2.94,963,1.869,964,1.869,980,1.869,981,4.05,982,3.368,983,4.05,984,4.05,985,4.05,986,4.05,987,4.05,988,4.05,989,4.05,990,4.033,991,3.368,992,2.239,993,3.368,994,3.368,995,2.239,996,2.239,997,2.239,998,3.368,999,2.239,1000,2.239,1001,2.239,1002,2.239,1003,3.368,1004,2.239,1005,2.239,1006,3.368,1007,2.239,1008,2.239,1009,2.239,1010,2.239,1011,1.869,1012,2.239,1013,2.239,1014,2.239,1015,2.239,1016,1.869,1017,2.239,1018,2.239,1019,2.239,1020,3.368,1021,2.239,1022,2.239,1023,2.239,1024,2.239,1025,2.239,1026,2.239,1027,2.239,1028,2.239,1029,2.239,1030,2.239,1031,2.239,1032,2.239,1033,2.239,1034,2.239,1035,2.239,1036,3.368,1037,2.239,1038,2.239,1039,2.239,1040,2.239,1041,4.505,1042,4.505,1043,4.505,1044,3.368,1045,3.368,1046,3.368,1047,3.368,1048,3.368,1049,3.368,1050,2.239,1051,2.239,1052,1.869,1053,4.05,1054,3.368,1055,4.505,1056,3.368,1057,3.368,1058,2.239,1059,2.239,1060,2.239,1061,2.239,1062,3.368,1063,2.239,1064,2.239,1065,3.368,1066,3.368,1067,2.239,1068,2.239,1069,2.239,1070,2.239,1071,2.239,1072,2.239,1073,3.368,1074,4.05,1075,2.239,1076,4.05,1077,2.239,1078,2.239,1079,2.239,1080,2.239,1081,3.368,1082,1.869,1083,3.368,1084,3.368,1085,2.239,1086,2.239,1087,2.239,1088,2.239,1089,3.368,1090,2.239,1091,2.239,1092,2.239,1093,2.239,1094,2.239,1095,2.239,1096,3.368,1097,2.239,1098,2.239,1099,2.239]],["title/modules/UserModule.html",[368,1.261,383,1.814]],["body/modules/UserModule.html",[0,0.358,3,0.236,4,0.19,8,0.145,13,0.033,84,0.06,144,2.107,191,0.533,194,0.44,213,0.236,233,1.615,344,1.066,360,1.788,361,1.788,365,0.02,366,0.025,367,0.02,368,1.615,370,1.921,371,1.921,372,3.199,373,2.107,374,1.921,375,2.924,383,3.626,384,2.924,385,2.324,388,2.584,391,3.251,393,2.584,394,1.367,417,3.251,513,2.645,518,1.759,521,2.91,750,3.661,752,4.006,753,2.91,754,3.661,755,2.91,763,3.346,768,2.91,769,2.584,973,3.251,990,3.346,1011,3.346,1100,3.346,1101,3.346,1102,4.009,1103,4.009,1104,4.009,1105,4.009,1106,5.519,1107,5.044,1108,5.044,1109,4.009,1110,4.009]],["title/injectables/UserService.html",[193,0.482,942,1.814]],["body/injectables/UserService.html",[3,0.215,4,0.173,8,0.132,13,0.033,20,1.351,28,0.351,30,2.53,41,1.373,49,0.748,51,2.774,52,2.275,53,1.658,63,0.693,71,2.242,72,2.35,76,1.29,77,0.898,78,0.509,79,1.29,81,2.774,84,0.055,94,1.6,102,1.404,108,1.184,115,2.113,191,0.505,193,0.731,194,0.4,199,1.145,200,2.35,203,2.113,204,1.6,206,1.6,207,1.6,213,0.215,231,1.526,236,1.351,326,1.748,365,0.018,366,0.023,367,0.018,394,1.243,460,1.6,491,3.047,500,2.275,513,1.748,525,2.35,605,1.916,657,2.35,735,3.043,813,3.043,820,2.495,936,3.831,937,3.962,942,2.752,946,3.962,962,3.446,1111,3.043,1112,5.591,1113,4.747,1114,3.646,1115,3.646,1116,3.646,1117,4.747,1118,5.591,1119,3.646,1120,3.646,1121,3.646,1122,3.646,1123,3.646,1124,3.646,1125,3.646,1126,3.646,1127,3.646,1128,4.747,1129,3.646,1130,3.646,1131,3.646,1132,3.646,1133,3.646,1134,3.646,1135,3.646,1136,3.646,1137,3.646,1138,3.646,1139,3.646,1140,2.647,1141,3.646,1142,3.646,1143,3.646,1144,3.646]],["title/components/WelcomeComponent.html",[0,0.222,362,0.905]],["body/components/WelcomeComponent.html",[0,0.425,1,1.081,2,1.735,3,0.24,4,0.263,6,1.637,7,1.637,8,0.184,10,0.993,12,2.948,13,0.033,17,1.637,18,2.344,19,1.505,23,1.505,24,2.872,25,3.373,28,0.391,29,1.141,63,0.503,77,0.991,78,0.391,84,0.061,95,1.175,96,0.993,108,0.911,113,1.081,162,2.948,191,0.339,194,0.446,213,0.24,254,2.156,338,3.219,344,1.081,345,2.049,346,2.049,347,1.637,348,1.637,349,2.049,350,1.637,351,1.175,352,1.985,353,1.385,354,1.637,355,1.175,356,1.637,357,1.175,358,1.637,359,1.175,360,1.175,361,1.175,362,1.683,363,1.637,364,1.637,365,0.02,366,0.025,367,0.02,483,2.673,1140,3.692,1145,3.391,1146,5.086,1147,5.086,1148,4.062]],["title/coverage.html",[1149,3.578]],["body/coverage.html",[0,0.443,1,1.003,8,0.137,9,3.458,13,0.033,27,0.846,53,1.184,55,1.808,59,1.808,61,1.655,78,0.363,84,0.085,86,1.09,113,1.003,193,0.94,351,1.09,355,1.09,357,1.09,359,1.09,360,1.09,361,1.09,362,1.09,365,0.019,366,0.024,367,0.019,401,2.431,403,2.431,426,2.431,428,2.129,429,3.08,430,3.148,432,1.286,471,2.431,472,3.148,474,3.522,475,3.522,478,1.982,551,3.148,570,4.532,575,3.148,636,3.777,643,3.109,644,3.148,766,2.431,770,3.148,795,3.127,797,3.148,819,2.431,820,1.982,822,3.148,832,3.148,859,3.148,874,1.982,875,3.148,878,2.431,911,3.148,912,3.148,930,3.148,932,3.458,933,3.148,942,2.186,973,2.431,974,3.148,980,3.148,1052,3.148,1082,4.478,1111,3.148,1145,3.148,1149,3.148,1150,3.771,1151,3.771,1152,3.771,1153,3.771,1154,3.771,1155,3.771,1156,3.771,1157,3.771,1158,5.663,1159,4.852,1160,4.852,1161,4.852,1162,4.852,1163,4.852,1164,3.771,1165,3.771,1166,5.364,1167,4.852,1168,3.771,1169,3.771,1170,3.771,1171,3.771]],["title/dependencies.html",[371,1.806,1172,2.606]],["body/dependencies.html",[8,0.164,13,0.033,68,2.016,194,0.498,199,1.424,211,1.68,341,3.292,353,1.546,365,0.022,366,0.027,367,0.022,371,2.174,373,2.383,390,2.86,394,1.546,408,3.785,409,3.785,414,3.507,415,3.292,507,2.923,518,1.99,521,3.292,765,3.785,1016,3.785,1173,6.443,1174,4.535,1175,5.441,1176,4.535,1177,4.535,1178,4.535,1179,4.535,1180,4.535,1181,4.535,1182,4.535,1183,4.535,1184,4.535,1185,4.535,1186,4.535,1187,4.535]],["title/index.html",[28,0.251,509,2.176,1188,2.606]],["body/index.html",[0,0.405,4,0.205,13,0.026,31,2.782,38,2.782,77,0.735,86,1.248,94,2.317,119,2.782,150,3.832,160,2.782,233,1.739,352,1.472,365,0.021,366,0.026,367,0.021,495,3.307,504,2.782,661,4.427,689,3.603,1140,3.133,1189,5.281,1190,4.316,1191,5.706,1192,5.706,1193,4.316,1194,4.316,1195,4.316,1196,6.098,1197,6.284,1198,4.316,1199,4.316,1200,4.316,1201,4.316,1202,4.316,1203,4.316,1204,5.706,1205,4.316,1206,4.316,1207,4.316,1208,4.316,1209,4.316,1210,4.316,1211,4.316,1212,4.316,1213,5.281,1214,5.281,1215,5.945,1216,5.281,1217,5.281,1218,4.316,1219,4.316,1220,4.316,1221,4.316,1222,5.706,1223,4.316,1224,4.316,1225,4.316]],["title/modules.html",[370,2.055]],["body/modules.html",[13,0.028,68,2.303,365,0.024,366,0.028,367,0.024,369,3.186,370,2.369,381,2.865,382,2.865,383,2.865,1226,6.216,1227,6.216,1228,6.216]],["title/overview.html",[1229,3.578]],["body/overview.html",[1,1.625,2,1.294,13,0.033,53,1.69,59,2.579,113,1.431,223,1.665,233,1.529,309,1.819,344,1.01,351,1.767,355,1.556,357,1.556,359,1.807,360,1.556,361,1.556,362,1.556,365,0.019,366,0.024,367,0.019,368,1.529,369,4.208,370,1.819,371,1.819,372,2.2,373,1.995,374,1.819,375,2.2,376,3.168,377,3.168,378,3.168,379,3.168,380,3.168,381,3.403,382,3.653,383,3.541,384,2.824,385,2.2,427,2.2,460,1.665,478,2.828,479,3.905,480,3.905,481,3.905,482,3.905,747,3.168,748,3.168,796,2.755,819,2.446,874,2.828,886,4.066,901,3.168,902,3.168,903,3.168,904,3.168,905,3.168,1100,3.168,1101,3.168,1229,3.168,1230,3.795,1231,3.795]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":636,"title":{},"body":{"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["0.0",{"_index":1029,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.10.3",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":1092,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.2",{"_index":1030,"title":{},"body":{"components/UserListComponent.html":{}}}],["0/15",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1021,"title":{},"body":{"components/UserListComponent.html":{}}}],["1",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["1.5px",{"_index":1069,"title":{},"body":{"components/UserListComponent.html":{}}}],["10",{"_index":1078,"title":{},"body":{"components/UserListComponent.html":{}}}],["10.0.14",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1194,"title":{},"body":{"index.html":{}}}],["10.1.1",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["10.2.4",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":570,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["1000",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["1000).pipe(map(t",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["10000",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["10px",{"_index":1072,"title":{},"body":{"components/UserListComponent.html":{}}}],["12000",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["14px",{"_index":1077,"title":{},"body":{"components/UserListComponent.html":{}}}],["15/15",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":567,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["2",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["2.0.2",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["2000",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["21/21",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["210px",{"_index":1079,"title":{},"body":{"components/UserListComponent.html":{}}}],["3",{"_index":887,"title":{},"body":{"injectables/QuestionService.html":{}}}],["3/3",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1089,"title":{},"body":{"components/UserListComponent.html":{}}}],["3000",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["337ab7",{"_index":1051,"title":{},"body":{"components/UserListComponent.html":{}}}],["340px",{"_index":1068,"title":{},"body":{"components/UserListComponent.html":{}}}],["4",{"_index":886,"title":{},"body":{"injectables/QuestionService.html":{},"overview.html":{}}}],["4.5.0",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":885,"title":{},"body":{"injectables/QuestionService.html":{}}}],["5/5",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1003,"title":{},"body":{"components/UserListComponent.html":{}}}],["500px",{"_index":569,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["56px",{"_index":1090,"title":{},"body":{"components/UserListComponent.html":{}}}],["5px",{"_index":1073,"title":{},"body":{"components/UserListComponent.html":{}}}],["6.5.5",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["6000",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["66",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1231,"title":{},"body":{"overview.html":{}}}],["75px",{"_index":1099,"title":{},"body":{"components/UserListComponent.html":{}}}],["8/10",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1082,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["85",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":574,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["9",{"_index":1230,"title":{},"body":{"overview.html":{}}}],["9/10",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["_http",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["_id",{"_index":823,"title":{},"body":{"interfaces/IUser.html":{}}}],["_sse",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["a.order",{"_index":893,"title":{},"body":{"injectables/QuestionService.html":{}}}],["absolute",{"_index":1087,"title":{},"body":{"components/UserListComponent.html":{}}}],["access",{"_index":799,"title":{},"body":{"guards/FormGuard.html":{}}}],["accessors",{"_index":555,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["according",{"_index":666,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["activatedroute",{"_index":941,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":811,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["actual_component",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["address",{"_index":824,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["alert('invalid",{"_index":979,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["alert('please",{"_index":814,"title":{},"body":{"guards/FormGuard.html":{}}}],["align",{"_index":1094,"title":{},"body":{"components/UserListComponent.html":{}}}],["angular",{"_index":1191,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1016,"title":{},"body":{"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":521,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":518,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/QuestionControlService.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":757,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{}}}],["angular/material/card",{"_index":761,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["angular/material/form",{"_index":753,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":759,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["angular/material/input",{"_index":755,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["angular/material/progress",{"_index":763,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/UserModule.html":{}}}],["angular/material/select",{"_index":910,"title":{},"body":{"modules/RFormModule.html":{}}}],["angular/material/snack",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["angular/material/table",{"_index":1011,"title":{},"body":{"components/UserListComponent.html":{},"modules/UserModule.html":{}}}],["angular/material/toolbar",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{}}}],["angular/platform",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"guards/FormGuard.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/service",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1012,"title":{},"body":{"components/UserListComponent.html":{}}}],["animate('225ms",{"_index":1026,"title":{},"body":{"components/UserListComponent.html":{}}}],["animations",{"_index":1017,"title":{},"body":{"components/UserListComponent.html":{}}}],["api/form",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["api/getall",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["app.component",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcomponent,countdownsnackbarcomponent,countdownservice",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["append",{"_index":779,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["application",{"_index":914,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["applyfilter",{"_index":991,"title":{},"body":{"components/UserListComponent.html":{}}}],["applyfilter(event",{"_index":994,"title":{},"body":{"components/UserListComponent.html":{}}}],["appmodule",{"_index":369,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":439,"title":{},"body":{"classes/AreaQuestion.html":{}}}],["areaquestion",{"_index":426,"title":{"classes/AreaQuestion.html":{}},"body":{"classes/AreaQuestion.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["array",{"_index":864,"title":{},"body":{"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{}}}],["artifacts",{"_index":1206,"title":{},"body":{"index.html":{}}}],["async",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["attach",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["automatically",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["avatar",{"_index":708,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["awesome",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":892,"title":{},"body":{"injectables/QuestionService.html":{}}}],["b.order",{"_index":894,"title":{},"body":{"injectables/QuestionService.html":{}}}],["b64imageurl",{"_index":952,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["back",{"_index":972,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["background",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["backup",{"_index":663,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["bag",{"_index":497,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{}}}],["bar",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/FileUploadModule.html":{}}}],["base",{"_index":459,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"classes/TextboxQuestion.html":{}}}],["base.ts",{"_index":832,"title":{},"body":{"classes/QuestionBase.html":{},"coverage.html":{}}}],["base.ts:11",{"_index":839,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:13",{"_index":836,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:15",{"_index":841,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:17",{"_index":834,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:3",{"_index":842,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:5",{"_index":837,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:7",{"_index":838,"title":{},"body":{"classes/QuestionBase.html":{}}}],["base.ts:9",{"_index":840,"title":{},"body":{"classes/QuestionBase.html":{}}}],["before",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"guards/FormGuard.html":{}}}],["behaviorsubject",{"_index":601,"title":{},"body":{"injectables/EventService.html":{}}}],["behaviorsubject(this.type",{"_index":599,"title":{},"body":{"injectables/EventService.html":{}}}],["below",{"_index":835,"title":{},"body":{"classes/QuestionBase.html":{}}}],["between",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["bezier(0.4",{"_index":1028,"title":{},"body":{"components/UserListComponent.html":{}}}],["bio",{"_index":825,"title":{},"body":{"interfaces/IUser.html":{}}}],["bio:string",{"_index":831,"title":{},"body":{"interfaces/IUser.html":{}}}],["biometry",{"_index":712,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["black",{"_index":1071,"title":{},"body":{"components/UserListComponent.html":{}}}],["blue",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["bold",{"_index":1081,"title":{},"body":{"components/UserListComponent.html":{}}}],["boolean",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{},"guards/UserDetailGuard.html":{}}}],["bootstrap",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":1062,"title":{},"body":{"components/UserListComponent.html":{}}}],["bottom",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["browse",{"_index":1228,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{}}}],["build",{"_index":661,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"index.html":{}}}],["busy",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/StateParameterService.html":{}}}],["button",{"_index":515,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["canactivate",{"_index":769,"title":{},"body":{"modules/FileUploadModule.html":{},"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"modules/UserModule.html":{}}}],["canactivate(next",{"_index":976,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["case",{"_index":451,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["catcherror",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror(this.handleerror",{"_index":1131,"title":{},"body":{"injectables/UserService.html":{}}}],["center",{"_index":1096,"title":{},"body":{"components/UserListComponent.html":{}}}],["change",{"_index":1202,"title":{},"body":{"index.html":{}}}],["check",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["checker",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["checker(val",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["choose",{"_index":450,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["chooses",{"_index":670,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["cin",{"_index":530,"title":{},"body":{"components/DynamicFormComponent.html":{},"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["cin','address','sexe",{"_index":998,"title":{},"body":{"components/UserListComponent.html":{}}}],["citizen",{"_index":499,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{}}}],["citizens",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["citizents",{"_index":1049,"title":{},"body":{"components/UserListComponent.html":{}}}],["class",{"_index":84,"title":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["classes",{"_index":427,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{},"overview.html":{}}}],["cli",{"_index":1192,"title":{},"body":{"index.html":{}}}],["client",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{}}}],["cluster_appmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_fileuploadmodule",{"_index":747,"title":{},"body":{"modules/FileUploadModule.html":{},"overview.html":{}}}],["cluster_fileuploadmodule_declarations",{"_index":748,"title":{},"body":{"modules/FileUploadModule.html":{},"overview.html":{}}}],["cluster_rformmodule",{"_index":901,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_rformmodule_bootstrap",{"_index":905,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_rformmodule_declarations",{"_index":902,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_rformmodule_dynamicformcomponent_providers",{"_index":903,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_rformmodule_rformcomponent_providers",{"_index":904,"title":{},"body":{"modules/RFormModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1100,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":1101,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":1140,"title":{},"body":{"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["collapsed",{"_index":1025,"title":{},"body":{"components/UserListComponent.html":{}}}],["color",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["commonmodule",{"_index":1107,"title":{},"body":{"modules/UserModule.html":{}}}],["communication",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["complete",{"_index":815,"title":{},"body":{"guards/FormGuard.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"overview.html":{}}}],["connected",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["connecting",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["connection",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["connectivity",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.error(errormessage",{"_index":1143,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"access",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.log(\"back",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.log(\"closing",{"_index":640,"title":{},"body":{"injectables/EventService.html":{}}}],["console.log(\"opening",{"_index":620,"title":{},"body":{"injectables/EventService.html":{}}}],["console.log(\"reconnecting",{"_index":637,"title":{},"body":{"injectables/EventService.html":{}}}],["console.log(\"still",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.log(event.body.message",{"_index":738,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["console.log(msg",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["console.log(this.cookieservice.getall",{"_index":532,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["const",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["construct",{"_index":660,"title":{},"body":{"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["constructor(/*private",{"_index":522,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["constructor(_http",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(countdown",{"_index":465,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["constructor(domsanitizer",{"_index":992,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(http",{"_index":772,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["constructor(options",{"_index":833,"title":{},"body":{"classes/QuestionBase.html":{}}}],["constructor(private",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":940,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["constructor(router",{"_index":657,"title":{},"body":{"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["constructor(service",{"_index":895,"title":{},"body":{"components/RFormComponent.html":{}}}],["constructor(stservice",{"_index":489,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["constructs",{"_index":493,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{}}}],["containing",{"_index":674,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["content",{"_index":1098,"title":{},"body":{"components/UserListComponent.html":{}}}],["control.service",{"_index":520,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["control.service.ts",{"_index":859,"title":{},"body":{"injectables/QuestionControlService.html":{},"coverage.html":{}}}],["control.service.ts:13",{"_index":863,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:7",{"_index":861,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["controltype",{"_index":433,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["cookie",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{}}}],["cookieservice,*/private",{"_index":523,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["countdown",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["countdownservice",{"_index":59,"title":{"injectables/CountdownService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countdownsnackbarcomponent",{"_index":113,"title":{"components/CountdownSnackbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1149,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createonline",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["creates",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["cross",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["cubic",{"_index":1027,"title":{},"body":{"components/UserListComponent.html":{}}}],["current",{"_index":678,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["currentfile",{"_index":650,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["custom",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["danger",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["data",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/UserListComponent.html":{}}}],["datasource",{"_index":983,"title":{},"body":{"components/UserListComponent.html":{}}}],["date.now",{"_index":528,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["declarations",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":467,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["default",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["define",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["defined",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["dependencies",{"_index":371,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"components/WelcomeComponent.html":{}}}],["destroy",{"_index":485,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["detail",{"_index":955,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["detail.component",{"_index":1104,"title":{},"body":{"modules/UserModule.html":{}}}],["detail.component.css",{"_index":934,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.html",{"_index":935,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts",{"_index":933,"title":{},"body":{"components/UserDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:13",{"_index":956,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:14",{"_index":954,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:15",{"_index":944,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":948,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":947,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":951,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":949,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.guard",{"_index":1105,"title":{},"body":{"modules/UserModule.html":{}}}],["detail.guard.ts",{"_index":974,"title":{},"body":{"guards/UserDetailGuard.html":{},"coverage.html":{}}}],["detail.guard.ts:12",{"_index":977,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["detail.guard.ts:8",{"_index":975,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["dev",{"_index":1199,"title":{},"body":{"index.html":{}}}],["development",{"_index":1195,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1067,"title":{},"body":{"components/UserListComponent.html":{}}}],["difference",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["directive",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["directives",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1205,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1209,"title":{},"body":{"index.html":{}}}],["disappear",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["disconnected",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["display",{"_index":1065,"title":{},"body":{"components/UserListComponent.html":{}}}],["displayedcolumns",{"_index":984,"title":{},"body":{"components/UserListComponent.html":{}}}],["dist",{"_index":1208,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["domsanitizer",{"_index":943,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["domsanitizer,private",{"_index":1031,"title":{},"body":{"components/UserListComponent.html":{}}}],["don't",{"_index":801,"title":{},"body":{"guards/FormGuard.html":{}}}],["done",{"_index":684,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["dossier_\"+obj['cin",{"_index":538,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["dropdown",{"_index":452,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["dropdown.ts",{"_index":472,"title":{},"body":{"classes/DropdownQuestion.html":{},"coverage.html":{}}}],["dropdown.ts:4",{"_index":473,"title":{},"body":{"classes/DropdownQuestion.html":{}}}],["dropdownquestion",{"_index":471,"title":{"classes/DropdownQuestion.html":{}},"body":{"classes/DropdownQuestion.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["duration",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["dynamic",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"dependencies.html":{}}}],["dynamicform",{"_index":494,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["dynamicformcomponent",{"_index":351,"title":{"components/DynamicFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicformquestioncomponent",{"_index":355,"title":{"components/DynamicFormQuestionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["e",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["e2e",{"_index":1219,"title":{},"body":{"index.html":{}}}],["each",{"_index":552,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{}}}],["efefef",{"_index":1061,"title":{},"body":{"components/UserListComponent.html":{}}}],["element",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["element.address",{"_index":1045,"title":{},"body":{"components/UserListComponent.html":{}}}],["element.cin",{"_index":1044,"title":{},"body":{"components/UserListComponent.html":{}}}],["element.firstname",{"_index":1042,"title":{},"body":{"components/UserListComponent.html":{}}}],["element.lastname",{"_index":1043,"title":{},"body":{"components/UserListComponent.html":{}}}],["element.sexe",{"_index":1047,"title":{},"body":{"components/UserListComponent.html":{}}}],["emit",{"_index":501,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/EventService.html":{}}}],["emits",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["emitted",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["emitter",{"_index":502,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/StateParameterService.html":{}}}],["emitting",{"_index":587,"title":{},"body":{"injectables/EventService.html":{}}}],["enabled",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["entrycomponents",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.production",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["err.error",{"_index":1136,"title":{},"body":{"injectables/UserService.html":{}}}],["err.error.message",{"_index":1139,"title":{},"body":{"injectables/UserService.html":{}}}],["err.message",{"_index":1142,"title":{},"body":{"injectables/UserService.html":{}}}],["err.status",{"_index":1141,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":962,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["errorevent",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{}}}],["errormessage",{"_index":936,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["errors",{"_index":589,"title":{},"body":{"injectables/EventService.html":{}}}],["errsnackbar",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["errsnackbar(msg",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["event",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/StateParameterService.html":{},"components/UserListComponent.html":{}}}],["event.body.message",{"_index":737,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.loaded",{"_index":733,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.target",{"_index":716,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UserListComponent.html":{}}}],["event.target.files",{"_index":715,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.total",{"_index":734,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.type",{"_index":730,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["eventemitter",{"_index":916,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["eventemitter,inject",{"_index":696,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["events",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["eventservice",{"_index":61,"title":{"injectables/EventService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"coverage.html":{}}}],["eventservice.local",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["eventservice.server",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["eventsource",{"_index":593,"title":{},"body":{"injectables/EventService.html":{}}}],["eventsource(host+'/api/state",{"_index":617,"title":{},"body":{"injectables/EventService.html":{}}}],["evs",{"_index":577,"title":{},"body":{"injectables/EventService.html":{}}}],["ex",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["example",{"_index":453,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{},"components/UserListComponent.html":{}}}],["execute",{"_index":1216,"title":{},"body":{"index.html":{}}}],["execution",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["exists",{"_index":805,"title":{},"body":{"guards/FormGuard.html":{}}}],["expanded",{"_index":1057,"title":{},"body":{"components/UserListComponent.html":{}}}],["expandedelement",{"_index":985,"title":{},"body":{"components/UserListComponent.html":{}}}],["export",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["exports",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["extends",{"_index":431,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["f",{"_index":883,"title":{},"body":{"injectables/QuestionService.html":{}}}],["false",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["fb",{"_index":651,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["field",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["fields",{"_index":496,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["file,file.name",{"_index":787,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["file,id:string,hostname:string,type:string",{"_index":784,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filelist",{"_index":687,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["filereader",{"_index":721,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["files",{"_index":689,"title":{},"body":{"components/FileUploadComponent.html":{},"index.html":{}}}],["fileuploadcomponent",{"_index":357,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadmodule",{"_index":381,"title":{"modules/FileUploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules.html":{},"overview.html":{}}}],["fileuploadservice",{"_index":55,"title":{"injectables/FileUploadService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"coverage.html":{}}}],["filled",{"_index":921,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["filter",{"_index":1041,"title":{},"body":{"components/UserListComponent.html":{}}}],["filtervalue",{"_index":1032,"title":{},"body":{"components/UserListComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":1035,"title":{},"body":{"components/UserListComponent.html":{}}}],["fingerprint",{"_index":691,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{}}}],["first",{"_index":888,"title":{},"body":{"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["first,switchmap",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["firstname",{"_index":826,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserListComponent.html":{}}}],["flag",{"_index":1211,"title":{},"body":{"index.html":{}}}],["flex",{"_index":1066,"title":{},"body":{"components/UserListComponent.html":{}}}],["following",{"_index":549,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["font",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["foo",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["form",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["form'},{'name",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["form.component",{"_index":907,"title":{},"body":{"modules/RFormModule.html":{}}}],["form.component.html",{"_index":484,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts",{"_index":475,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/RFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:18",{"_index":896,"title":{},"body":{"components/RFormComponent.html":{}}}],["form.component.ts:22",{"_index":506,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts:24",{"_index":516,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts:25",{"_index":492,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts:36",{"_index":508,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.component.ts:43",{"_index":511,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["form.css",{"_index":553,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["form.guard",{"_index":767,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["form.module",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["form.module.ts",{"_index":906,"title":{},"body":{"modules/RFormModule.html":{}}}],["form/bio",{"_index":647,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{}}}],["form/dynamic",{"_index":474,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"coverage.html":{}}}],["form/pic",{"_index":646,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{}}}],["form/question",{"_index":429,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["form/question.service.ts",{"_index":875,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["form/question.service.ts:13",{"_index":877,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/r",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"coverage.html":{}}}],["form:json",{"_index":928,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["formbuilder",{"_index":658,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formbuilder,private",{"_index":705,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formcontrol",{"_index":865,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol(question.value",{"_index":871,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formdata",{"_index":780,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["formdata.append('_id',id",{"_index":785,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["formdata.append('file",{"_index":786,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["formgroup",{"_index":477,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"injectables/QuestionControlService.html":{}}}],["formgroup(group",{"_index":873,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formguard",{"_index":766,"title":{"guards/FormGuard.html":{}},"body":{"modules/FileUploadModule.html":{},"guards/FormGuard.html":{},"coverage.html":{}}}],["fromevent",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["fromevent(window",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["full",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormQuestionComponent.html":{}}}],["function",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{}}}],["function(e",{"_index":619,"title":{},"body":{"injectables/EventService.html":{}}}],["further",{"_index":1221,"title":{},"body":{"index.html":{}}}],["gender",{"_index":880,"title":{},"body":{"injectables/QuestionService.html":{}}}],["gendre",{"_index":1046,"title":{},"body":{"components/UserListComponent.html":{}}}],["generate",{"_index":1204,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1190,"title":{},"body":{"index.html":{}}}],["genre",{"_index":970,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["getisvalid",{"_index":559,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["getquestions",{"_index":876,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getting",{"_index":509,"title":{"index.html":{}},"body":{"components/DynamicFormComponent.html":{}}}],["getupdates",{"_index":580,"title":{},"body":{"injectables/EventService.html":{}}}],["getupdates(host",{"_index":584,"title":{},"body":{"injectables/EventService.html":{}}}],["getupdates(host=eventservice.server",{"_index":609,"title":{},"body":{"injectables/EventService.html":{}}}],["getuser",{"_index":937,"title":{},"body":{"components/UserDetailComponent.html":{},"injectables/UserService.html":{}}}],["getuser(id",{"_index":946,"title":{},"body":{"components/UserDetailComponent.html":{},"injectables/UserService.html":{}}}],["getusers",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":1224,"title":{},"body":{"index.html":{}}}],["grant",{"_index":807,"title":{},"body":{"guards/FormGuard.html":{}}}],["group",{"_index":867,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[question.key",{"_index":869,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["guard",{"_index":795,"title":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}},"body":{"guards/FormGuard.html":{},"coverage.html":{}}}],["guards",{"_index":796,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{},"overview.html":{}}}],["handle",{"_index":476,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["handleerror",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{}}}],["handleerror(err",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["handling",{"_index":588,"title":{},"body":{"injectables/EventService.html":{}}}],["height",{"_index":1055,"title":{},"body":{"components/UserListComponent.html":{}}}],["help",{"_index":1222,"title":{},"body":{"index.html":{}}}],["helps",{"_index":576,"title":{},"body":{"injectables/EventService.html":{}}}],["hidden",{"_index":1064,"title":{},"body":{"components/UserListComponent.html":{}}}],["hits",{"_index":514,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["home",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["home/welcome.component",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["horizontal",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["horizontalposition",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["host",{"_index":590,"title":{},"body":{"injectables/EventService.html":{},"injectables/StateParameterService.html":{}}}],["host:string",{"_index":927,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["host==eventservice.server",{"_index":628,"title":{},"body":{"injectables/EventService.html":{}}}],["hostname",{"_index":775,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["hostname+'/api/upload/'+type",{"_index":790,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["html",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["htmlinputelement).files[0",{"_index":717,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["htmlinputelement).value",{"_index":1033,"title":{},"body":{"components/UserListComponent.html":{}}}],["http",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":597,"title":{},"body":{"injectables/EventService.html":{}}}],["http://localhost:3003",{"_index":595,"title":{},"body":{"injectables/EventService.html":{}}}],["http://localhost:4200",{"_index":1200,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"injectables/UserService.html":{}}}],["httpclient,private",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["httpevent,httpheaders",{"_index":783,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["httpeventtype",{"_index":699,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpeventtype.uploadprogress",{"_index":731,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httprequest",{"_index":782,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["httprequest('post",{"_index":789,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["httpresponse",{"_index":700,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["id",{"_index":500,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["if(!this.stservice.host",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["if(!this.test",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["if(host==eventservice.server",{"_index":632,"title":{},"body":{"injectables/EventService.html":{}}}],["if(k==2",{"_index":631,"title":{},"body":{"injectables/EventService.html":{}}}],["if(this.evs.url==eventservice.server+\"/api/state",{"_index":638,"title":{},"body":{"injectables/EventService.html":{}}}],["if(this.stservice.host==eventservice.local",{"_index":543,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["image",{"_index":664,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"components/UserListComponent.html":{}}}],["imagemargin",{"_index":986,"title":{},"body":{"components/UserListComponent.html":{}}}],["imageurl",{"_index":652,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["imagewidth",{"_index":987,"title":{},"body":{"components/UserListComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["import",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["imports",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["incomplete",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["informations",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{}}}],["inherited",{"_index":441,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["initial",{"_index":612,"title":{},"body":{"injectables/EventService.html":{}}}],["initiate",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["inject",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["injectable",{"_index":193,"title":{"injectables/CountdownService.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":460,"title":{},"body":{"injectables/CountdownService.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":507,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"modules/FileUploadModule.html":{},"dependencies.html":{}}}],["input.value",{"_index":1048,"title":{},"body":{"components/UserListComponent.html":{}}}],["inputs",{"_index":487,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{}}}],["inside",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/StateParameterService.html":{}}}],["instance",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/RFormComponent.html":{}}}],["instanceof",{"_index":735,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/UserService.html":{}}}],["interface",{"_index":819,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":821,"title":{},"body":{"interfaces/IUser.html":{}}}],["internet",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["interval",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["interval(this.val",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["isloadingresults",{"_index":988,"title":{},"body":{"components/UserListComponent.html":{}}}],["isonline",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["isvalid",{"_index":556,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["items",{"_index":1095,"title":{},"body":{"components/UserListComponent.html":{}}}],["iuser",{"_index":820,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["json",{"_index":793,"title":{},"body":{"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["json.stringify(this.form.getrawvalue",{"_index":534,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["justify",{"_index":1097,"title":{},"body":{"components/UserListComponent.html":{}}}],["k",{"_index":613,"title":{},"body":{"injectables/EventService.html":{}}}],["k=0",{"_index":624,"title":{},"body":{"injectables/EventService.html":{}}}],["k==0",{"_index":622,"title":{},"body":{"injectables/EventService.html":{}}}],["karma",{"_index":1218,"title":{},"body":{"index.html":{}}}],["key",{"_index":434,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["know",{"_index":604,"title":{},"body":{"injectables/EventService.html":{}}}],["label",{"_index":435,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["large",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/UserListComponent.html":{}}}],["last",{"_index":889,"title":{},"body":{"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["lastname",{"_index":827,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{},"components/UserListComponent.html":{}}}],["left",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["legend",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"components/WelcomeComponent.html":{},"overview.html":{}}}],["lighter",{"_index":1075,"title":{},"body":{"components/UserListComponent.html":{}}}],["line",{"_index":1083,"title":{},"body":{"components/UserListComponent.html":{}}}],["link",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":1006,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component",{"_index":1103,"title":{},"body":{"modules/UserModule.html":{}}}],["list.component.css",{"_index":981,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.html",{"_index":982,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":980,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:22",{"_index":1007,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:23",{"_index":1004,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:24",{"_index":1002,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:25",{"_index":1008,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:26",{"_index":1000,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:27",{"_index":1001,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:28",{"_index":1005,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:30",{"_index":1009,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:31",{"_index":999,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:32",{"_index":993,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:36",{"_index":995,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:41",{"_index":997,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:47",{"_index":996,"title":{},"body":{"components/UserListComponent.html":{}}}],["listening",{"_index":586,"title":{},"body":{"injectables/EventService.html":{}}}],["literal",{"_index":448,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["loading",{"_index":1085,"title":{},"body":{"components/UserListComponent.html":{}}}],["loc",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/QuestionService.html":{}}}],["loc.ts",{"_index":430,"title":{},"body":{"classes/AreaQuestion.html":{},"coverage.html":{}}}],["loc.ts:4",{"_index":440,"title":{},"body":{"classes/AreaQuestion.html":{}}}],["local",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["local=\"http://localhost:3003",{"_index":607,"title":{},"body":{"injectables/EventService.html":{}}}],["locationstrategy",{"_index":480,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/RFormModule.html":{},"overview.html":{}}}],["lock",{"_index":917,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["lost",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["m",{"_index":881,"title":{},"body":{"injectables/QuestionService.html":{}}}],["main",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["man",{"_index":882,"title":{},"body":{"injectables/QuestionService.html":{}}}],["map",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/UserService.html":{}}}],["map((users",{"_index":1133,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":1076,"title":{},"body":{"components/UserListComponent.html":{}}}],["mat_snack_bar_data",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["matbuttonmodule",{"_index":756,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{}}}],["matcardmodule",{"_index":760,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["matching",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":765,"title":{},"body":{"modules/FileUploadModule.html":{},"dependencies.html":{}}}],["materialfileinputmodule",{"_index":764,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["matformfieldmodule",{"_index":752,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["math.floor(time",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["math.round(100",{"_index":732,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["maticonmodule",{"_index":758,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["matinputmodule",{"_index":754,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["matprogressbarmodule",{"_index":762,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["matprogressspinnermodule",{"_index":1108,"title":{},"body":{"modules/UserModule.html":{}}}],["matselectmodule",{"_index":909,"title":{},"body":{"modules/RFormModule.html":{}}}],["matsnackbar",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["matsnackbarhorizontalposition",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["matsnackbarmodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbarref",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["matsnackbarverticalposition",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["mattabledatasource",{"_index":1010,"title":{},"body":{"components/UserListComponent.html":{}}}],["mattabledatasource(this.users",{"_index":1040,"title":{},"body":{"components/UserListComponent.html":{}}}],["mattablemodule",{"_index":1106,"title":{},"body":{"modules/UserModule.html":{}}}],["mattoolbarmodule",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{}}}],["max",{"_index":568,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["merge",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["message",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"injectables/UserService.html":{}}}],["message:string",{"_index":701,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["metadata",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["methods",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["milliseconds",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["min",{"_index":565,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["minheight",{"_index":1022,"title":{},"body":{"components/UserListComponent.html":{}}}],["mode",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["modes",{"_index":919,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["module",{"_index":368,"title":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":370,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1223,"title":{},"body":{"index.html":{}}}],["msg",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["n",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["nav",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":504,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"index.html":{}}}],["navigationstart",{"_index":698,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["need",{"_index":913,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["new",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"components/UserListComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":694,"title":{},"body":{"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["next.url[1].path",{"_index":978,"title":{},"body":{"guards/UserDetailGuard.html":{}}}],["ng",{"_index":1197,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["ngondestroy",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["ngoninit",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["ngx",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{},"modules/FileUploadModule.html":{},"dependencies.html":{}}}],["normal",{"_index":1084,"title":{},"body":{"components/UserListComponent.html":{}}}],["now",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["now{{data",{"_index":470,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["null",{"_index":639,"title":{},"body":{"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/UserListComponent.html":{}}}],["number",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/FileUploadComponent.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{},"components/UserListComponent.html":{}}}],["numbers",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["nx",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["obj",{"_index":535,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["obj).pipe(takeuntil(this.destroy$)).subscribe(data",{"_index":540,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["obj[\"_id",{"_index":537,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["object",{"_index":503,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{}}}],["objects",{"_index":510,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{}}}],["observable",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["observable((sub",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["observe",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["observer",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["occurred",{"_index":1138,"title":{},"body":{"injectables/UserService.html":{}}}],["of(questions.sort((a",{"_index":891,"title":{},"body":{"injectables/QuestionService.html":{}}}],["offline",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["offline').pipe(map",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["ok",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["old",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["oldloc",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["onback",{"_index":938,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["ondestroy",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["one",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/StateParameterService.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["oninit,inject",{"_index":517,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["online",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/StateParameterService.html":{}}}],["online').pipe(map",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["onsubmit",{"_index":486,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["open",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["opened",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["opens",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["opensnackbar",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["opensnackbar(msg",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["opt.value",{"_index":564,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["optional",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["options",{"_index":436,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["options.controltype",{"_index":854,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.key",{"_index":846,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.label",{"_index":848,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.options",{"_index":858,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.order",{"_index":852,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.required",{"_index":850,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.type",{"_index":856,"title":{},"body":{"classes/QuestionBase.html":{}}}],["options.value",{"_index":844,"title":{},"body":{"classes/QuestionBase.html":{}}}],["order",{"_index":437,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["out",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":1063,"title":{},"body":{"components/UserListComponent.html":{}}}],["overview",{"_index":1229,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p._id",{"_index":1135,"title":{},"body":{"injectables/UserService.html":{}}}],["package",{"_index":1172,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":572,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{}}}],["page",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/WelcomeComponent.html":{}}}],["pagetitle",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["pagetitle:string",{"_index":703,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["panelclass",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["param",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{}}}],["parameter.service",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["parameter.service.ts",{"_index":912,"title":{},"body":{"injectables/StateParameterService.html":{},"coverage.html":{}}}],["parameter.service.ts:10",{"_index":924,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameter.service.ts:12",{"_index":922,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameter.service.ts:14",{"_index":920,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameter.service.ts:16",{"_index":925,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameter.service.ts:18",{"_index":915,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["path",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["pathlocationstrategy",{"_index":482,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/RFormModule.html":{},"overview.html":{}}}],["pathmatch",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["personal",{"_index":547,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["photo",{"_index":676,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["photos",{"_index":817,"title":{},"body":{"guards/FormGuard.html":{}}}],["pic",{"_index":828,"title":{},"body":{"interfaces/IUser.html":{},"injectables/StateParameterService.html":{},"components/UserListComponent.html":{}}}],["pic\").subscribe",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["pic:file",{"_index":929,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["picture",{"_index":926,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["pipe",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["pipe(first",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["placeholder",{"_index":447,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["pm",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["portrait",{"_index":690,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["position",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["post",{"_index":777,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["postimg",{"_index":771,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["postimg(file",{"_index":774,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["preview",{"_index":671,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["previously",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["print",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["private",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/UserDetailComponent.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1210,"title":{},"body":{"index.html":{}}}],["production",{"_index":1212,"title":{},"body":{"index.html":{}}}],["progress",{"_index":653,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["prohibit",{"_index":798,"title":{},"body":{"guards/FormGuard.html":{}}}],["project",{"_index":1189,"title":{},"body":{"index.html":{}}}],["promise",{"_index":809,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["protractor",{"_index":1220,"title":{},"body":{"index.html":{}}}],["provide",{"_index":479,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/RFormModule.html":{},"overview.html":{}}}],["providedin",{"_index":605,"title":{},"body":{"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"components/DynamicFormComponent.html":{},"modules/FileUploadModule.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/WelcomeComponent.html":{}}}],["qcs",{"_index":490,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["question",{"_index":443,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"classes/TextboxQuestion.html":{}}}],["question'},{'name",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["question.component",{"_index":908,"title":{},"body":{"modules/RFormModule.html":{}}}],["question.component.html",{"_index":554,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.component.ts",{"_index":551,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"coverage.html":{}}}],["question.component.ts:13",{"_index":558,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.component.ts:15",{"_index":557,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.component.ts:17",{"_index":560,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.label",{"_index":563,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["question.required",{"_index":870,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.service",{"_index":898,"title":{},"body":{"components/RFormComponent.html":{}}}],["questionbase",{"_index":432,"title":{"classes/QuestionBase.html":{}},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["questionbase:11",{"_index":454,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:13",{"_index":442,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:15",{"_index":456,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:17",{"_index":449,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:3",{"_index":458,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:5",{"_index":445,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:7",{"_index":446,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questionbase:9",{"_index":455,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/TextboxQuestion.html":{}}}],["questioncontrolservice",{"_index":478,"title":{"injectables/QuestionControlService.html":{}},"body":{"components/DynamicFormComponent.html":{},"injectables/QuestionControlService.html":{},"modules/RFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["questioncontrolservice,private",{"_index":524,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["questions",{"_index":488,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{}}}],["questions.foreach(question",{"_index":868,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["questionservice",{"_index":874,"title":{"injectables/QuestionService.html":{}},"body":{"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["r",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"modules/RFormModule.html":{}}}],["reactive",{"_index":662,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reactiveformsmodule",{"_index":750,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["reader",{"_index":720,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reader.onload",{"_index":722,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reader.readasdataurl(file",{"_index":725,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reader.result",{"_index":724,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["readme",{"_index":1225,"title":{},"body":{"index.html":{}}}],["received",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["redirectto",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["refers",{"_index":781,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["reload",{"_index":1201,"title":{},"body":{"index.html":{}}}],["remote",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["reportprogress",{"_index":791,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["req",{"_index":788,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["request",{"_index":778,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["required",{"_index":438,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["reset",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resp.status",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["response",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["responsetype",{"_index":792,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["restore",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["result",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["retreive",{"_index":804,"title":{},"body":{"guards/FormGuard.html":{}}}],["retreived",{"_index":897,"title":{},"body":{"components/RFormComponent.html":{}}}],["retrieved",{"_index":802,"title":{},"body":{"guards/FormGuard.html":{}}}],["retry",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["retrying",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["return",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["returnasobservable",{"_index":581,"title":{},"body":{"injectables/EventService.html":{}}}],["returned",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":808,"title":{},"body":{"guards/FormGuard.html":{}}}],["returns",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["rformcomponent",{"_index":359,"title":{"components/RFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rformmodule",{"_index":382,"title":{"modules/RFormModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RFormModule.html":{},"modules.html":{},"overview.html":{}}}],["rgba(0",{"_index":1091,"title":{},"body":{"components/UserListComponent.html":{}}}],["right",{"_index":573,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["route",{"_index":945,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["router",{"_index":491,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{}}}],["router,private",{"_index":525,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["routermodule.forchild",{"_index":768,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{}}}],["routermodule.forroot",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":812,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["row",{"_index":1054,"title":{},"body":{"components/UserListComponent.html":{}}}],["row):active",{"_index":1060,"title":{},"body":{"components/UserListComponent.html":{}}}],["row):hover",{"_index":1058,"title":{},"body":{"components/UserListComponent.html":{}}}],["row:not(.example",{"_index":1056,"title":{},"body":{"components/UserListComponent.html":{}}}],["run",{"_index":1196,"title":{},"body":{"index.html":{}}}],["running",{"_index":1213,"title":{},"body":{"index.html":{}}}],["rx",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["rxjs",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"guards/UserDetailGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/UserService.html":{}}}],["saferesourceurl",{"_index":953,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["sanatizeurl",{"_index":939,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["sanatizeurl(b64imageurl",{"_index":950,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["save",{"_index":548,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["saved",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{}}}],["scaffolding",{"_index":1203,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["select",{"_index":746,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selected",{"_index":679,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selectedfiles",{"_index":654,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selectfile",{"_index":656,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selectfile(event",{"_index":667,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["sent",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{}}}],["sequential",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["serve",{"_index":1198,"title":{},"body":{"index.html":{}}}],["server",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["server=\"http://localhost:3000",{"_index":606,"title":{},"body":{"injectables/EventService.html":{}}}],["service",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"components/RFormComponent.html":{},"dependencies.html":{}}}],["service.getquestions",{"_index":900,"title":{},"body":{"components/RFormComponent.html":{}}}],["serviceworkermodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["settimeout",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["sexe",{"_index":829,"title":{},"body":{"interfaces/IUser.html":{},"injectables/QuestionService.html":{}}}],["sexe:string",{"_index":830,"title":{},"body":{"interfaces/IUser.html":{}}}],["shade",{"_index":1086,"title":{},"body":{"components/UserListComponent.html":{}}}],["shared/event.service",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{}}}],["shared/st",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["show",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/QuestionService.html":{},"components/UserListComponent.html":{}}}],["showimage",{"_index":989,"title":{},"body":{"components/UserListComponent.html":{}}}],["shown",{"_index":672,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["size",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["snack",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["snackbar",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["snackbar',1000",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["snackbar'},{'name",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["snackbarref",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["snval",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["solid",{"_index":1070,"title":{},"body":{"components/UserListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["sources",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["specified",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["spinner",{"_index":1109,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:100",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:104",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:108",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:112",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:153",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":463,"title":{},"body":{"injectables/CountdownService.html":{}}}],["src/app/app.component.ts:21",{"_index":464,"title":{},"body":{"injectables/CountdownService.html":{}}}],["src/app/app.component.ts:213",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:222",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:246",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:260",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":461,"title":{},"body":{"injectables/CountdownService.html":{}}}],["src/app/app.component.ts:286",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:299",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:333",{"_index":466,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["src/app/app.component.ts:340",{"_index":468,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["src/app/app.component.ts:341",{"_index":469,"title":{},"body":{"components/CountdownSnackbarComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":462,"title":{},"body":{"injectables/CountdownService.html":{}}}],["src/app/app.component.ts:65",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:69",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:74",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:92",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:96",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/file",{"_index":643,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"coverage.html":{}}}],["src/app/home/welcome.component.ts",{"_index":1145,"title":{},"body":{"components/WelcomeComponent.html":{},"coverage.html":{}}}],["src/app/home/welcome.component.ts:10",{"_index":1148,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["src/app/r",{"_index":428,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"modules/RFormModule.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["src/app/shared/event.service.ts",{"_index":575,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/shared/event.service.ts:12",{"_index":598,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:14",{"_index":583,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:19",{"_index":594,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:23",{"_index":603,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:27",{"_index":600,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:31",{"_index":591,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:37",{"_index":585,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/event.service.ts:81",{"_index":592,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/shared/st",{"_index":911,"title":{},"body":{"injectables/StateParameterService.html":{},"coverage.html":{}}}],["src/app/users/user",{"_index":932,"title":{},"body":{"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/users/user.module.ts",{"_index":1102,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/users/user.service.ts",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/users/user.service.ts:13",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/user.service.ts:17",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/user.service.ts:27",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/user.service.ts:34",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/user.ts",{"_index":822,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["start",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{}}}],["start(time",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["start+60000,'/',this.hostname,true",{"_index":545,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["started",{"_index":1188,"title":{"index.html":{}},"body":{}}],["starttimer",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["state",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["state('collapsed",{"_index":1019,"title":{},"body":{"components/UserListComponent.html":{}}}],["state('expanded",{"_index":1023,"title":{},"body":{"components/UserListComponent.html":{}}}],["statements",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["stateparameterservice",{"_index":53,"title":{"injectables/StateParameterService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["stateparameterservice,cookieservice",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["static",{"_index":578,"title":{},"body":{"injectables/EventService.html":{}}}],["status",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["steps",{"_index":800,"title":{},"body":{"guards/FormGuard.html":{}}}],["stops",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["stopupdates",{"_index":582,"title":{},"body":{"injectables/EventService.html":{}}}],["store",{"_index":498,"title":{},"body":{"components/DynamicFormComponent.html":{},"injectables/StateParameterService.html":{}}}],["stored",{"_index":1207,"title":{},"body":{"index.html":{}}}],["string",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{}}}],["stservice",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["stservice:stateparameterservice",{"_index":813,"title":{},"body":{"guards/FormGuard.html":{},"injectables/UserService.html":{}}}],["style",{"_index":1013,"title":{},"body":{"components/UserListComponent.html":{}}}],["style({height",{"_index":1020,"title":{},"body":{"components/UserListComponent.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["sub",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["sub.complete",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["sub.next(navigator.online",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["subj",{"_index":579,"title":{},"body":{"injectables/EventService.html":{}}}],["subject",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{}}}],["subject,timer",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["subject.next(\"r",{"_index":634,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next(\"rx",{"_index":633,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next('e",{"_index":630,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next('ex",{"_index":629,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next(e[\"data",{"_index":626,"title":{},"body":{"injectables/EventService.html":{}}}],["subject.next(e[\"data\"]+'x",{"_index":623,"title":{},"body":{"injectables/EventService.html":{}}}],["submit",{"_index":512,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["subscribe",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/EventService.html":{}}}],["subscribe(resp",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["subscription",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["subscriptions",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["succefully",{"_index":683,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["success",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["successfully",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{}}}],["support",{"_index":1226,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1227,"title":{},"body":{"modules.html":{}}}],["switching",{"_index":918,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["symbol",{"_index":1080,"title":{},"body":{"components/UserListComponent.html":{}}}],["t",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["table",{"_index":1052,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["take(seconds",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["takes",{"_index":923,"title":{},"body":{"injectables/StateParameterService.html":{}}}],["takeuntil",{"_index":519,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["tap",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["tap(data",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["target",{"_index":673,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["td",{"_index":571,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{}}}],["template",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["templateurl",{"_index":483,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["test",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["tests",{"_index":1215,"title":{},"body":{"index.html":{}}}],["text",{"_index":890,"title":{},"body":{"injectables/QuestionService.html":{}}}],["text,number",{"_index":457,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["textbox",{"_index":879,"title":{},"body":{"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{}}}],["textbox,area,dropdown,checkbox",{"_index":444,"title":{},"body":{"classes/AreaQuestion.html":{},"classes/DropdownQuestion.html":{},"classes/QuestionBase.html":{},"classes/TextboxQuestion.html":{}}}],["textbox.ts",{"_index":930,"title":{},"body":{"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["textbox.ts:4",{"_index":931,"title":{},"body":{"classes/TextboxQuestion.html":{}}}],["textboxquestion",{"_index":878,"title":{"classes/TextboxQuestion.html":{}},"body":{"injectables/QuestionService.html":{},"classes/TextboxQuestion.html":{},"coverage.html":{}}}],["thead",{"_index":1050,"title":{},"body":{"components/UserListComponent.html":{}}}],["this._http.get(eventservice.local+\"/api/db",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._http.post(this.stservice.host",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._sse.evs.close",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._sse.getupdates",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._sse.returnasobservable().subscribe(msg",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this._sse.stopupdates",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.check",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.check.unsubscribe",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.checker",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.checker(this.val",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.controltype",{"_index":853,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.cookieservice.set",{"_index":529,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.countdown.start(duration",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.countdown.timeleft",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.createonline$().subscribe(isonline",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.currentfile",{"_index":727,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.datasource",{"_index":1039,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.datasource.filter",{"_index":1034,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(b64imageurl",{"_index":964,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["this.errormessage",{"_index":963,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["this.errsnackbar(\"offline",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.evs",{"_index":616,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.addeventlistener(\"db",{"_index":625,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.addeventlistener(\"dbx",{"_index":621,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.close",{"_index":642,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.onerror",{"_index":627,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.onopen",{"_index":618,"title":{},"body":{"injectables/EventService.html":{}}}],["this.evs.url",{"_index":641,"title":{},"body":{"injectables/EventService.html":{}}}],["this.fb.group",{"_index":707,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.fileuploadservice.postimg(this.currentfile,this.stservice.id,this.stservice.host,this.type).subscribe",{"_index":729,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.form",{"_index":526,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.form.controls[this.question.key].valid",{"_index":562,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["this.form.getrawvalue",{"_index":536,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.getuser(id",{"_index":959,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["this.getusers",{"_index":1132,"title":{},"body":{"injectables/UserService.html":{}}}],["this.horizontalposition",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.http.get(this.stservice.host",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.stservice.host+'/api/form",{"_index":539,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.http.request(req",{"_index":794,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.imageurl",{"_index":723,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.isloadingresults",{"_index":1036,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.key",{"_index":845,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.label",{"_index":847,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.loc.getupdates(eventservice.local",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.loc.stopupdates",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.message",{"_index":736,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.old",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.oldloc",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"connecting...\",'blue",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"device",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"local",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"online",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"personal",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.opensnackbar(\"portrait",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.options",{"_index":857,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.order",{"_index":851,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.pagetitle",{"_index":710,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.payload",{"_index":533,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.progress",{"_index":726,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.qcs.toformgroup(this.questions",{"_index":527,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.questions",{"_index":899,"title":{},"body":{"components/RFormComponent.html":{}}}],["this.readystate",{"_index":635,"title":{},"body":{"injectables/EventService.html":{}}}],["this.required",{"_index":849,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.restore",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":958,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["this.router.navigate",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["this.router.navigate([\"/form/pic",{"_index":546,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.router.navigate(['/form",{"_index":818,"title":{},"body":{"guards/FormGuard.html":{}}}],["this.router.navigate(['/users",{"_index":965,"title":{},"body":{"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{}}}],["this.router.navigate([this.url",{"_index":745,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.router.url",{"_index":709,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.selectedfiles",{"_index":714,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.selectedfiles.item(0",{"_index":728,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.snackbar.open(msg",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snackbar.openfromcomponent(countdownsnackbarcomponent",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snackbarref",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snackbarref.dismiss",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snackbarref.onaction().subscribe",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.snval",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.source",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.source.subscribe(next",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.starttimer.next(seconds",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.starttimer.pipe(switchmap(seconds",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.busy.emit(false",{"_index":743,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.stservice.busy.emit(true",{"_index":544,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.stservice.busy.subscribe(foo",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.form",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.form).subscribe(data",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.form=null",{"_index":741,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.stservice.form=obj",{"_index":542,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.stservice.host",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.id",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"guards/FormGuard.html":{}}}],["this.stservice.id\",start+60,'/',this.hostname,true,\"none",{"_index":531,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.stservice.id=obj['_id'];//json.stringify(data",{"_index":541,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["this.stservice.pic",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.stservice.pic=null",{"_index":742,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.stservice.pic=this.currentfile",{"_index":739,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.sub",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.sub.unsubscribe",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.subj",{"_index":610,"title":{},"body":{"injectables/EventService.html":{}}}],["this.subj.asobservable",{"_index":608,"title":{},"body":{"injectables/EventService.html":{}}}],["this.test",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.timer",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.type",{"_index":855,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.type=\"bio",{"_index":713,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.type=\"pic",{"_index":711,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform",{"_index":706,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.get('avatar').updatevalueandvalidity",{"_index":719,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.patchvalue",{"_index":718,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.upservice.postimg(this.stservice.pic",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.url",{"_index":744,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.url='/form/bio",{"_index":740,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.user",{"_index":961,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["this.users",{"_index":1038,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.getuser(id).subscribe",{"_index":960,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["this.userservice.getusers().subscribe",{"_index":1037,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.val",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["this.value",{"_index":843,"title":{},"body":{"classes/QuestionBase.html":{}}}],["this.verticalposition",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["throwerror",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["throwerror(errormessage",{"_index":1144,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["timeleft",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["timeout",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["timer",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["timer(0",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["title",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{},"components/WelcomeComponent.html":{}}}],["toformgroup",{"_index":860,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["toformgroup(questions",{"_index":862,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["top",{"_index":1088,"title":{},"body":{"components/UserListComponent.html":{}}}],["tr.example",{"_index":1053,"title":{},"body":{"components/UserListComponent.html":{}}}],["transition",{"_index":1014,"title":{},"body":{"components/UserListComponent.html":{}}}],["transition('expanded",{"_index":1024,"title":{},"body":{"components/UserListComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["trigger",{"_index":1015,"title":{},"body":{"components/UserListComponent.html":{}}}],["trigger('detailexpand",{"_index":1018,"title":{},"body":{"components/UserListComponent.html":{}}}],["triggered",{"_index":669,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["true",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"injectables/QuestionService.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{}}}],["tslib",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"guards/FormGuard.html":{},"interfaces/IUser.html":{},"classes/QuestionBase.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/RFormComponent.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"guards/UserDetailGuard.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["type:string",{"_index":704,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["typeof(eventsource",{"_index":614,"title":{},"body":{"injectables/EventService.html":{}}}],["undefined",{"_index":615,"title":{},"body":{"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"classes/QuestionBase.html":{},"components/UserDetailComponent.html":{}}}],["unit",{"_index":1214,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["unsubsribe",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["upload",{"_index":645,"title":{},"body":{"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{}}}],["upload'},{'name",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["upload.component",{"_index":751,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["upload.component.css",{"_index":648,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.html",{"_index":649,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts",{"_index":644,"title":{},"body":{"components/FileUploadComponent.html":{},"coverage.html":{}}}],["upload.component.ts:19",{"_index":681,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:21",{"_index":692,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:23",{"_index":688,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:25",{"_index":677,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:27",{"_index":686,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:29",{"_index":682,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:31",{"_index":693,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:33",{"_index":685,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:35",{"_index":659,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:44",{"_index":680,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:54",{"_index":665,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:68",{"_index":668,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:85",{"_index":675,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.module",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["upload.module.ts",{"_index":749,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["upload.service",{"_index":697,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload/file",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"coverage.html":{}}}],["upload/form.guard.ts",{"_index":797,"title":{},"body":{"guards/FormGuard.html":{},"coverage.html":{}}}],["upload/form.guard.ts:10",{"_index":803,"title":{},"body":{"guards/FormGuard.html":{}}}],["upload/form.guard.ts:20",{"_index":806,"title":{},"body":{"guards/FormGuard.html":{}}}],["upload/upload.service",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["upload/upload.service.ts",{"_index":770,"title":{},"body":{"injectables/FileUploadService.html":{},"coverage.html":{}}}],["upload/upload.service.ts:22",{"_index":776,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload/upload.service.ts:9",{"_index":773,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploaded",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/FileUploadComponent.html":{}}}],["uploadform",{"_index":655,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploading",{"_index":816,"title":{},"body":{"guards/FormGuard.html":{}}}],["upservice",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["url",{"_index":596,"title":{},"body":{"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"injectables/FileUploadService.html":{},"injectables/StateParameterService.html":{}}}],["url:string",{"_index":702,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["urltree",{"_index":810,"title":{},"body":{"guards/FormGuard.html":{},"guards/UserDetailGuard.html":{}}}],["use",{"_index":495,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{},"injectables/StateParameterService.html":{},"index.html":{}}}],["useclass",{"_index":481,"title":{},"body":{"components/DynamicFormComponent.html":{},"modules/RFormModule.html":{},"overview.html":{}}}],["used",{"_index":602,"title":{},"body":{"injectables/EventService.html":{}}}],["user",{"_index":513,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"injectables/StateParameterService.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.address",{"_index":969,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.cin",{"_index":968,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.firstname",{"_index":966,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.lastname",{"_index":967,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.service",{"_index":957,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["user.sexe",{"_index":971,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["userdetailcomponent",{"_index":360,"title":{"components/UserDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userdetailguard",{"_index":973,"title":{"guards/UserDetailGuard.html":{}},"body":{"guards/UserDetailGuard.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userlistcomponent",{"_index":361,"title":{"components/UserListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usermodule",{"_index":383,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":990,"title":{},"body":{"components/UserListComponent.html":{},"modules/UserModule.html":{}}}],["users.find(p",{"_index":1134,"title":{},"body":{"injectables/UserService.html":{}}}],["users/:id",{"_index":1110,"title":{},"body":{"modules/UserModule.html":{}}}],["users/user.module",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["userservice",{"_index":942,"title":{"injectables/UserService.html":{}},"body":{"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{}}}],["val",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["validate",{"_index":561,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{}}}],["validators",{"_index":866,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators.required",{"_index":872,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["value",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaQuestion.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"classes/DropdownQuestion.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"classes/QuestionBase.html":{},"injectables/QuestionService.html":{},"injectables/StateParameterService.html":{},"classes/TextboxQuestion.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["values{{payload",{"_index":550,"title":{},"body":{"components/DynamicFormComponent.html":{}}}],["var",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{}}}],["variable",{"_index":611,"title":{},"body":{"injectables/EventService.html":{}}}],["version",{"_index":1193,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["verticalposition",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["via",{"_index":1217,"title":{},"body":{"index.html":{}}}],["views",{"_index":505,"title":{},"body":{"components/DynamicFormComponent.html":{},"components/FileUploadComponent.html":{},"guards/FormGuard.html":{}}}],["visit",{"_index":695,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["void",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"injectables/EventService.html":{},"components/FileUploadComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{}}}],["waiting",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["want",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["weight",{"_index":1074,"title":{},"body":{"components/UserListComponent.html":{}}}],["welcome",{"_index":1146,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["welcome.component.html",{"_index":1147,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["welcomecomponent",{"_index":362,"title":{"components/WelcomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountdownSnackbarComponent.html":{},"components/DynamicFormComponent.html":{},"components/DynamicFormQuestionComponent.html":{},"components/FileUploadComponent.html":{},"components/RFormComponent.html":{},"components/UserDetailComponent.html":{},"components/UserListComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["whitesmoke",{"_index":1059,"title":{},"body":{"components/UserListComponent.html":{}}}],["width",{"_index":566,"title":{},"body":{"components/DynamicFormQuestionComponent.html":{},"components/UserListComponent.html":{}}}],["woman",{"_index":884,"title":{},"body":{"injectables/QuestionService.html":{}}}],["worker",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["y",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["yarlomia",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{},"index.html":{}}}],["yx",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountdownService.html":{},"components/CountdownSnackbarComponent.html":{}}}],["z",{"_index":1093,"title":{},"body":{"components/UserListComponent.html":{}}}],["zone.js",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/FileUploadModule.html":{},"modules/RFormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main Page at /\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pm-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n            \n                template\n                \n\n    {{pageTitle}}\n    \n      Home\n      Citizens\n      Form\n    \n\n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                check\n                            \n                            \n                                horizontalPosition\n                            \n                            \n                                old\n                            \n                            \n                                oldloc\n                            \n                            \n                                pageTitle\n                            \n                            \n                                snackBarRef\n                            \n                            \n                                snval\n                            \n                            \n                                    Private\n                                source\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                test\n                            \n                            \n                                val\n                            \n                            \n                                verticalPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checker\n                            \n                            \n                                createOnline$\n                            \n                            \n                                errsnackbar\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient, stService: StateParameterService, UpService: FileUploadService, snackBar: MatSnackBar, countdown: CountdownService, _sse: EventService, loc: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:112\n                            \n                        \n\n                \n                    \n                            Subscribe for the events emitted by the browser about the internet connectivity\nand subscribe for the observable returned by the interval function if the browser is connected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http Client\n\n                                                        \n                                                \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the StateParameterService Class\n\n                                                        \n                                                \n                                                \n                                                        UpService\n                                                  \n                                                        \n                                                                        FileUploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the FileUploadService Class\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Snackbar instance to open a new snackbar\n\n                                                        \n                                                \n                                                \n                                                        countdown\n                                                  \n                                                        \n                                                                        CountdownService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the CountdownService Class\n\n                                                        \n                                                \n                                                \n                                                        _sse\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the EventService Class for the online mode\n\n                                                        \n                                                \n                                                \n                                                        loc\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the EventService Class for the local mode\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checker\n                        \n                        \n                    \n                \n            \n            \n                \nchecker(val: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:299\n                \n            \n\n\n            \n                \n                    Check the status of the local server\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                    \n                                        Duration of the offline mode snackbar before retrying\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOnline$\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOnline$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:286\n                \n            \n\n\n            \n                \n                    Returns The state of the connectivity using the browser\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errsnackbar\n                        \n                        \n                    \n                \n            \n            \n                \nerrsnackbar(msg: string, duration: number, color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:260\n                \n            \n\n\n            \n                \n                    Opens a custom snackbar from the \"CountdownSnackbarComponent\" Component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message To show\n\n                                    \n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                    \n                                        Timeout value before the snackbar disappear automatically\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'danger-snackbar'\n                                    \n\n                                    \n                                        Background color of the snackbar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:213\n                \n            \n\n\n            \n                \n                    Unsubsribe from all subscriptions in the component and stops the communication with the event sources\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:153\n                \n            \n\n\n            \n                \n                    Subscribe for the events sent by the event source \"busy\", and subscribe for the events sent\nfrom the Server-sent events \"_sse\"\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nopenSnackBar(msg: string, color: string, val: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:246\n                \n            \n\n\n            \n                \n                    Opens a snackbar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message To show\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'success-snackbar'\n                                    \n\n                                    \n                                        Background color of the snackbar\n\n                                    \n                                \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                    \n                                        Timeout value before the snackbar disappear automatically\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:222\n                \n            \n\n\n            \n                \n                    restore the incomplete form to the local server if the connection to the remote one is lost\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:88\n                            \n                        \n\n                \n                    \n                        Creates a subscription field so we can attach it to the execution of the observable of the interval observable\nthat we have defined previously and we can unsubscribe from it when we want or at the end of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            horizontalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBarHorizontalPosition\n\n                        \n                    \n                    \n                        \n                            Default value : 'left'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:108\n                            \n                        \n\n                \n                    \n                        Define a default Horizontal Position of the snackbar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            old\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:96\n                            \n                        \n\n                \n                    \n                        Old string received if we are in online mode\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldloc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:100\n                            \n                        \n\n                \n                    \n                        Old string received if we are in local mode\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YARLOMIA'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:65\n                            \n                        \n\n                \n                    \n                        Title of The page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            snackBarRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatSnackBarRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:104\n                            \n                        \n\n                \n                    \n                        Reference to a snack bar in the component \"CountdownSnackbarComponent\"\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            snval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:74\n                            \n                        \n\n                \n                    \n                        Value of milliseconds of the difference between the end of the duration of waiting\n  and the connecting snackbar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : interval(this.val)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:78\n                            \n                        \n\n                \n                    \n                        Creates an Observable that emits sequential numbers every specified interval of time\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:83\n                            \n                        \n\n                \n                    \n                        Creates a subscription field so we can attach it to the execution of the observable of the server sent events\nand we can unsubscribe from it when we want or at the end of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:92\n                            \n                        \n\n                \n                    \n                        Test if we are in offline mode or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            val\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 12000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:69\n                            \n                        \n\n                \n                    \n                        Value of milliseconds to initiate the interval\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBarVerticalPosition\n\n                        \n                    \n                    \n                        \n                            Default value : 'bottom'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:112\n                            \n                        \n\n                \n                    \n                        Define a default Vertical Position of the snackbar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, Injectable } from '@angular/core';\nimport { Observable, Observer, fromEvent, merge, interval, Subscription, Subject,timer } from 'rxjs';\nimport { map, first,switchMap, take } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { EventService } from \"./shared/event.service\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { FileUploadService } from \"./file-upload/upload.service\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n  MatSnackBarRef,\n  MAT_SNACK_BAR_DATA\n} from '@angular/material/snack-bar';\n\n/**\n * Service for cross component communication. */\n@Injectable()\nexport class CountdownService {\n  startTimer = new Subject  ();\n  timer = this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ));\n  /**\n   * Start the Countdown\n   * @param time Number of milliseconds\n   */\n  start(time: number) {\n    const seconds = Math.floor(time / 1000);\n    this.startTimer.next(seconds);\n  }\n  /**\n   * Return the time left to print it out in the snackbar\n   */\n  timeLeft(): Observable  {\n    return this.timer;\n  }\n}\n/**\n * Main Page at /\n */\n@Component({\n  selector: 'pm-root',\n  template: `\n    \n    \n        {{pageTitle}}\n        \n          Home\n          Citizens\n          Form\n        \n    \n    \n    \n      \n    \n    `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * Title of The page\n   */\n  pageTitle = 'YARLOMIA';\n  /**\n   * Value of milliseconds to initiate the interval\n   */\n  val = 12000;\n  /**\n   * Value of milliseconds of the difference between the end of the duration of waiting\n   *  and the connecting snackbar\n   */\n  snval = 2000;\n  /**\n   * Creates an Observable that emits sequential numbers every specified interval of time\n   */\n  private source = interval(this.val);\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the server sent events\n   * and we can unsubscribe from it when we want or at the end of the component\n   */\n  private sub: Subscription;\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the interval observable\n   * that we have defined previously and we can unsubscribe from it when we want or at the end of the component\n   */\n  private check: Subscription;\n  /**\n   * Test if we are in offline mode or not\n   */\n  test: boolean;\n  /**\n   * Old string received if we are in online mode\n   */\n  old: string;\n  /**\n   * Old string received if we are in local mode\n   */\n  oldloc: string;\n  /**\n   * Reference to a snack bar in the component \"CountdownSnackbarComponent\"\n   */\n  snackBarRef: MatSnackBarRef  ;\n  /**\n   * Define a default Horizontal Position of the snackbar\n   */\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  /**\n   * Define a default Vertical Position of the snackbar\n   */\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  /**\n   * Subscribe for the events emitted by the browser about the internet connectivity\n   * and subscribe for the observable returned by the interval function if the browser is connected\n   * @param _http Http Client\n   * @param stService Instance of the StateParameterService Class\n   * @param UpService Instance of the FileUploadService Class\n   * @param snackBar Snackbar instance to open a new snackbar\n   * @param countdown Instance of the CountdownService Class\n   * @param _sse Instance of the EventService Class for the online mode\n   * @param loc Instance of the EventService Class for the local mode\n   */\n  constructor(private _http: HttpClient, private stService: StateParameterService, private UpService: FileUploadService,\n    private snackBar: MatSnackBar, private countdown: CountdownService, private _sse: EventService, private loc: EventService) {\n    this.createOnline$().subscribe(isOnline => {\n      if (isOnline) {\n        this._sse.getUpdates();\n        this.val = 12000;\n        this.test = false;\n\n        this.check = this.source.subscribe(next => {\n          if (this.test) {\n            this.checker();\n            console.log(\"access interval\");\n          }\n        });\n      } else {\n        //this.sub.unsubscribe();\n        this._sse.evs.close();\n        this.old = \"\";\n        this.oldloc = \"\";\n        if (this.check)\n          this.check.unsubscribe();\n        this.openSnackBar(\"Device Disconnected\", 'danger-snackbar');\n      }\n    });\n  }\n  /**\n   * Subscribe for the events sent by the event source \"busy\", and subscribe for the events sent\n   * from the Server-sent events \"_sse\"\n   */\n  ngOnInit(): void {\n    var busy: boolean;\n    this.stService.busy.subscribe(foo => {\n      if (!foo && this.old == 'yx') {\n        busy = false;\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        console.log(\"Access: busy\");\n        this.oldloc = \"\";\n      } else busy = true;\n    });\n    this.sub = this._sse.returnAsObservable().subscribe(msg => {\n      console.log(msg);\n      if (msg == 'yx' && !busy) {\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        this.old = msg;\n        this.oldloc = \"\";\n        console.log(\"Access: \" + msg);\n      }else if ((msg == \"rx\" || msg == 'nx') ) {\n        this.loc.getUpdates(EventService.local);\n        this.old = msg;\n        console.log(\"Access: \" + msg);\n      } else if (msg == 'y' && msg != this.oldloc) {\n        this.stService.host = EventService.local;\n        this.openSnackBar(\"Local Mode\", 'blue-snackbar');\n        this.restore();\n        this.test = false;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      } else if ((msg == 'r' || msg == 'n' || msg == 'e') && msg != this.oldloc) {\n        this.stService.host = \"\";\n        this.loc.stopUpdates();\n        this.test = true;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      }else if (msg == 'ex') {\n        if(!this.test)\n          this.loc.getUpdates(EventService.local);\n        setTimeout(() => {\n            this.loc.stopUpdates();\n            this._sse.getUpdates();\n          },\n          10000);\n          console.log(\"Access: \"+msg);\n        this.old = msg;\n      }\n      if (msg == 'yx')\n        this.old = msg;\n    });\n  }\n  /**\n   * Unsubsribe from all subscriptions in the component and stops the communication with the event sources\n   */\n  ngOnDestroy(): void {\n    this._sse.stopUpdates();\n    this.loc.stopUpdates();\n    this.sub.unsubscribe();\n    this.check.unsubscribe();\n  }\n  /**\n   * restore the incomplete form to the local server if the connection to the remote one is lost\n   */\n  restore(): void {\n    if (this.stService.form)\n      this._http.post(this.stService.host + '/api/form', this.stService.form).subscribe(data => {\n        setTimeout(() => {\n            this.openSnackBar(\"Personal Informations Saved\", 'blue-snackbar', 3000);\n          },\n          3000);\n      });\n    if (this.stService.pic) {\n      this.UpService.postImg(this.stService.pic, this.stService.id, this.stService.host, \"pic\").subscribe(\n        (event: any) => {\n          setTimeout(() => {\n              this.openSnackBar(\"Portrait Uploaded Successfully!\", 'blue-snackbar', 3000);\n            },\n            6000);\n        });\n    }\n  }\n  /**\n   * Opens a snackbar\n   * @param msg Message To show\n   * @param color Background color of the snackbar\n   * @param val Timeout value before the snackbar disappear automatically\n   */\n  openSnackBar(msg: string, color = 'success-snackbar', val = 10000) {\n    this.snackBar.open(msg, \"OK\", {\n      duration: val,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: [color]\n    });\n  }\n  /**\n   * Opens a custom snackbar from the \"CountdownSnackbarComponent\" Component\n   * @param msg Message To show\n   * @param duration Timeout value before the snackbar disappear automatically\n   * @param color Background color of the snackbar\n   */\n  errsnackbar(msg: string, duration: number = 10000, color: string = 'danger-snackbar') {\n    if (this.snackBarRef)\n      this.snackBarRef.dismiss();\n    this.snackBarRef = this.snackBar.openFromComponent(CountdownSnackbarComponent, {\n      duration,\n      data: msg,\n      panelClass: [color],\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n    this.countdown.start(duration);\n    this.snackBarRef.onAction().subscribe(() => {\n      this.snval *= 2;\n      this.val *= 2;\n      this.check.unsubscribe();\n      this.source = interval(this.val);\n      this.checker(this.val - this.snval);\n      this.check = this.source.subscribe(next => {\n        this.checker(this.val - this.snval);\n      });\n    });\n  }\n\n/**\n * Returns The state of the connectivity using the browser\n */\n  createOnline$() {\n    return merge  (\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer  ) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n  /**\n   * Check the status of the local server\n   * @param val Duration of the offline mode snackbar before retrying\n   */\n  checker(val = 10000): void {\n    this._http.get(EventService.local+\"/api/db\", {\n        observe: 'response'\n      })\n      .pipe(first())\n      .subscribe(resp => {\n        if (resp.status === 200) {\n          if (this.test) {\n            this.loc.getUpdates(EventService.local);\n            console.log(\"back to local mode\");\n          }\n        }\n      }, err => {\n        console.log(\"still offline mode\");\n        this.openSnackBar(\"Connecting...\",'blue-snackbar',1000);\n        setTimeout(() => {\n            this.errsnackbar(\"Offline Mode\", val);\n          },\n          2000);\n      });\n  }\n}\n/** Component opened inside a snackbar. */\n@Component({\n  selector: 'snackbar',\n  template: `\n  RETRY NOW\n  {{data}}  Retrying in {{ timeLeft$ | async }} seconds...\n  `\n})\nexport class CountdownSnackbarComponent {\n  /**\n   * Time left returned from the CountdownService\n   */\n  timeLeft$ = this.countdown.timeLeft();\n  /**\n   * Constructor of the CountdownSnackbarComponent\n   * @param countdown Instance from CountdownService Injectable\n   * @param data The message to show in the snackbar\n   * @param snackBarRef Reference to the snackbar\n   */\n  constructor(private countdown: CountdownService, @Inject(MAT_SNACK_BAR_DATA) public data: any,\n    public snackBarRef: MatSnackBarRef  ) {}\n}\n\n    \n\n\n    \n                \n                    ./app.component.css\n                \n                .nav-link {\n  font-size: large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{pageTitle}}          Home      Citizens      Form      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCountdownSnackbarComponent\n\nCountdownSnackbarComponent\n\nAppModule -->\n\nCountdownSnackbarComponent->AppModule\n\n\n\n\n\nWelcomeComponent\n\nWelcomeComponent\n\nAppModule -->\n\nWelcomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nAppModule -->\n\nFileUploadModule->AppModule\n\n\n\n\n\nRFormModule\n\nRFormModule\n\nAppModule -->\n\nRFormModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nCountdownService\n\nCountdownService\n\nAppModule -->\n\nCountdownService->AppModule\n\n\n\n\n\nStateParameterService\n\nStateParameterService\n\nAppModule -->\n\nStateParameterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CountdownSnackbarComponent\n                        \n                        \n                            WelcomeComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CountdownSnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CountdownService\n                        \n                        \n                            StateParameterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileUploadModule\n                        \n                        \n                            RFormModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent,CountdownSnackbarComponent,CountdownService } from './app.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { UserModule } from './users/user.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FileUploadModule } from './file-upload/file-upload.module';\nimport { RFormModule } from './r-form/r-form.module';\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { CookieService } from 'ngx-cookie-service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    CountdownSnackbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'home', component: WelcomeComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: '**', redirectTo: 'home', pathMatch: 'full' }\n    ]),\n    UserModule,\n    RFormModule,\n    FileUploadModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSnackBarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  entryComponents: [\n    CountdownSnackbarComponent,\n  ],\n  providers:[\n    CountdownService,\n    StateParameterService,CookieService\n  ],\n  exports:[\n    MatToolbarModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AreaQuestion.html":{"url":"classes/AreaQuestion.html","title":"class - AreaQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AreaQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-loc.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuestionBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlType\n                            \n                            \n                                controlType\n                            \n                            \n                                key\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                order\n                            \n                            \n                                required\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'area'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-loc.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:13\n\n                            \n                        \n\n                \n                    \n                        Type of the question (textbox,area,dropdown,checkbox...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:5\n\n                            \n                        \n\n                \n                    \n                        key of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:7\n\n                            \n                        \n\n                \n                    \n                        Label or the placeholder of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:17\n\n                            \n                        \n\n                \n                    \n                        Options to choose in the case of a dropdown for example \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:11\n\n                            \n                        \n\n                \n                    \n                        order of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:9\n\n                            \n                        \n\n                \n                    \n                        Is the question required or not ? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:15\n\n                            \n                        \n\n                \n                    \n                        Type of the question (text,number...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:3\n\n                            \n                        \n\n                \n                    \n                        Type of the question \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QuestionBase } from './question-base';\n\nexport class AreaQuestion extends QuestionBase {\n  controlType = 'area';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CountdownService.html":{"url":"injectables/CountdownService.html","title":"injectable - CountdownService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CountdownService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n            \n                Description\n            \n            \n                Service for cross component communication. \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                startTimer\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                start\n                            \n                            \n                                timeLeft\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:28\n                \n            \n\n\n            \n                \n                    Start the Countdown\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of milliseconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            timeLeft\n                        \n                        \n                    \n                \n            \n            \n                \ntimeLeft()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n                    Return the time left to print it out in the snackbar\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject  ()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, Injectable } from '@angular/core';\nimport { Observable, Observer, fromEvent, merge, interval, Subscription, Subject,timer } from 'rxjs';\nimport { map, first,switchMap, take } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { EventService } from \"./shared/event.service\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { FileUploadService } from \"./file-upload/upload.service\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n  MatSnackBarRef,\n  MAT_SNACK_BAR_DATA\n} from '@angular/material/snack-bar';\n\n/**\n * Service for cross component communication. */\n@Injectable()\nexport class CountdownService {\n  startTimer = new Subject  ();\n  timer = this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ));\n  /**\n   * Start the Countdown\n   * @param time Number of milliseconds\n   */\n  start(time: number) {\n    const seconds = Math.floor(time / 1000);\n    this.startTimer.next(seconds);\n  }\n  /**\n   * Return the time left to print it out in the snackbar\n   */\n  timeLeft(): Observable  {\n    return this.timer;\n  }\n}\n/**\n * Main Page at /\n */\n@Component({\n  selector: 'pm-root',\n  template: `\n    \n    \n        {{pageTitle}}\n        \n          Home\n          Citizens\n          Form\n        \n    \n    \n    \n      \n    \n    `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * Title of The page\n   */\n  pageTitle = 'YARLOMIA';\n  /**\n   * Value of milliseconds to initiate the interval\n   */\n  val = 12000;\n  /**\n   * Value of milliseconds of the difference between the end of the duration of waiting\n   *  and the connecting snackbar\n   */\n  snval = 2000;\n  /**\n   * Creates an Observable that emits sequential numbers every specified interval of time\n   */\n  private source = interval(this.val);\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the server sent events\n   * and we can unsubscribe from it when we want or at the end of the component\n   */\n  private sub: Subscription;\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the interval observable\n   * that we have defined previously and we can unsubscribe from it when we want or at the end of the component\n   */\n  private check: Subscription;\n  /**\n   * Test if we are in offline mode or not\n   */\n  test: boolean;\n  /**\n   * Old string received if we are in online mode\n   */\n  old: string;\n  /**\n   * Old string received if we are in local mode\n   */\n  oldloc: string;\n  /**\n   * Reference to a snack bar in the component \"CountdownSnackbarComponent\"\n   */\n  snackBarRef: MatSnackBarRef  ;\n  /**\n   * Define a default Horizontal Position of the snackbar\n   */\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  /**\n   * Define a default Vertical Position of the snackbar\n   */\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  /**\n   * Subscribe for the events emitted by the browser about the internet connectivity\n   * and subscribe for the observable returned by the interval function if the browser is connected\n   * @param _http Http Client\n   * @param stService Instance of the StateParameterService Class\n   * @param UpService Instance of the FileUploadService Class\n   * @param snackBar Snackbar instance to open a new snackbar\n   * @param countdown Instance of the CountdownService Class\n   * @param _sse Instance of the EventService Class for the online mode\n   * @param loc Instance of the EventService Class for the local mode\n   */\n  constructor(private _http: HttpClient, private stService: StateParameterService, private UpService: FileUploadService,\n    private snackBar: MatSnackBar, private countdown: CountdownService, private _sse: EventService, private loc: EventService) {\n    this.createOnline$().subscribe(isOnline => {\n      if (isOnline) {\n        this._sse.getUpdates();\n        this.val = 12000;\n        this.test = false;\n\n        this.check = this.source.subscribe(next => {\n          if (this.test) {\n            this.checker();\n            console.log(\"access interval\");\n          }\n        });\n      } else {\n        //this.sub.unsubscribe();\n        this._sse.evs.close();\n        this.old = \"\";\n        this.oldloc = \"\";\n        if (this.check)\n          this.check.unsubscribe();\n        this.openSnackBar(\"Device Disconnected\", 'danger-snackbar');\n      }\n    });\n  }\n  /**\n   * Subscribe for the events sent by the event source \"busy\", and subscribe for the events sent\n   * from the Server-sent events \"_sse\"\n   */\n  ngOnInit(): void {\n    var busy: boolean;\n    this.stService.busy.subscribe(foo => {\n      if (!foo && this.old == 'yx') {\n        busy = false;\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        console.log(\"Access: busy\");\n        this.oldloc = \"\";\n      } else busy = true;\n    });\n    this.sub = this._sse.returnAsObservable().subscribe(msg => {\n      console.log(msg);\n      if (msg == 'yx' && !busy) {\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        this.old = msg;\n        this.oldloc = \"\";\n        console.log(\"Access: \" + msg);\n      }else if ((msg == \"rx\" || msg == 'nx') ) {\n        this.loc.getUpdates(EventService.local);\n        this.old = msg;\n        console.log(\"Access: \" + msg);\n      } else if (msg == 'y' && msg != this.oldloc) {\n        this.stService.host = EventService.local;\n        this.openSnackBar(\"Local Mode\", 'blue-snackbar');\n        this.restore();\n        this.test = false;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      } else if ((msg == 'r' || msg == 'n' || msg == 'e') && msg != this.oldloc) {\n        this.stService.host = \"\";\n        this.loc.stopUpdates();\n        this.test = true;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      }else if (msg == 'ex') {\n        if(!this.test)\n          this.loc.getUpdates(EventService.local);\n        setTimeout(() => {\n            this.loc.stopUpdates();\n            this._sse.getUpdates();\n          },\n          10000);\n          console.log(\"Access: \"+msg);\n        this.old = msg;\n      }\n      if (msg == 'yx')\n        this.old = msg;\n    });\n  }\n  /**\n   * Unsubsribe from all subscriptions in the component and stops the communication with the event sources\n   */\n  ngOnDestroy(): void {\n    this._sse.stopUpdates();\n    this.loc.stopUpdates();\n    this.sub.unsubscribe();\n    this.check.unsubscribe();\n  }\n  /**\n   * restore the incomplete form to the local server if the connection to the remote one is lost\n   */\n  restore(): void {\n    if (this.stService.form)\n      this._http.post(this.stService.host + '/api/form', this.stService.form).subscribe(data => {\n        setTimeout(() => {\n            this.openSnackBar(\"Personal Informations Saved\", 'blue-snackbar', 3000);\n          },\n          3000);\n      });\n    if (this.stService.pic) {\n      this.UpService.postImg(this.stService.pic, this.stService.id, this.stService.host, \"pic\").subscribe(\n        (event: any) => {\n          setTimeout(() => {\n              this.openSnackBar(\"Portrait Uploaded Successfully!\", 'blue-snackbar', 3000);\n            },\n            6000);\n        });\n    }\n  }\n  /**\n   * Opens a snackbar\n   * @param msg Message To show\n   * @param color Background color of the snackbar\n   * @param val Timeout value before the snackbar disappear automatically\n   */\n  openSnackBar(msg: string, color = 'success-snackbar', val = 10000) {\n    this.snackBar.open(msg, \"OK\", {\n      duration: val,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: [color]\n    });\n  }\n  /**\n   * Opens a custom snackbar from the \"CountdownSnackbarComponent\" Component\n   * @param msg Message To show\n   * @param duration Timeout value before the snackbar disappear automatically\n   * @param color Background color of the snackbar\n   */\n  errsnackbar(msg: string, duration: number = 10000, color: string = 'danger-snackbar') {\n    if (this.snackBarRef)\n      this.snackBarRef.dismiss();\n    this.snackBarRef = this.snackBar.openFromComponent(CountdownSnackbarComponent, {\n      duration,\n      data: msg,\n      panelClass: [color],\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n    this.countdown.start(duration);\n    this.snackBarRef.onAction().subscribe(() => {\n      this.snval *= 2;\n      this.val *= 2;\n      this.check.unsubscribe();\n      this.source = interval(this.val);\n      this.checker(this.val - this.snval);\n      this.check = this.source.subscribe(next => {\n        this.checker(this.val - this.snval);\n      });\n    });\n  }\n\n/**\n * Returns The state of the connectivity using the browser\n */\n  createOnline$() {\n    return merge  (\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer  ) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n  /**\n   * Check the status of the local server\n   * @param val Duration of the offline mode snackbar before retrying\n   */\n  checker(val = 10000): void {\n    this._http.get(EventService.local+\"/api/db\", {\n        observe: 'response'\n      })\n      .pipe(first())\n      .subscribe(resp => {\n        if (resp.status === 200) {\n          if (this.test) {\n            this.loc.getUpdates(EventService.local);\n            console.log(\"back to local mode\");\n          }\n        }\n      }, err => {\n        console.log(\"still offline mode\");\n        this.openSnackBar(\"Connecting...\",'blue-snackbar',1000);\n        setTimeout(() => {\n            this.errsnackbar(\"Offline Mode\", val);\n          },\n          2000);\n      });\n  }\n}\n/** Component opened inside a snackbar. */\n@Component({\n  selector: 'snackbar',\n  template: `\n  RETRY NOW\n  {{data}}  Retrying in {{ timeLeft$ | async }} seconds...\n  `\n})\nexport class CountdownSnackbarComponent {\n  /**\n   * Time left returned from the CountdownService\n   */\n  timeLeft$ = this.countdown.timeLeft();\n  /**\n   * Constructor of the CountdownSnackbarComponent\n   * @param countdown Instance from CountdownService Injectable\n   * @param data The message to show in the snackbar\n   * @param snackBarRef Reference to the snackbar\n   */\n  constructor(private countdown: CountdownService, @Inject(MAT_SNACK_BAR_DATA) public data: any,\n    public snackBarRef: MatSnackBarRef  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountdownSnackbarComponent.html":{"url":"components/CountdownSnackbarComponent.html","title":"component - CountdownSnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CountdownSnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Component opened inside a snackbar. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snackbar\n            \n\n\n\n            \n                template\n                RETRY NOW\n{{data}}  Retrying in {{ timeLeft$ | async }} seconds...\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                snackBarRef\n                            \n                            \n                                timeLeft$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(countdown: CountdownService, data: any, snackBarRef: MatSnackBarRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:333\n                            \n                        \n\n                \n                    \n                            Constructor of the CountdownSnackbarComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        countdown\n                                                  \n                                                        \n                                                                        CountdownService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance from CountdownService Injectable\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message to show in the snackbar\n\n                                                        \n                                                \n                                                \n                                                        snackBarRef\n                                                  \n                                                        \n                                                                        MatSnackBarRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:340\n                            \n                        \n\n                \n                    \n                        The message to show in the snackbar\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBarRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatSnackBarRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:341\n                            \n                        \n\n                \n                    \n                        Reference to the snackbar\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeLeft$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.countdown.timeLeft()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:333\n                            \n                        \n\n                \n                    \n                        Time left returned from the CountdownService\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, Injectable } from '@angular/core';\nimport { Observable, Observer, fromEvent, merge, interval, Subscription, Subject,timer } from 'rxjs';\nimport { map, first,switchMap, take } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { EventService } from \"./shared/event.service\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { FileUploadService } from \"./file-upload/upload.service\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n  MatSnackBarRef,\n  MAT_SNACK_BAR_DATA\n} from '@angular/material/snack-bar';\n\n/**\n * Service for cross component communication. */\n@Injectable()\nexport class CountdownService {\n  startTimer = new Subject  ();\n  timer = this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ));\n  /**\n   * Start the Countdown\n   * @param time Number of milliseconds\n   */\n  start(time: number) {\n    const seconds = Math.floor(time / 1000);\n    this.startTimer.next(seconds);\n  }\n  /**\n   * Return the time left to print it out in the snackbar\n   */\n  timeLeft(): Observable  {\n    return this.timer;\n  }\n}\n/**\n * Main Page at /\n */\n@Component({\n  selector: 'pm-root',\n  template: `\n    \n    \n        {{pageTitle}}\n        \n          Home\n          Citizens\n          Form\n        \n    \n    \n    \n      \n    \n    `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * Title of The page\n   */\n  pageTitle = 'YARLOMIA';\n  /**\n   * Value of milliseconds to initiate the interval\n   */\n  val = 12000;\n  /**\n   * Value of milliseconds of the difference between the end of the duration of waiting\n   *  and the connecting snackbar\n   */\n  snval = 2000;\n  /**\n   * Creates an Observable that emits sequential numbers every specified interval of time\n   */\n  private source = interval(this.val);\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the server sent events\n   * and we can unsubscribe from it when we want or at the end of the component\n   */\n  private sub: Subscription;\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the interval observable\n   * that we have defined previously and we can unsubscribe from it when we want or at the end of the component\n   */\n  private check: Subscription;\n  /**\n   * Test if we are in offline mode or not\n   */\n  test: boolean;\n  /**\n   * Old string received if we are in online mode\n   */\n  old: string;\n  /**\n   * Old string received if we are in local mode\n   */\n  oldloc: string;\n  /**\n   * Reference to a snack bar in the component \"CountdownSnackbarComponent\"\n   */\n  snackBarRef: MatSnackBarRef  ;\n  /**\n   * Define a default Horizontal Position of the snackbar\n   */\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  /**\n   * Define a default Vertical Position of the snackbar\n   */\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  /**\n   * Subscribe for the events emitted by the browser about the internet connectivity\n   * and subscribe for the observable returned by the interval function if the browser is connected\n   * @param _http Http Client\n   * @param stService Instance of the StateParameterService Class\n   * @param UpService Instance of the FileUploadService Class\n   * @param snackBar Snackbar instance to open a new snackbar\n   * @param countdown Instance of the CountdownService Class\n   * @param _sse Instance of the EventService Class for the online mode\n   * @param loc Instance of the EventService Class for the local mode\n   */\n  constructor(private _http: HttpClient, private stService: StateParameterService, private UpService: FileUploadService,\n    private snackBar: MatSnackBar, private countdown: CountdownService, private _sse: EventService, private loc: EventService) {\n    this.createOnline$().subscribe(isOnline => {\n      if (isOnline) {\n        this._sse.getUpdates();\n        this.val = 12000;\n        this.test = false;\n\n        this.check = this.source.subscribe(next => {\n          if (this.test) {\n            this.checker();\n            console.log(\"access interval\");\n          }\n        });\n      } else {\n        //this.sub.unsubscribe();\n        this._sse.evs.close();\n        this.old = \"\";\n        this.oldloc = \"\";\n        if (this.check)\n          this.check.unsubscribe();\n        this.openSnackBar(\"Device Disconnected\", 'danger-snackbar');\n      }\n    });\n  }\n  /**\n   * Subscribe for the events sent by the event source \"busy\", and subscribe for the events sent\n   * from the Server-sent events \"_sse\"\n   */\n  ngOnInit(): void {\n    var busy: boolean;\n    this.stService.busy.subscribe(foo => {\n      if (!foo && this.old == 'yx') {\n        busy = false;\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        console.log(\"Access: busy\");\n        this.oldloc = \"\";\n      } else busy = true;\n    });\n    this.sub = this._sse.returnAsObservable().subscribe(msg => {\n      console.log(msg);\n      if (msg == 'yx' && !busy) {\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        this.old = msg;\n        this.oldloc = \"\";\n        console.log(\"Access: \" + msg);\n      }else if ((msg == \"rx\" || msg == 'nx') ) {\n        this.loc.getUpdates(EventService.local);\n        this.old = msg;\n        console.log(\"Access: \" + msg);\n      } else if (msg == 'y' && msg != this.oldloc) {\n        this.stService.host = EventService.local;\n        this.openSnackBar(\"Local Mode\", 'blue-snackbar');\n        this.restore();\n        this.test = false;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      } else if ((msg == 'r' || msg == 'n' || msg == 'e') && msg != this.oldloc) {\n        this.stService.host = \"\";\n        this.loc.stopUpdates();\n        this.test = true;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      }else if (msg == 'ex') {\n        if(!this.test)\n          this.loc.getUpdates(EventService.local);\n        setTimeout(() => {\n            this.loc.stopUpdates();\n            this._sse.getUpdates();\n          },\n          10000);\n          console.log(\"Access: \"+msg);\n        this.old = msg;\n      }\n      if (msg == 'yx')\n        this.old = msg;\n    });\n  }\n  /**\n   * Unsubsribe from all subscriptions in the component and stops the communication with the event sources\n   */\n  ngOnDestroy(): void {\n    this._sse.stopUpdates();\n    this.loc.stopUpdates();\n    this.sub.unsubscribe();\n    this.check.unsubscribe();\n  }\n  /**\n   * restore the incomplete form to the local server if the connection to the remote one is lost\n   */\n  restore(): void {\n    if (this.stService.form)\n      this._http.post(this.stService.host + '/api/form', this.stService.form).subscribe(data => {\n        setTimeout(() => {\n            this.openSnackBar(\"Personal Informations Saved\", 'blue-snackbar', 3000);\n          },\n          3000);\n      });\n    if (this.stService.pic) {\n      this.UpService.postImg(this.stService.pic, this.stService.id, this.stService.host, \"pic\").subscribe(\n        (event: any) => {\n          setTimeout(() => {\n              this.openSnackBar(\"Portrait Uploaded Successfully!\", 'blue-snackbar', 3000);\n            },\n            6000);\n        });\n    }\n  }\n  /**\n   * Opens a snackbar\n   * @param msg Message To show\n   * @param color Background color of the snackbar\n   * @param val Timeout value before the snackbar disappear automatically\n   */\n  openSnackBar(msg: string, color = 'success-snackbar', val = 10000) {\n    this.snackBar.open(msg, \"OK\", {\n      duration: val,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: [color]\n    });\n  }\n  /**\n   * Opens a custom snackbar from the \"CountdownSnackbarComponent\" Component\n   * @param msg Message To show\n   * @param duration Timeout value before the snackbar disappear automatically\n   * @param color Background color of the snackbar\n   */\n  errsnackbar(msg: string, duration: number = 10000, color: string = 'danger-snackbar') {\n    if (this.snackBarRef)\n      this.snackBarRef.dismiss();\n    this.snackBarRef = this.snackBar.openFromComponent(CountdownSnackbarComponent, {\n      duration,\n      data: msg,\n      panelClass: [color],\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n    this.countdown.start(duration);\n    this.snackBarRef.onAction().subscribe(() => {\n      this.snval *= 2;\n      this.val *= 2;\n      this.check.unsubscribe();\n      this.source = interval(this.val);\n      this.checker(this.val - this.snval);\n      this.check = this.source.subscribe(next => {\n        this.checker(this.val - this.snval);\n      });\n    });\n  }\n\n/**\n * Returns The state of the connectivity using the browser\n */\n  createOnline$() {\n    return merge  (\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer  ) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n  /**\n   * Check the status of the local server\n   * @param val Duration of the offline mode snackbar before retrying\n   */\n  checker(val = 10000): void {\n    this._http.get(EventService.local+\"/api/db\", {\n        observe: 'response'\n      })\n      .pipe(first())\n      .subscribe(resp => {\n        if (resp.status === 200) {\n          if (this.test) {\n            this.loc.getUpdates(EventService.local);\n            console.log(\"back to local mode\");\n          }\n        }\n      }, err => {\n        console.log(\"still offline mode\");\n        this.openSnackBar(\"Connecting...\",'blue-snackbar',1000);\n        setTimeout(() => {\n            this.errsnackbar(\"Offline Mode\", val);\n          },\n          2000);\n      });\n  }\n}\n/** Component opened inside a snackbar. */\n@Component({\n  selector: 'snackbar',\n  template: `\n  RETRY NOW\n  {{data}}  Retrying in {{ timeLeft$ | async }} seconds...\n  `\n})\nexport class CountdownSnackbarComponent {\n  /**\n   * Time left returned from the CountdownService\n   */\n  timeLeft$ = this.countdown.timeLeft();\n  /**\n   * Constructor of the CountdownSnackbarComponent\n   * @param countdown Instance from CountdownService Injectable\n   * @param data The message to show in the snackbar\n   * @param snackBarRef Reference to the snackbar\n   */\n  constructor(private countdown: CountdownService, @Inject(MAT_SNACK_BAR_DATA) public data: any,\n    public snackBarRef: MatSnackBarRef  ) {}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'RETRY NOW{{data}}  Retrying in {{ timeLeft$ | async }} seconds...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountdownSnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DropdownQuestion.html":{"url":"classes/DropdownQuestion.html","title":"class - DropdownQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropdownQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-dropdown.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuestionBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlType\n                            \n                            \n                                controlType\n                            \n                            \n                                key\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                order\n                            \n                            \n                                required\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dropdown'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-dropdown.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:13\n\n                            \n                        \n\n                \n                    \n                        Type of the question (textbox,area,dropdown,checkbox...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:5\n\n                            \n                        \n\n                \n                    \n                        key of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:7\n\n                            \n                        \n\n                \n                    \n                        Label or the placeholder of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:17\n\n                            \n                        \n\n                \n                    \n                        Options to choose in the case of a dropdown for example \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:11\n\n                            \n                        \n\n                \n                    \n                        order of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:9\n\n                            \n                        \n\n                \n                    \n                        Is the question required or not ? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:15\n\n                            \n                        \n\n                \n                    \n                        Type of the question (text,number...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:3\n\n                            \n                        \n\n                \n                    \n                        Type of the question \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QuestionBase } from './question-base';\n\nexport class DropdownQuestion extends QuestionBase {\n  controlType = 'dropdown';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicFormComponent.html":{"url":"components/DynamicFormComponent.html","title":"component - DynamicFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/r-form/dynamic-form.component.ts\n\n\n    \n        Description\n    \n    \n        DynamicFormComponent to handle the formgroup \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                QuestionControlService\n                            { provide: LocationStrategy, useClass: PathLocationStrategy }\n                \n            \n\n\n            \n                selector\n                app-dynamic-form\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                questions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stService: StateParameterService, qcs: QuestionControlService, router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/r-form/dynamic-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructs the DynamicForm Component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use the fields in the bag to store the citizen id and emit an event using the event emitter\n\n                                                        \n                                                \n                                                \n                                                        qcs\n                                                  \n                                                        \n                                                                        QuestionControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the QuestionControlService Object\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use Router service to navigate among views\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTTP Client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        questions\n                    \n                \n                \n                    \n                        Type :         QuestionBase[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form.component.ts:22\n                            \n                        \n                \n                    \n                        Input Questions  \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/r-form/dynamic-form.component.ts:36\n                \n            \n\n\n            \n                \n                    Initiate the component by getting the formgroup from the questionbase objects \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/r-form/dynamic-form.component.ts:43\n                \n            \n\n\n            \n                \n                    Submit the form when the user hits the submit button \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form.component.ts:24\n                            \n                        \n\n                \n                    \n                        FormGroup instance \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit,Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { QuestionBase } from './question-base';\nimport { QuestionControlService } from './question-control.service';\nimport { LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\nimport { CookieService } from 'ngx-cookie-service';\nimport { EventService } from '../shared/event.service';\n\n/** DynamicFormComponent to handle the formgroup */\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  providers: [QuestionControlService, {provide: LocationStrategy, useClass: PathLocationStrategy}]\n})\nexport class DynamicFormComponent implements OnInit {\n  /** Input Questions  */\n  @Input() questions: QuestionBase[] = [];\n  /** FormGroup instance */\n  form: FormGroup;\n  destroy$: Subject = new Subject();\n  /**\n   * Constructs the DynamicForm Component\n   * @param qcs Instance of the QuestionControlService Object\n   * @param router use Router service to navigate among views\n   * @param stService use the fields in the bag to store the citizen id and emit an event using the event emitter\n   * @param http HTTP Client\n   */\n  constructor(/*private cookieService: CookieService,*/private stService :StateParameterService,\n    private qcs: QuestionControlService,private router : Router,private http: HttpClient) { }\n  /** Initiate the component by getting the formgroup from the questionbase objects */\n  ngOnInit() {\n    this.form = this.qcs.toFormGroup(this.questions);\n    //const start = Date.now();\n    //this.cookieService.set( 'cin', \"this.stService.id\",start+60,'/',this.hostname,true,\"None\");\n    //console.log(this.cookieService.getAll());\n  }\n  /** Submit the form when the user hits the submit button */\n  onSubmit() {\n    //this.payLoad = JSON.stringify(this.form.getRawValue());\n    const obj= this.form.getRawValue();\n    obj[\"_id\"]= \"dossier_\"+obj['cin'];\n    this.http.post(this.stService.host+'/api/form', obj).pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.stService.id=obj['_id'];//JSON.stringify(data);\n      this.stService.form=obj;\n      if(this.stService.host==EventService.local)\n        this.stService.busy.emit(true);\n      //const start = Date.now();\n      //this.cookieService.set( 'data', this.stService.id ,start+60000,'/',this.hostname,true);\n      //console.log(this.cookieService.getAll());\n      setTimeout(() =>\n      {\n        this.router.navigate([\"/form/pic\"]);\n      },\n      1000);\n    });\n  }\n}\n\n    \n\n    \n        ﻿﻿\n  \n    Personal Informations\n  \n  \n    \n\n  \n\n    \n      \n    \n\n    \n      Save\n    \n  \n\n  \n    Saved the following values{{payLoad}}\n  -->\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿﻿      Personal Informations                                  Save            Saved the following values{{payLoad}}  -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DynamicFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicFormQuestionComponent.html":{"url":"components/DynamicFormQuestionComponent.html","title":"component - DynamicFormQuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicFormQuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/r-form/dynamic-form-question.component.ts\n\n\n    \n        Description\n    \n    \n        Component of each question in the form \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                styleUrls\n                ./input-form.css\n            \n\n\n\n            \n                templateUrl\n                ./dynamic-form-question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form-question.component.ts:15\n                            \n                        \n                \n                    \n                        Input FormGroup \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :         QuestionBase\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/r-form/dynamic-form-question.component.ts:13\n                            \n                        \n                \n                    \n                        Input Question  \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/r-form/dynamic-form-question.component.ts:17\n                                \n                            \n                    \n                        \n                                Validate the Question \n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { QuestionBase } from './question-base';\n/** Component of each question in the form */\n@Component({\n  selector: 'app-question',\n  styleUrls: ['./input-form.css'],\n  templateUrl: './dynamic-form-question.component.html'\n})\nexport class DynamicFormQuestionComponent {\n  /** Input Question  */\n  @Input() question: QuestionBase;\n  /** Input FormGroup */\n  @Input() form: FormGroup;\n  /** Validate the Question */\n  get isValid() { return this.form.controls[this.question.key].valid; }\n}\n\n    \n\n    \n        ﻿      \n\n        \n          \n          {{question.label}}\n          \n\n          \n          \n          \n            {{opt.value}}\n          \n          \n            {{question.label}} is required\n          \n          \n        \n\n      \n\n    \n\n    \n                \n                    ./input-form.css\n                \n                .example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\ntd {\n  padding-right: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿                                  {{question.label}}                                                    {{opt.value}}                                {{question.label}} is required                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DynamicFormQuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/event.service.ts\n        \n\n            \n                Description\n            \n            \n                Event Service helps us to get the Server Sent Events from our remote or local server\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                evs\n                            \n                            \n                                    Static\n                                local\n                            \n                            \n                                    Static\n                                server\n                            \n                            \n                                    Private\n                                subj\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUpdates\n                            \n                            \n                                returnAsObservable\n                            \n                            \n                                stopUpdates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/event.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUpdates\n                        \n                        \n                    \n                \n            \n            \n                \ngetUpdates(host)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/event.service.ts:37\n                \n            \n\n\n            \n                \n                    Start Listening from the event source in our local server, emitting events to the component and handling errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        EventService.server\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            returnAsObservable\n                        \n                        \n                    \n                \n            \n            \n                \nreturnAsObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/event.service.ts:31\n                \n            \n\n\n            \n                \n                    An observable so we can subscribe for the events emitted from this class.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopUpdates\n                        \n                        \n                    \n                \n            \n            \n                \nstopUpdates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/event.service.ts:81\n                \n            \n\n\n            \n                \n                    This function Stops the communication between the app and the event source\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            evs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:19\n                            \n                        \n\n                \n                    \n                        Event Source Object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            local\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:3003\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:14\n                            \n                        \n\n                \n                    \n                        URL of the local server \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:3000\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the remote server \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.type)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:27\n                            \n                        \n\n                \n                    \n                        BehaviorSubject Used to emit data to other components\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/event.service.ts:23\n                            \n                        \n\n                \n                    \n                        Type used to know which data type emitted to the component.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {BehaviorSubject} from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n/**\n * Event Service helps us to get the Server Sent Events from our remote or local server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  /** URL of the remote server */\n  static server=\"http://localhost:3000\";\n  /** URL of the local server */\n  static local=\"http://localhost:3003\";\n  constructor() {}\n  /**\n   * Event Source Object\n   */\n  evs: EventSource;\n  /**\n   * Type used to know which data type emitted to the component.\n   */\n  type=\"\";\n  /**\n   * BehaviorSubject Used to emit data to other components\n   */\n  private subj = new BehaviorSubject(this.type);\n  /**\n   * An observable so we can subscribe for the events emitted from this class.\n   */\n  returnAsObservable() {\n      return this.subj.asObservable();\n  }\n  /**\n   * Start Listening from the event source in our local server, emitting events to the component and handling errors.\n   */\n  getUpdates(host=EventService.server) {\n      let subject = this.subj;\n      /**\n       * Local Variable used to know which state where we are:\n       *\n       * Initial State =-1\n       */\n      let k=-1;\n      if (typeof(EventSource) !== 'undefined') {\n          this.evs = new EventSource(host+'/api/state');\n          this.evs.onopen = function(e) {\n              console.log(\"Opening connection with \" + host);\n          }\n          this.evs.addEventListener(\"dbx\", function(e) {\n            if (k==-1 || k==0)\n              subject.next(e[\"data\"]+'x');\n            k=0;\n          });\n          this.evs.addEventListener(\"db\", function(e) {\n            if (k==-1 || k==0)\n              subject.next(e[\"data\"]);\n            k=0;\n          });\n          this.evs.onerror = function(e) {\n            if (k==-1){\n              if (host==EventService.server)\n                subject.next('ex');\n              else subject.next('e');\n            }\n            if(k==2){\n              if(host==EventService.server)\n                subject.next(\"rx\");\n              else subject.next(\"r\");\n            }\n            if (this.readyState == 0) {\n              console.log(\"Reconnecting… \"+host);\n              k++;\n            }\n          }\n      }\n  }\n  /**\n   * This function Stops the communication between the app and the event source\n   */\n  stopUpdates() {\n    if(this.evs.url==EventService.server+\"/api/state\"){\n      return null;\n    }\n    console.log(\"Closing connection with \" + this.evs.url);\n      this.evs.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/file-upload/file-upload.component.ts\n\n\n    \n        Description\n    \n    \n        Upload Page at /form/pic and /form/bio\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-upload\n            \n\n            \n                styleUrls\n                ./file-upload.component.css\n            \n\n\n\n            \n                templateUrl\n                ./file-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentFile\n                            \n                            \n                                    Public\n                                fb\n                            \n                            \n                                imageURL\n                            \n                            \n                                message\n                            \n                            \n                                pageTitle\n                            \n                            \n                                progress\n                            \n                            \n                                selectedFiles\n                            \n                            \n                                type\n                            \n                            \n                                uploadForm\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                selectFile\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, stService: StateParameterService, fb: FormBuilder, fileUploadService: FileUploadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/file-upload.component.ts:35\n                            \n                        \n\n                \n                    \n                            Construct the component and Build the reactive form\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use Router service to navigate among views\n\n                                                        \n                                                \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use the fields in the bag or to backup the image uploaded\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Build a Reactive Form\n\n                                                        \n                                                \n                                                \n                                                        fileUploadService\n                                                  \n                                                        \n                                                                        FileUploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Inject the File Upload Service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:54\n                \n            \n\n\n            \n                \n                    Initiate the component with the title according to the router url\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectFile\n                        \n                        \n                    \n                \n            \n            \n                \nselectFile(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:68\n                \n            \n\n\n            \n                \n                    This function is triggered when the user chooses an image to upload so the preview will be shown in the page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event target containing the image file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \nupload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:85\n                \n            \n\n\n            \n                \n                    This function is triggered when the user hits the button to upload the photo\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:25\n                            \n                        \n\n                \n                    \n                        Current File selected \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:44\n                            \n                        \n\n                \n                    \n                        Build a Reactive Form\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:19\n                            \n                        \n\n                \n                    \n                        URL of the image \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:29\n                            \n                        \n\n                \n                    \n                        Message shown to the user when the upload has been succefully done or not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:33\n                            \n                        \n\n                \n                    \n                        Page Title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:27\n                            \n                        \n\n                \n                    \n                        Progress of the upload \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:23\n                            \n                        \n\n                \n                    \n                        Selected files from the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:35\n                            \n                        \n\n                \n                    \n                        Type of the image sent (Portrait or fingerprint) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:21\n                            \n                        \n\n                \n                    \n                        FormGroup of the upload form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:31\n                            \n                        \n\n                \n                    \n                        the next URL to visit \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit , EventEmitter,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { FileUploadService } from \"./upload.service\";\nimport { Router, NavigationStart } from '@angular/router';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { StateParameterService } from '../shared/st-parameter.service';\nimport { EventService } from '../shared/event.service';\n\n/**\n * Upload Page at /form/pic and /form/bio\n */\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n  /** URL of the image */\n  imageURL: string;\n  /** FormGroup of the upload form */\n  uploadForm: FormGroup;\n  /** Selected files from the user */\n  selectedFiles: FileList;\n  /** Current File selected */\n  currentFile: File;\n  /** Progress of the upload */\n  progress = 0;\n  /** Message shown to the user when the upload has been succefully done or not */\n  message:string;\n  /** the next URL to visit */\n  url:string;\n  /** Page Title */\n  pageTitle:string;\n  /** Type of the image sent (Portrait or fingerprint) */\n  type:string;\n  /**\n   * Construct the component and Build the reactive form\n   * @param router use Router service to navigate among views\n   * @param stService use the fields in the bag or to backup the image uploaded\n   * @param fb Build a Reactive Form\n   * @param fileUploadService Inject the File Upload Service\n   */\n  constructor(private router : Router,private stService :StateParameterService,\n    public fb: FormBuilder,private fileUploadService: FileUploadService) {\n    // Reactive Form\n    this.uploadForm = this.fb.group({\n      avatar: [null],\n      name: ['']\n    });\n  }\n  /**\n   * Initiate the component with the title according to the router url\n   */\n  ngOnInit(): void {\n    if (this.router.url == '/form/pic') {\n      this.pageTitle = \"Upload Portrait\";\n      this.type=\"pic\";\n    }\n    else if (this.router.url == '/form/bio') {\n      this.pageTitle = \"Upload Biometry Info\";\n      this.type=\"bio\";\n    }\n  }\n  /**\n   * This function is triggered when the user chooses an image to upload so the preview will be shown in the page\n   * @param event Event target containing the image file\n   */\n  selectFile(event): void {\n    this.selectedFiles = event.target.files;\n    const file = (event.target as HTMLInputElement).files[0];\n      this.uploadForm.patchValue({\n        avatar: file\n      });\n      this.uploadForm.get('avatar').updateValueAndValidity()\n      // File Preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imageURL = reader.result as string;\n      }\n      reader.readAsDataURL(file)\n  }\n  /**\n   * This function is triggered when the user hits the button to upload the photo\n   */\n  upload(): void {\n    this.progress = 0;\n    this.currentFile = this.selectedFiles.item(0);\n\n    this.fileUploadService.postImg(this.currentFile,this.stService.id,this.stService.host,this.type).subscribe(\n      (event: any) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.message = event.body.message;\n          //console.log(event.body.message);\n          this.message = 'Uploaded Successfully!';\n          if (this.router.url === '/form/pic'){\n            this.stService.pic=this.currentFile;\n            this.url='/form/bio';\n          }\n          else if (this.router.url === '/form/bio'){\n            this.stService.form=null;\n            this.stService.pic=null;\n            if(this.stService.host==EventService.local)\n              this.stService.busy.emit(false);\n            this.url='/';\n          }\n          setTimeout(() =>\n          {\n              this.router.navigate([this.url]);\n          },\n          1000);\n\n          this.selectedFiles = undefined;\n        }\n      },\n      err => {\n        this.progress = 0;\n        this.message = 'Could not upload the file!';\n        //this.currentFile = undefined;\n      });\n\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{pageTitle}}\n  \n  \n    \n\n        \n          \n            \n              {{ progress }}%\n            \n          \n\n          \n            Select Image\n            \n            image\n            -->\n          \n\n          \n            Upload\n          \n         \n            Done\n          -->\n          {{ message }}\n          \n            Preview\n              \n              \n                \n              \n          \n\n        \n    \n  \n\n\n    \n\n    \n                \n                    ./file-upload.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{pageTitle}}                                                    {{ progress }}%                                            Select Image                        image            -->                                Upload                               Done          -->          {{ message }}                      Preview                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileUploadModule.html":{"url":"modules/FileUploadModule.html","title":"module - FileUploadModule","body":"\n                   \n\n\n\n\n    Modules\n    FileUploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileUploadModule\n\n\n\ncluster_FileUploadModule_declarations\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nFileUploadModule -->\n\nFileUploadComponent->FileUploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/file-upload/file-upload.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FileUploadComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FileUploadComponent } from './file-upload.component';\nimport { RouterModule } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { FormGuard } from \"./form.guard\";\n@NgModule({\n  declarations: [\n    FileUploadComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressBarModule,\n    ReactiveFormsModule,\n    MaterialFileInputModule,\n    RouterModule.forChild([\n      { path: 'form/pic', canActivate: [FormGuard], component: FileUploadComponent },\n      { path: 'form/bio', canActivate: [FormGuard], component: FileUploadComponent }\n    ]),\n  ],\n  exports:[\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ]\n})\nexport class FileUploadModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileUploadService.html":{"url":"injectables/FileUploadService.html","title":"injectable - FileUploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileUploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file-upload/upload.service.ts\n        \n\n            \n                Description\n            \n            \n                FileUploadService Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postImg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/upload.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructs the Injectable\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTTP Client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postImg\n                        \n                        \n                    \n                \n            \n            \n                \npostImg(file: File, id: string, hostname: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/upload.service.ts:22\n                \n            \n\n\n            \n                \n                    Build the post request of the image to the server\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        File Object to upload\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Citizen ID to append to the formdata of the request\n\n                                    \n                                \n                                \n                                    hostname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the server (remote or local)\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Refers to the type of the image (Portrait or fingerprint)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent,HttpHeaders } from  '@angular/common/http';\nimport { Observable, } from 'rxjs';\n\n/** FileUploadService Injectable */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n  /**\n   * Constructs the Injectable\n   * @param http HTTP Client\n   */\n  constructor(private http: HttpClient) { }\n  /**\n   * Build the post request of the image to the server\n   * @param file File Object to upload\n   * @param id Citizen ID to append to the formdata of the request\n   * @param hostname URL of the server (remote or local)\n   * @param type Refers to the type of the image (Portrait or fingerprint)\n   */\n  postImg(file: File,id:string,hostname:string,type:string): Observable> {\n    const formData = new FormData();\n    formData.append('_id',id);\n    formData.append('file', file,file.name);\n\n    const req = new HttpRequest('POST', hostname+'/api/upload/'+type, formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n    return this.http.request(req);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FormGuard.html":{"url":"guards/FormGuard.html","title":"guard - FormGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    FormGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/file-upload/form.guard.ts\n            \n\n                \n                Description\n                \n                \n                    we use this Form Guard to prohibit access to the next steps of the form if we don't have retrieved the citizen id \n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, stService: StateParameterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/form.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Construct the FormGuard Injectable\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use Router service to navigate among views\n\n                                                        \n                                                \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                use the fields in the bag to retreive the citizen id if it exists\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/form.guard.ts:20\n                \n            \n\n\n            \n                \n                    Grant the access by returning true if the citizen id exists in the bag\n\n\n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\n\n/** we use this Form Guard to prohibit access to the next steps of the form if we don't have retrieved the citizen id */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGuard implements CanActivate {\n  /**\n   * Construct the FormGuard Injectable\n   * @param router use Router service to navigate among views\n   * @param stService use the fields in the bag to retreive the citizen id if it exists\n   */\n  constructor(private router: Router,private stService:StateParameterService) { }\n  /**\n   * Grant the access by returning true if the citizen id exists in the bag\n   */\n  canActivate(): Observable | Promise | boolean | UrlTree {\n\n    if (!this.stService.id) {\n      alert('Please complete the form before uploading the photos!');\n      this.router.navigate(['/form']);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        address\n                                \n                                \n                                        bio\n                                \n                                \n                                        cin\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        pic\n                                \n                                \n                                        sexe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cin\n                                    \n                                \n                                \n                                    \n                                        cin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pic\n                                    \n                                \n                                \n                                    \n                                        pic:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sexe\n                                    \n                                \n                                \n                                    \n                                        sexe:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  cin: string;\n  address: string;\n  sexe:string;\n  pic: string;\n  bio:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionBase.html":{"url":"classes/QuestionBase.html","title":"class - QuestionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlType\n                            \n                            \n                                key\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                order\n                            \n                            \n                                required\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/r-form/question-base.ts:17\n                            \n                        \n\n                \n                    \n                            Construct each question from the options below\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options of the question\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the question (textbox,area,dropdown,checkbox...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:5\n                            \n                        \n\n                \n                    \n                        key of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:7\n                            \n                        \n\n                \n                    \n                        Label or the placeholder of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:17\n                            \n                        \n\n                \n                    \n                        Options to choose in the case of a dropdown for example \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:11\n                            \n                        \n\n                \n                    \n                        order of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:9\n                            \n                        \n\n                \n                    \n                        Is the question required or not ? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:15\n                            \n                        \n\n                \n                    \n                        Type of the question (text,number...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-base.ts:3\n                            \n                        \n\n                \n                    \n                        Type of the question \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class QuestionBase {\n  /** Type of the question */\n  value: T;\n  /** key of the question in the form */\n  key: string;\n  /** Label or the placeholder of the question in the form */\n  label: string;\n  /** Is the question required or not ? */\n  required: boolean;\n  /** order of the question in the form */\n  order: number;\n  /** Type of the question (textbox,area,dropdown,checkbox...) */\n  controlType: string;\n  /** Type of the question (text,number...) */\n  type: string;\n  /** Options to choose in the case of a dropdown for example */\n  options: {key: string, value: string}[];\n  /**\n   * Construct each question from the options below\n   * @param options Options of the question\n   */\n  constructor(options: {\n      value?: T;\n      key?: string;\n      label?: string;\n      required?: boolean;\n      order?: number;\n      controlType?: string;\n      type?: string;\n      options?: {key: string, value: string}[];\n    } = {}) {\n    this.value = options.value;\n    this.key = options.key || '';\n    this.label = options.label || '';\n    this.required = !!options.required;\n    this.order = options.order === undefined ? 1 : options.order;\n    this.controlType = options.controlType || '';\n    this.type = options.type || '';\n    this.options = options.options || [];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionControlService.html":{"url":"injectables/QuestionControlService.html","title":"injectable - QuestionControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-control.service.ts\n        \n\n            \n                Description\n            \n            \n                QuestionControlService Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/r-form/question-control.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ntoFormGroup(questions: QuestionBase[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/r-form/question-control.service.ts:13\n                \n            \n\n\n            \n                \n                    Constructs a FormGroup from the questionBase objects\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    questions\n                                    \n                                                QuestionBase[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Questions from QuestionBase objects in an array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { QuestionBase } from './question-base';\n/** QuestionControlService Injectable */\n@Injectable()\nexport class QuestionControlService {\n  constructor() { }\n  /**\n   * Constructs a FormGroup from the questionBase objects\n   * @param questions Questions from QuestionBase objects in an array\n   */\n  toFormGroup(questions: QuestionBase[] ) {\n    const group: any = {};\n\n    questions.forEach(question => {\n      group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\n                                              : new FormControl(question.value || '');\n    });\n    return new FormGroup(group);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question.service.ts\n        \n\n            \n                Description\n            \n            \n                QuestionService Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuestions\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuestions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/r-form/question.service.ts:13\n                \n            \n\n\n            \n                \n                    Returns the observable of questions to show in the form \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AreaQuestion } from './question-loc';\nimport { QuestionBase } from './question-base';\nimport { TextboxQuestion } from './question-textbox';\nimport { DropdownQuestion } from './question-dropdown';\n\nimport { of } from 'rxjs';\n/** QuestionService Injectable */\n@Injectable()\nexport class QuestionService {\n  /** Returns the observable of questions to show in the form */\n  getQuestions() {\n\n    const questions: QuestionBase[] = [\n\n      new DropdownQuestion({\n        key: 'sexe',\n        label: 'Gender',\n        required: true,\n        options: [\n          {key: 'M',  value: 'Man'},\n          {key: 'F',  value: 'Woman'}\n        ],\n        order: 5\n      }),\n      new AreaQuestion({\n        key: 'address',\n        label: 'Address',\n        required: true,\n        order: 4\n      }),\n      new TextboxQuestion({\n        key: 'cin',\n        label: 'CIN',\n        required: true,\n        order: 3\n      }),\n      new TextboxQuestion({\n        key: 'firstName',\n        label: 'First name',\n        required: true,\n        order: 1\n      }),\n\n      new TextboxQuestion({\n        key: 'lastName',\n        label: 'Last Name',\n        type: 'text',\n        required: true,\n        order: 2\n      })\n    ];\n\n    return of(questions.sort((a, b) => a.order - b.order));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RFormComponent.html":{"url":"components/RFormComponent.html","title":"component - RFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/r-form/r-form.component.ts\n\n\n    \n        Description\n    \n    \n        Form Component at /form \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                QuestionService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questions$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuestionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/r-form/r-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructs the form component with the questions retreived from the injectable\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the QuestionService Injectable\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/r-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        Observable of QuestionBase objects in an array \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { QuestionService } from './question.service';\nimport { QuestionBase } from './question-base';\nimport { Observable } from 'rxjs';\n/** Form Component at /form */\n@Component({\n  selector: 'app-root',\n  template: `\n    \n      \n    \n  `,\n  providers:  [QuestionService]\n})\nexport class RFormComponent {\n  /** Observable of QuestionBase objects in an array */\n  questions$: Observable[]>;\n  /**\n   * Constructs the form component with the questions retreived from the injectable\n   * @param service Instance of the QuestionService Injectable\n   */\n  constructor(service: QuestionService) {\n    this.questions$ = service.getQuestions();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RFormModule.html":{"url":"modules/RFormModule.html","title":"module - RFormModule","body":"\n                   \n\n\n\n\n    Modules\n    RFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RFormModule\n\n\n\ncluster_RFormModule_declarations\n\n\n\ncluster_RFormModule_DynamicFormComponent_providers\n\n\n\ncluster_RFormModule_RFormComponent_providers\n\n\n\ncluster_RFormModule_bootstrap\n\n\n\n\nDynamicFormComponent\n\nDynamicFormComponent\n\n\n\nRFormModule\n\nRFormModule\n\nRFormModule -->\n\nDynamicFormComponent->RFormModule\n\n\n\n\n\nDynamicFormQuestionComponent\n\nDynamicFormQuestionComponent\n\nRFormModule -->\n\nDynamicFormQuestionComponent->RFormModule\n\n\n\n\n\nRFormComponent\n\nRFormComponent\n\nRFormModule -->\n\nRFormComponent->RFormModule\n\n\n\n\n\nRFormComponent \n\nRFormComponent \n\nRFormComponent  -->\n\nRFormModule->RFormComponent \n\n\n\n\n\nQuestionControlService\n\nQuestionControlService\n\nDynamicFormComponent -->\n\nQuestionControlService->DynamicFormComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nDynamicFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->DynamicFormComponent\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nRFormComponent -->\n\nQuestionService->RFormComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/r-form/r-form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicFormComponent\n                        \n                        \n                            DynamicFormQuestionComponent\n                        \n                        \n                            RFormComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            RFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { RFormComponent } from './r-form.component';\nimport { DynamicFormComponent } from './dynamic-form.component';\nimport { DynamicFormQuestionComponent } from './dynamic-form-question.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [ BrowserModule, ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    RouterModule.forChild([\n      { path: 'form', component: RFormComponent },\n    ]), ],\n  declarations: [ RFormComponent, DynamicFormComponent, DynamicFormQuestionComponent ],\n  bootstrap: [ RFormComponent ],\n  exports:[\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule\n  ]\n})\nexport class RFormModule {\n  constructor() {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateParameterService.html":{"url":"injectables/StateParameterService.html","title":"injectable - StateParameterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateParameterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/st-parameter.service.ts\n        \n\n            \n                Description\n            \n            \n                Bag to store the fields that we need in our application\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                busy\n                            \n                            \n                                form\n                            \n                            \n                                host\n                            \n                            \n                                id\n                            \n                            \n                                pic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/st-parameter.service.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:18\n                            \n                        \n\n                \n                    \n                        The event emitter that we use to lock the switching from the 2 modes (online and local) inside a form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSON\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:14\n                            \n                        \n\n                \n                    \n                        The form filled in by the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:12\n                            \n                        \n\n                \n                    \n                        It can takes URL of the remote server or the local one \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:10\n                            \n                        \n\n                \n                    \n                        Id of the citizen \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/st-parameter.service.ts:16\n                            \n                        \n\n                \n                    \n                        Portrait picture of the citizen \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\n/**\n * Bag to store the fields that we need in our application\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateParameterService {\n  /** Id of the citizen */\n  id: string;\n  /** It can takes URL of the remote server or the local one */\n  host:string;\n  /** The form filled in by the user */\n  form:JSON;\n  /** Portrait picture of the citizen */\n  pic:File;\n  /** The event emitter that we use to lock the switching from the 2 modes (online and local) inside a form */\n  busy: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextboxQuestion.html":{"url":"classes/TextboxQuestion.html","title":"class - TextboxQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextboxQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/r-form/question-textbox.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuestionBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlType\n                            \n                            \n                                controlType\n                            \n                            \n                                key\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                order\n                            \n                            \n                                required\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'textbox'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/r-form/question-textbox.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:13\n\n                            \n                        \n\n                \n                    \n                        Type of the question (textbox,area,dropdown,checkbox...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:5\n\n                            \n                        \n\n                \n                    \n                        key of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:7\n\n                            \n                        \n\n                \n                    \n                        Label or the placeholder of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:17\n\n                            \n                        \n\n                \n                    \n                        Options to choose in the case of a dropdown for example \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:11\n\n                            \n                        \n\n                \n                    \n                        order of the question in the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:9\n\n                            \n                        \n\n                \n                    \n                        Is the question required or not ? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:15\n\n                            \n                        \n\n                \n                    \n                        Type of the question (text,number...) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionBase:3\n\n                            \n                        \n\n                \n                    \n                        Type of the question \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QuestionBase } from './question-base';\n\nexport class TextboxQuestion extends QuestionBase {\n  controlType = 'textbox';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDetailComponent.html":{"url":"components/UserDetailComponent.html","title":"component - UserDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/user-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./user-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                pageTitle\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBack\n                            \n                            \n                                sanatizeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, userService: UserService, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-detail.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBack\n                        \n                        \n                    \n                \n            \n            \n                \nonBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sanatizeUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsanatizeUrl(b64ImageUrl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    b64ImageUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-detail.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Citizen Detail'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-detail.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-detail.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { IUser } from './user';\nimport { UserService } from './user.service';\n\n@Component({\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n  pageTitle = 'Citizen Detail';\n  errorMessage = '';\n  user: IUser | undefined;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private userService: UserService,\n              private domSanitizer: DomSanitizer) {\n  }\n\n  ngOnInit(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = param;\n      this.getUser(id);\n    }\n  }\n\n  getUser(id: string): void {\n    this.userService.getUser(id).subscribe({\n      next: user => this.user = user,\n      error: err => this.errorMessage = err\n    });\n  }\n  sanatizeUrl(b64ImageUrl): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(b64ImageUrl);\n  }\n  onBack(): void {\n    this.router.navigate(['/users']);\n  }\n}\n    \n\n    \n        \n  \n    {{pageTitle + ': ' + user.firstName + ' ' + user.lastName}}\n  \n\n  \n    \n      \n        \n          First Name:\n          {{user.firstName}}\n        \n        \n          Last Name:\n          {{ user.lastName}}\n                \n          CIN:\n          {{user.cin}}\n        \n        \n           Address:\n          {{ user.address}}\n        \n        \n          Genre:\n          {{ user.sexe}}\n        \n      \n      \n\n      \n\n      \n        \n      \n\n\n      \n        \n      \n    \n\n\n      \n    \n  \n\n  \n    \n       Back\n    \n  \n\n    \n\n    \n                \n                    ./user-detail.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{pageTitle + \\': \\' + user.firstName + \\' \\' + user.lastName}}                                First Name:          {{user.firstName}}                          Last Name:          {{ user.lastName}}                          CIN:          {{user.cin}}                           Address:          {{ user.address}}                          Genre:          {{ user.sexe}}                                                                                               Back      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserDetailGuard.html":{"url":"guards/UserDetailGuard.html","title":"guard - UserDetailGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserDetailGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/users/user-detail.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-detail.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-detail.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDetailGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    const id = next.url[1].path;\n    \n    if (!id) {\n      alert('Invalid citizen Id');\n      this.router.navigate(['/users']);\n      return false;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./user-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                errorMessage\n                            \n                            \n                                expandedElement\n                            \n                            \n                                imageMargin\n                            \n                            \n                                imageWidth\n                            \n                            \n                                isLoadingResults\n                            \n                            \n                                pageTitle\n                            \n                            \n                                showImage\n                            \n                            \n                                Users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sanatizeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domSanitizer: DomSanitizer, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-list.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-list.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-list.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sanatizeUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsanatizeUrl(b64ImageUrl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user-list.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    b64ImageUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['pic', 'firstName', 'lastName', 'cin','address','sexe']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageMargin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoadingResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Citizens List'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/user-list.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { IUser } from './user';\nimport { UserService } from './user.service';\n\n@Component({\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded  collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n\n    ]),\n  ],\n})\nexport class UserListComponent implements OnInit {\n  pageTitle ='Citizens List';\n  imageWidth = 50;\n  imageMargin = 2;\n  showImage = true;\n  errorMessage = '';\n  expandedElement: IUser | null;\n  isLoadingResults = false;\n\n  Users: IUser[] = [];\n  displayedColumns: string[] = ['pic', 'firstName', 'lastName', 'cin','address','sexe'];\n  dataSource;\n\n  constructor(private domSanitizer: DomSanitizer,private userService: UserService) { }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  sanatizeUrl(b64ImageUrl): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(b64ImageUrl);\n  }\n\n\n\n  ngOnInit(): void {\n    this.isLoadingResults = true;\n\n    this.userService.getUsers().subscribe({\n      next: Users => {\n        this.Users = Users;\n        this.dataSource = new MatTableDataSource(this.Users);\n        this.isLoadingResults = false;\n\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n}\n    \n\n    \n        \n  \n    {{pageTitle}}\n  \n  \n    \n    \n      \n        Filter\n        \n      \n      \n\n        \n           IMAGE \n\n          \n               \n        \n\n        \n           FIRST NAME \n          \n            \n            {{element.firstName}} \n        \n\n        \n           LAST NAME \n                         {{element.lastName}} \n        \n\n        \n           CIN \n           {{element.cin}} \n        \n\n\n        \n           ADDRESS \n           {{element.address}} \n        \n\n        \n           GENDRE \n           {{element.sexe}} \n        \n\n        \n          \n            \n              \n                \n                  \n                  \n                \n                \n                   {{element.firstName}}  {{element.lastName}}  \n                \n              \n              \n          \n        \n\n        \n        \n        \n        \n\n        \n          No data matching the filter \"{{input.value}}\"\n        \n      \n\n\n    \n    \n      \n   \n      \n      \n        no citizents to show    \n    \n    \n     Error: {{ errorMessage }}\n     \n  \n\n\n    \n\n    \n                \n                    ./user-list.component.css\n                \n                thead {\n  color: #337AB7;\n}\ntable {\n  width: 100%;\n}\n\ntr.example-detail-row {\n  height: 0;\n}\n\ntr.example-element-row:not(.example-expanded-row):hover {\n  background: whitesmoke;\n}\n\ntr.example-element-row:not(.example-expanded-row):active {\n  background: #efefef;\n}\n\n.example-element-row td {\n  border-bottom-width: 0;\n}\n\n.example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n\n.example-element-diagram {\n  width: 340px;\n  border: 1.5px solid black;\n  padding: 10px;\n  padding-bottom: 5px;\n  font-weight: lighter;\n  margin: 14px 0;\n  margin-left: 10%;\n  height: 210px;\n}\n.example-element-symbol {\n  font-weight: bold;\n  width: 80;\n  line-height: normal;\n}\n\n.example-loading-shade {\n  position: absolute;\n  top: 0;\n  left: 0;\n  margin: 30% 30%;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.example-element-name {\n  font-weight: bold;\n  line-height: normal;\n  padding-bottom: 5px;\nfont: large;\npadding-left: 75px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{pageTitle}}                          Filter                                       IMAGE                                                     FIRST NAME                                   {{element.firstName}}                            LAST NAME                          {{element.lastName}}                            CIN            {{element.cin}}                            ADDRESS            {{element.address}}                            GENDRE            {{element.sexe}}                                                                                                                                                            {{element.firstName}}  {{element.lastName}}                                                                                                                  No data matching the filter \"{{input.value}}\"                                                   no citizents to show                 Error: {{ errorMessage }}       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nUserDetailComponent\n\nUserDetailComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserDetailComponent->UserModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nUserModule -->\n\nUserListComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserDetailComponent\n                        \n                        \n                            UserListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { UserListComponent } from './user-list.component';\nimport { UserDetailComponent } from './user-detail.component';\nimport { RouterModule } from '@angular/router';\nimport { UserDetailGuard } from './user-detail.guard';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    UserListComponent,\n    UserDetailComponent,\n  ],\n  imports: [\n    MatFormFieldModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    CommonModule,\n    MatProgressSpinnerModule,\n    RouterModule.forChild([\n      { path: 'users', component: UserListComponent },\n      {\n        path: 'users/:id',\n        canActivate: [UserDetailGuard],\n        component: UserDetailComponent\n      }\n    ])\n    ],\n  exports:[\n    MatTableModule,\n    MatFormFieldModule\n  ]\n})\nexport class UserModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, http: HttpClient, stService: StateParameterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stService\n                                                  \n                                                        \n                                                                        StateParameterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\n\nimport { IUser } from './user';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private router : Router,private http: HttpClient,private stService:StateParameterService) { }\n\n  getUsers(): Observable {\n    if(!this.stService.host)\n    this.router.navigate([\"/\"]);\n    return this.http.get(this.stService.host + \"/api/getAll\")\n      .pipe(\n        tap(data => console.log('')),\n        catchError(this.handleError)\n      );\n  }\n\n  getUser(id: string): Observable {\n    return this.getUsers()\n      .pipe(\n        map((users: IUser[]) => users.find(p => p._id === id))\n      );\n  }\n\n  private handleError(err: HttpErrorResponse): Observable {\n   \n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n   \n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomeComponent.html":{"url":"components/WelcomeComponent.html","title":"component - WelcomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WelcomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/welcome.component.ts\n\n\n    \n        Description\n    \n    \n        Welcome Component at /home\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./welcome.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Home'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/welcome.component.ts:10\n                            \n                        \n\n                \n                    \n                        Page title \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * Welcome Component at /home\n */\n@Component({\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n  /** Page title */\n  public pageTitle = 'Home';\n}\n\n    \n\n    \n        ﻿\n  \n    {{pageTitle}}\n  \n  \n    \n      \n        \n      \n\n      \n        Source Code\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿      {{pageTitle}}                                          Source Code            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'pm-root'},{'name': 'CountdownSnackbarComponent', 'selector': 'snackbar'},{'name': 'DynamicFormComponent', 'selector': 'app-dynamic-form'},{'name': 'DynamicFormQuestionComponent', 'selector': 'app-question'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'RFormComponent', 'selector': 'app-root'},{'name': 'UserDetailComponent', 'selector': ''},{'name': 'UserListComponent', 'selector': ''},{'name': 'WelcomeComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            CountdownSnackbarComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            injectable\n            CountdownService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/file-upload/file-upload.component.ts\n            \n            component\n            FileUploadComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/file-upload/form.guard.ts\n            \n            guard\n            FormGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/file-upload/upload.service.ts\n            \n            injectable\n            FileUploadService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/home/welcome.component.ts\n            \n            component\n            WelcomeComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/r-form/dynamic-form-question.component.ts\n            \n            component\n            DynamicFormQuestionComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/r-form/dynamic-form.component.ts\n            \n            component\n            DynamicFormComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/r-form/question-base.ts\n            \n            class\n            QuestionBase\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/r-form/question-control.service.ts\n            \n            injectable\n            QuestionControlService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/r-form/question-dropdown.ts\n            \n            class\n            DropdownQuestion\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/r-form/question-loc.ts\n            \n            class\n            AreaQuestion\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/r-form/question-textbox.ts\n            \n            class\n            TextboxQuestion\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/r-form/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/r-form/r-form.component.ts\n            \n            component\n            RFormComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/event.service.ts\n            \n            injectable\n            EventService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/shared/st-parameter.service.ts\n            \n            injectable\n            StateParameterService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/users/user-detail.component.ts\n            \n            component\n            UserDetailComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/users/user-detail.guard.ts\n            \n            guard\n            UserDetailGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/users/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/users/user.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.14\n        \n            @angular/cdk : ^10.2.4\n        \n            @angular/common : ^10.0.14\n        \n            @angular/compiler : ^10.0.14\n        \n            @angular/core : ^10.0.14\n        \n            @angular/forms : ^10.0.14\n        \n            @angular/material : ^10.2.4\n        \n            @angular/platform-browser : ^10.0.14\n        \n            @angular/platform-browser-dynamic : ^10.0.14\n        \n            @angular/router : ^10.0.14\n        \n            @angular/service-worker : ^10.0.14\n        \n            bootstrap : ^4.5.0\n        \n            font-awesome : ^4.7.0\n        \n            ngx-cookie-service : ^10.1.1\n        \n            ngx-material-file-input : ^2.1.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.2\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nYARLOMIA\nThis project was generated with Angular CLI version 10.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileUploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FileUploadModule\n\n\n\ncluster_FileUploadModule_declarations\n\n\n\ncluster_RFormModule\n\n\n\ncluster_RFormModule_declarations\n\n\n\ncluster_RFormModule_DynamicFormComponent_providers\n\n\n\ncluster_RFormModule_RFormComponent_providers\n\n\n\ncluster_RFormModule_bootstrap\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCountdownSnackbarComponent\n\nCountdownSnackbarComponent\n\nAppModule -->\n\nCountdownSnackbarComponent->AppModule\n\n\n\n\n\nWelcomeComponent\n\nWelcomeComponent\n\nAppModule -->\n\nWelcomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nAppModule -->\n\nFileUploadModule->AppModule\n\n\n\n\n\nRFormModule\n\nRFormModule\n\nAppModule -->\n\nRFormModule->AppModule\n\n\n\n\n\nRFormComponent \n\nRFormComponent \n\nRFormComponent  -->\n\nRFormModule->RFormComponent \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nCountdownService\n\nCountdownService\n\nAppModule -->\n\nCountdownService->AppModule\n\n\n\n\n\nStateParameterService\n\nStateParameterService\n\nAppModule -->\n\nStateParameterService->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nFileUploadModule -->\n\nFileUploadComponent->FileUploadModule\n\n\n\n\n\nDynamicFormComponent\n\nDynamicFormComponent\n\nRFormModule -->\n\nDynamicFormComponent->RFormModule\n\n\n\n\n\nDynamicFormQuestionComponent\n\nDynamicFormQuestionComponent\n\nRFormModule -->\n\nDynamicFormQuestionComponent->RFormModule\n\n\n\n\n\nRFormComponent\n\nRFormComponent\n\nRFormModule -->\n\nRFormComponent->RFormModule\n\n\n\n\n\nQuestionControlService\n\nQuestionControlService\n\nDynamicFormComponent -->\n\nQuestionControlService->DynamicFormComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nDynamicFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->DynamicFormComponent\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nRFormComponent -->\n\nQuestionService->RFormComponent\n\n\n\n\n\nUserDetailComponent\n\nUserDetailComponent\n\nUserModule -->\n\nUserDetailComponent->UserModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nUserModule -->\n\nUserListComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
